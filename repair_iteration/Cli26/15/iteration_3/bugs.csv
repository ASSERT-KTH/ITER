bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArgName,  opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArgName,  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArgName,  opt);	  Option    option    =    new    Option(optionalArgName,    description);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
2	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optional,  description);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optional,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optional,  description);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optional);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
3	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(opt  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(opt  +  2);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(opt  +  2);	  String    argName    =(String)this.optionalArgs.get(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
4	[BUG]  [BUGGY]  Object  type  =  getNumberOfArgs();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getNumberOfArgs();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getNumberOfArgs();	  Object    type    =    getRequiredType();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(1);	  String    argName    =(String)this.optionalArgs.get(0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
6	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(2);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(2);	  String    argName    =(String)this.optionalArgs.get(0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
7	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(name,  opt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(name,  opt);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(name,  opt);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    name);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
8	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  name);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  name);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  name);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    name);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
9	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  opt);	  Option    option    =    new    Option(optionalArg,    opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
10	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  optionalArg);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  optionalArg);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  optionalArg);	  Option    option    =    new    Option(optionalArg,    opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
11	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  options);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  options);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  options);	  Option    option    =    new    Option(optionalArg,    opt);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
12	[BUG]  [BUGGY]  String  argName  =(String)this.valuesep  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.valuesep  +  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.valuesep  +  1;	  String    argName    =(String)this.valuesep;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
13	[BUG]  [BUGGY]  char  argName  =(char)this.valuesep;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  char  argName  =(char)this.valuesep;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	char  argName  =(char)this.valuesep;	  String    argName    =(String)this.valuesep;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
14	[BUG]  [BUGGY]  Object  type  =  getType(optionalArg,  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(optionalArg,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(optionalArg,  description);	  Object    type    =    getType(opt,    description);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
15	[BUG]  [BUGGY]  Object  type  =  getType(opt,  description).toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt,  description).toLowerCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt,  description).toLowerCase();	  Object    type    =    getType(opt,    description);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
16	[BUG]  [BUGGY]  Object  type  =  getType(opt,  description,  newDescription);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt,  description,  newDescription);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt,  description,  newDescription);	  Object    type    =    getType(opt,    description);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
17	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  description.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  description.toCharArray());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  description.toCharArray());	  Option    option    =    new    Option(optionalArg,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
18	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toString());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toString());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  description.toString());	  Option    option    =    new    Option(optionalArg,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
19	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toCharArray(),  opt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toCharArray(),  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  description.toCharArray(),  opt);	  Option    option    =    new    Option(optionalArg,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
20	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  null);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  null);	  Option    option    =    new    Option(optionalArg,    options);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
21	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry().get(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getTypeRegistry().get(opt);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getTypeRegistry().get(opt);	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
22	[BUG]  [BUGGY]  Object  type  =  getRequiredTypeRegistry();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getRequiredTypeRegistry();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getRequiredTypeRegistry();	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
23	[BUG]  [BUGGY]  Option  option  =  new  Option(option,  description.toCharArray());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(option,  description.toCharArray());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(option,  description.toCharArray());	  Option    option    =    new    Option(option,    description);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
24	[BUG]  [BUGGY]  Option  option  =(Option)super.create(optionalArg  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(optionalArg  +  1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(optionalArg  +  1);	  Option    option    =(Option)super.create(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
25	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt  +  2);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt  +  2);	  Option    option    =(Option)super.create(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  Object  argName  =(Object)this.valuesep;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)this.valuesep;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)this.valuesep;	  Object    argName    =(Object)null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
27	[BUG]  [BUGGY]  Object  argName  =(Object)newType;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)newType;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)newType;	  Object    argName    =(Object)null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
28	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  optionalName);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  optionalName);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  optionalName);	  Option    option    =    new    Option(optionalName,    opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
29	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  option);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  option);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  option);	  Option    option    =    new    Option(optionalName,    opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
30	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalName,  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalName,  name);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalName,  name);	  Option    option    =    new    Option(optionalName,    opt);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
31	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  option);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  option);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  option);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
32	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName,  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName,  description);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
33	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  argName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  argName);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  argName);	  Option    option    =    new    Option(optionalArg,    name);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
34	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description  +  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description  +  2);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description  +  2);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
35	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description  +  1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description  +  1);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description    +    1);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
36	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  null);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  null);	  Option    option    =    new    Option(optional,    opt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
37	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  argName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  argName);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  argName);	  Option    option    =    new    Option(optional,    opt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
38	[BUG]  [BUGGY]  Option  option  =  new  Option(optional,  null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optional,  null);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optional,  null);	  Option    option    =    new    Option(optional,    opt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
39	[BUG]  [BUGGY]  Object  type  =  getType(optionalArg)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(optionalArg)+  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(optionalArg)+  1;	  Object    type    =    getType(optionalArg);    	non-compiled	[CE]  <identifier>  expected	19	None	replace
40	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  opt);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  opt);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(option,    description);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
41	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  description.toLowerCase());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  description.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  description.toLowerCase());	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  opt.toLowerCase());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(argName,  opt.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(argName,  opt.toLowerCase());	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  description.toLowerCase(),  opt);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(argName,  description.toLowerCase(),  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(argName,  description.toLowerCase(),  opt);	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
44	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(1);	  String    argName    =(String)this.values.get(0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(0)  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(0)  +  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(0)  +  1;	  String    argName    =(String)this.values.get(0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  Object  argName  =(Object)this.values.get(0);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)this.values.get(0);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)this.values.get(0);	  String    argName    =(String)this.values.get(0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
47	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg);	  Option    option    =    new    Option(opt);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
48	[BUG]  [BUGGY]  Object  type  =  getType(opt)/  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt)/  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt)/  1;	  Object    type    =    getType(opt)+    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
49	[BUG]  [BUGGY]  Object  type  =  getType(opt)+  2;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt)+  2;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt)+  2;	  Object    type    =    getType(opt)+    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
50	[BUG]  [BUGGY]  Object  type  =  getType(opt)+  1L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt)+  1L;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt)+  1L;	  Object    type    =    getType(opt)+    1;    	non-compiled	[CE]  <identifier>  expected	38	None	replace
51	[BUG]  [BUGGY]  String  argName  =(String)valuesep  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)valuesep  +  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)valuesep  +  1;	  String    argName    =(String)valuesep;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
52	[BUG]  [BUGGY]  String  argName  =(String)valuesep.toLowerCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)valuesep.toLowerCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)valuesep.toLowerCase();	  String    argName    =(String)valuesep;    	non-compiled	[CE]  <identifier>  expected	29	None	replace
53	[BUG]  [BUGGY]  Option  option  =  new  Option(description,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(description,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(description,  description);	  Option    option    =    new    Option(description);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
54	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(0).toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(0).toLowerCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(0).toLowerCase();	  String    argName    =(String)this.values.get(opt).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
55	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(opt).toUpperCase();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(opt).toUpperCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(opt).toUpperCase();	  String    argName    =(String)this.values.get(opt).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
56	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(optionalArg).toLowerCase();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(optionalArg).toLowerCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(optionalArg).toLowerCase();	  String    argName    =(String)this.values.get(opt).toLowerCase();    	non-compiled	[CE]  <identifier>  expected	41	None	replace
57	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  *  2  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  *  2  +  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  *  2  +  1;	  String    argName    =(String)this.numberOfArgs    *    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
58	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  *  4;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  *  4;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  *  4;	  String    argName    =(String)this.numberOfArgs    *    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
59	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  *  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  *  1;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  *  1;	  String    argName    =(String)this.numberOfArgs    *    2;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
60	[BUG]  [BUGGY]  String  argName  =(String)this.newDescription;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.newDescription;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.newDescription;	  String    argName    =(String)newDescription;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
61	[BUG]  [BUGGY]  String  argName  =(String)newDescription.toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)newDescription.toLowerCase();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)newDescription.toLowerCase();	  String    argName    =(String)newDescription;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
62	[BUG]  [BUGGY]  String  argName  =(String)type;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)type;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)type;	  String    argName    =(String)newDescription;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
63	[BUG]  [BUGGY]  String  argName  =(String)newDescription.trim();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)newDescription.trim();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)newDescription.trim();	  String    argName    =(String)newDescription;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
64	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  description);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  description);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(description);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
65	[BUG]  [BUGGY]  String  argName  =(string)null;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(string)null;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(string)null;	  char    argName    =(char)null;    	non-compiled	[CE]  <identifier>  expected	47	None	replace
66	[BUG]  [BUGGY]  Option  option  =  new  Option(opt.toLowerCase(),  true);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt.toLowerCase(),  true);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt.toLowerCase(),  true);	  Option    option    =    new    Option(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
67	[BUG]  [BUGGY]  Option  option  =  new  Option(opt.toLowerCase()  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt.toLowerCase()  +  1);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt.toLowerCase()  +  1);	  Option    option    =    new    Option(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
68	[BUG]  [BUGGY]  Option  option  =  new  Option(opt.toUpperCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt.toUpperCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt.toUpperCase());	  Option    option    =    new    Option(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	48	None	replace
69	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalName);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
70	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toLowerCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toLowerCase());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toLowerCase());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
71	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toUpperCase());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toUpperCase());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toUpperCase());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
72	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toString());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toString());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt.toString());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	39	None	replace
73	[BUG]  [BUGGY]  Object  type  =  getType(opt.toUpperCase());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt.toUpperCase());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt.toUpperCase());	  Object    type    =    getType(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
74	[BUG]  [BUGGY]  Object  type  =  getType(opt.toLowerCase()  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt.toLowerCase()  +  1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt.toLowerCase()  +  1);	  Object    type    =    getType(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
75	[BUG]  [BUGGY]  Object  type  =  getType(optionalArg.toLowerCase());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(optionalArg.toLowerCase());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(optionalArg.toLowerCase());	  Object    type    =    getType(opt.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
76	[BUG]  [BUGGY]  Option  option  =  new  Option(name,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(name,  description);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(name,  description);	  Option    option    =    new    Option(name,    opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
77	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(newDescription,  description);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(newDescription,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(newDescription,  description);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(newDescription);    	non-compiled	[CE]  <identifier>  expected	23	None	replace
78	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(valuesep);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(valuesep);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(valuesep);	  String    argName    =(String)this.optionalArgs.get(type);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
79	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  +  2;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  +  2;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  +  2;	  String    argName    =(String)this.numberOfArgs    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
80	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  +  1L;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  +  1L;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  +  1L;	  String    argName    =(String)this.numberOfArgs    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  Object  type  =  getName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getName();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getName();	  Object    type    =    getDescription();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
82	[BUG]  [BUGGY]  Option  option  =(Option)super.create(optionalArg,  description);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(optionalArg,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(optionalArg,  description);	  Option    option    =(Option)super.create(optionalArg);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
83	[BUG]  [BUGGY]  Option  option  =(Option)super.create(option);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(option);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(option);	  Option    option    =(Option)super.create(optionalArg);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
84	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(optionalArg  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(optionalArg  +  1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(optionalArg  +  1);	  String    argName    =(String)this.values.get(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
85	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt,  description,  null);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt,  description,  null);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt,  description,  null);	  Option    option    =(Option)super.create(opt,    description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
86	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt,  description,  false);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt,  description,  false);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt,  description,  false);	  Option    option    =(Option)super.create(opt,    description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
87	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  opt.toLowerCase());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  opt.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  opt.toLowerCase());	  Option    option    =    new    Option(optionalArg,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
88	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toUpperCase());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toUpperCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  description.toUpperCase());	  Option    option    =    new    Option(optionalArg,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
89	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toLowerCase(),  opt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  description.toLowerCase(),  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  description.toLowerCase(),  opt);	  Option    option    =    new    Option(optionalArg,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
90	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toString());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toString());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.toString());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
91	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  description.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  description.toCharArray());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  description.toCharArray());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
92	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry().get( "type ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getTypeRegistry().get( "type ");  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getTypeRegistry().get( "type ");	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
93	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry().get(argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getTypeRegistry().get(argName);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getTypeRegistry().get(argName);	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
94	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalName,  description.toLowerCase());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalName,  description.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalName,  description.toLowerCase());	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
95	[BUG]  [BUGGY]  Option  option  =  new  Option(option,  opt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(option,  opt);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(option,  opt);	  Option    option    =    new    Option(option,    description);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
96	[BUG]  [BUGGY]  Option  option  =  new  Option(option,  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(option,  name);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(option,  name);	  Option    option    =    new    Option(option,    description);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
97	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(opt  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(opt  +  2);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(opt  +  2);	  String    argName    =(String)this.values.get(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
98	[BUG]  [BUGGY]  Option  option  =  new  Option(description,  opt.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(description,  opt.toCharArray());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(description,  opt.toCharArray());	  Option    option    =    new    Option(optionalArg,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
99	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArg,  optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArg,  optionalArg);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArg,  optionalArg);	  Option    option    =    new    Option(optionalArg,    name);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
100	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(opt  +  3);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(opt  +  3);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(opt  +  3);	  String    argName    =(String)this.optionalArgs.get(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
101	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt  +  0);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt  +  0);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt  +  0);	  Option    option    =(Option)super.create(opt    +    1);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
102	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArgName,  name);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArgName,  name);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArgName,  name);	  Option    option    =    new    Option(optionalArgName,    description);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
103	[BUG]  [BUGGY]  Object  type  =  getArgName();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getArgName();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getArgName();	  Object    type    =    getDescription();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
104	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt,  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt,  name);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt,  name);	  Option    option    =(Option)super.create(opt,    description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
105	[BUG]  [BUGGY]  Option  option  =(Option)super.create(opt,  description  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(opt,  description  -  1);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(opt,  description  -  1);	  Option    option    =(Option)super.create(opt,    description);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
106	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.getName());  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.getName());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.getName());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
107	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.substring(1));  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.substring(1));  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(opt,  description.substring(1));	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(opt,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	52	None	replace
108	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  optionalArg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  optionalArg);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(description,  optionalArg);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
109	[BUG]  [BUGGY]  String  argName  =(String)this.optionalArgs.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.optionalArgs.get(numberOfArgs);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.optionalArgs.get(numberOfArgs);	  String    argName    =(String)this.optionalArgs.get(0);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
110	[BUG]  [BUGGY]  Object  type  =  getType(opt,  name);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getType(opt,  name);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getType(opt,  name);	  Object    type    =    getType(opt,    description);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
111	[BUG]  [BUGGY]  Option  option  =  new  Option(description,  opt.toLowerCase());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(description,  opt.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(description,  opt.toLowerCase());	  Option    option    =    new    Option(optionalArg,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
112	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalName,  argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalName,  argName);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalName,  argName);	  Option    option    =    new    Option(description,    argName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
113	[BUG]  [BUGGY]  Option  option  =  new  Option(opt  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt  +  1);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt  +  1);	  Option    option    =    new    Option(opt);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  Option  option  =  new  Option(opt)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt)  {  }  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt)  {  }	  Option    option    =    new    Option(opt);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  Object  argName  =(Object)getValueSeparator();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)getValueSeparator();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)getValueSeparator();	  Object    argName    =(Object)null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
116	[BUG]  [BUGGY]  Object  argName  =(Object)this;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)this;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)this;	  Object    argName    =(Object)null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
117	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  name);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  name);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(option,  name);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(option,    description);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
118	[BUG]  [BUGGY]  Option  option  =  new  Option(name,  name);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(name,  name);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(name,  name);	  Option    option    =    new    Option(name,    opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
119	[BUG]  [BUGGY]  String  argName  =(String)newDescription.toCharArray();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)newDescription.toCharArray();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)newDescription.toCharArray();	  String    argName    =(String)newDescription;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
120	[BUG]  [BUGGY]  String  argName  =(String)this.values.get(numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.values.get(numberOfArgs);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.values.get(numberOfArgs);	  String    argName    =(String)this.values.get(0);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
121	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optional);    	non-compiled	[CE]  <identifier>  expected	51	None	replace
122	[BUG]  [BUGGY]  Option  option  =  new  Option(name,  optionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(name,  optionalArg);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(name,  optionalArg);	  Option    option    =    new    Option(optionalArg,    name);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
123	[BUG]  [BUGGY]  String  argName  =(String)this.numberOfArgs  +  3;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  String  argName  =(String)this.numberOfArgs  +  3;  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	String  argName  =(String)this.numberOfArgs  +  3;	  String    argName    =(String)this.numberOfArgs    +    1;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
124	[BUG]  [BUGGY]  Option  option  =  new  Option(opt.trim());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt.trim());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt.trim());	  Option    option    =    new    Option(opt);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
125	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName,  description);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(argName,  description);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
126	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description.toString());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description.toString());  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArg,  description.toString());	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(optionalArg,    description);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
127	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  description.toUpperCase());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(argName,  description.toUpperCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(argName,  description.toUpperCase());	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
128	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalArgName,  description.toLowerCase());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalArgName,  description.toLowerCase());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalArgName,  description.toLowerCase());	  Option    option    =    new    Option(argName,    description.toLowerCase());    	non-compiled	[CE]  <identifier>  expected	14	None	replace
129	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry().getType(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getTypeRegistry().getType(opt);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getTypeRegistry().getType(opt);	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
130	[BUG]  [BUGGY]  Object  type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getTypeRegistry().getNativeType(UNKNOWN_TYPE);	  Object    type    =    getTypeRegistry();    	non-compiled	[CE]  <identifier>  expected	40	None	replace
131	[BUG]  [BUGGY]  Option  option  =  new  Option(type,  argName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(type,  argName);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(type,  argName);	  Option    option    =    new    Option(description,    argName);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
132	[BUG]  [BUGGY]  Option  option  =  new  Option(optionalName,  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optionalName,  options);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optionalName,  options);	  Option    option    =    new    Option(optionalArg,    options);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
133	[BUG]  [BUGGY]  Option  option  =  new  Option(optional,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(optional,  description);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(optional,  description);	  Option    option    =    new    Option(optional,    opt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
134	[BUG]  [BUGGY]  Option  option  =  new  Option(opt,  scope);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(opt,  scope);  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(opt,  scope);	  Option    option    =    new    Option(optional,    opt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
135	[BUG]  [BUGGY]  Object  type  =  getValueType();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  type  =  getValueType();  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  type  =  getValueType();	  Object    type    =    getDescription();    	non-compiled	[CE]  <identifier>  expected	4	None	replace
136	[BUG]  [BUGGY]  Option  option  =(Option)super.create(optional);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =(Option)super.create(optional);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =(Option)super.create(optional);	  Option    option    =(Option)super.create(optionalArg);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
137	[BUG]  [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArgName);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArgName);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	OptionBuilder  <  Object>  option  =  new  OptionBuilder(optionalArgName);	  OptionBuilder    <    Object>    option    =    new    OptionBuilder(description);    	non-compiled	[CE]  <identifier>  expected	26	None	replace
138	[BUG]  [BUGGY]  Option  option  =  new  Option(argName,  description.toCharArray());  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Option  option  =  new  Option(argName,  description.toCharArray());  [BUGGY]        option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Option  option  =  new  Option(argName,  description.toCharArray());	  Option    option    =    new    Option(optionalArg,    description.toCharArray());    	non-compiled	[CE]  <identifier>  expected	9	None	replace
139	[BUG]  [BUGGY]  Object  argName  =(Object)create(null);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  static  Option  create(String  opt)  throws  IllegalArgumentException  {        [BUGGY]  Object  argName  =(Object)create(null);  [BUGGY]      Option  option  =  new  Option(opt,  description);  option.setLongOpt(longopt);  option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	349	349	1	replace	Object  argName  =(Object)create(null);	  Object    argName    =(Object)null;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
