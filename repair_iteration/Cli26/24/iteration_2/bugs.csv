bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  option.setOptionalArg(optionalArg);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(optionalArg!=  null)  {  option.setOptionalArg(optionalArg);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg!=  null)  {  option.setOptionalArg(optionalArg);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  option.setOptionalArg(opt);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(optionalArg!=  null)  {  option.setOptionalArg(opt);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg!=  null)  {  option.setOptionalArg(opt);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  option.setOptionalArg(optionalArg);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(optionalArg  ==  null)  {  option.setOptionalArg(optionalArg);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg  ==  null)  {  option.setOptionalArg(optionalArg);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  option.setOptionalArg(opt);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(optionalArg  ==  null)  {  option.setOptionalArg(opt);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg  ==  null)  {  option.setOptionalArg(opt);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  return  this.optionalArg;  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(optionalArg!=  null)  {  return  this.optionalArg;  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg!=  null)  {  return  this.optionalArg;  }	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
6	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  this.optionalArg;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  this.optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
7	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  option.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
8	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  this.optional;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  this.optional;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  this.optional;	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
9	[BUG]  [BUGGY]  return(optionalArg!=  null)?  null  :  this.optional;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg!=  null)?  null  :  this.optional;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg!=  null)?  null  :  this.optional;	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
10	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  opt.optional;  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  opt.optional;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  opt.optional;	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
11	[BUG]  [BUGGY]  if(opt!=  null)  {  return  option.toString();  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt!=  null)  {  return  option.toString();  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  return  option.toString();  }	  return    option.toString();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
12	[BUG]  [BUGGY]  return  option.toString()  + "n ";  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return  option.toString()  + "n ";  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + "n ";	  return    option.toString();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
13	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(optionalArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setOptionalArg(optionalArgs);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(optionalArgs);	      OptionBuilder.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
14	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(hasArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setOptionalArg(hasArg);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(hasArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
15	[BUG]  [BUGGY]  OptionBuilder.setLongopt(opt);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setLongopt(opt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongopt(opt);	      OptionBuilder.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(newLongopt);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setOptionalArg(newLongopt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(newLongopt);	      OptionBuilder.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  option.setLongopt(opt);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  option.setLongopt(opt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongopt(opt);	      option.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
18	[BUG]  [BUGGY]  option.setLongopt(longopt);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  option.setLongopt(longopt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongopt(longopt);	      option.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
19	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  option;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt  ==  null)  {  return  option;  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt  ==  null)  {  return  option;  }	  if(opt!=    null)    {    return    option;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
20	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.addOptionalArg(optionalArg);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.addOptionalArg(optionalArg);	      OptionBuilder.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
21	[BUG]  [BUGGY]  if(opt!=  null)  {  option.setRequired(required);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt!=  null)  {  option.setRequired(required);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  option.setRequired(required);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
22	[BUG]  [BUGGY]  if(opt!=  null)  {  option.setOptionalArg(optionalArg);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt!=  null)  {  option.setOptionalArg(optionalArg);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  option.setOptionalArg(optionalArg);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
23	[BUG]  [BUGGY]  return(optionalArg!=  null)?  null  :  this.optionalArg;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg!=  null)?  null  :  this.optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg!=  null)?  null  :  this.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
24	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  opt.optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  opt.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
25	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setOptionalArg(optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(optionalArg;	  if(optionalArg    ==    null)    {    return    option;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
26	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt!=  null)  {  return  options;  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  return  options;  }	  if(opt!=    null)    {    return    option;    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
27	[BUG]  [BUGGY]  optionalArg  =  option;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  optionalArg  =  option;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  option;	  if(optionalArg!=    null)    {    return    option;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  OptionBuilder.initOptions(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.initOptions(optionalArg);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  OptionBuilder.append(opt);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.append(opt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(opt);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
30	[BUG]  [BUGGY]  optionalArg  =  optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  optionalArg  =  optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  optionalArg;	  if(optionalArg    ==    null)    {    return    option;    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
31	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.optional;  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(opt  ==  null)?  null  :  opt.optional;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  opt.optional;	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  optionalArg;	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
33	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.toString();  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(opt  ==  null)?  null  :  opt.toString();  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  opt.toString();	  return    this.optional;    	non-compiled	[CE]  <identifier>  expected	14	None	replace
34	[BUG]  [BUGGY]  if(opt!=  null)  {  option.setDescription(description);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  if(opt!=  null)  {  option.setDescription(description);  }  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  option.setDescription(description);  }	      	non-compiled	[CE]  <identifier>  expected	5	None	replace
35	[BUG]  [BUGGY]  option.setLongOpt(longopt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  option.setLongOpt(longopt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongOpt(longopt);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
36	[BUG]  [BUGGY]  option.setName(argName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  option.setName(argName);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setName(argName);	      option.setDescription(description);    	non-compiled	[CE]  <identifier>  expected	8	None	replace
37	[BUG]  [BUGGY]  optionalArg  =  optionalArg.toLowerCase();  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  optionalArg  =  optionalArg.toLowerCase();  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  optionalArg.toLowerCase();	      option.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  optionalArg  =  optionalArg.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  optionalArg  =  optionalArg.trim().toLowerCase();  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  optionalArg.trim().toLowerCase();	      option.setOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  return(opt  ==  null)?  null  :  opt.optionalArg;  [BUGGY]    }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  opt.optionalArg;	  return    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  OptionBuilder.setLongopt(longopt);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setLongopt(longopt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongopt(longopt);	      OptionBuilder.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
41	[BUG]  [BUGGY]  OptionBuilder.setLongOpt(longopt);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.setLongOpt(longopt);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongOpt(longopt);	      OptionBuilder.setOptionalArg(opt);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
42	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();      [BUGGY]  OptionBuilder.append(optionalArg);  [BUGGY]    return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(optionalArg);	      OptionBuilder.reset();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
