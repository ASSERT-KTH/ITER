bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(opt;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalArg(opt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(opt;	  OptionBuilder.setOptionalArg(optionalArg;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.optional;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt!=  null)?  null  :  opt.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt!=  null)?  null  :  opt.optional;	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
3	[BUG]  [BUGGY]  return(optional  ==  null)?  null  :  opt.optional;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optional  ==  null)?  null  :  opt.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optional  ==  null)?  null  :  opt.optional;	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
4	[BUG]  [BUGGY]  if(opt!=  null)required  =  null;  if(opt.length()  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required  =  null;  if(opt.length()  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required  =  null;  if(opt.length()  ==  0)  {  return  null;  }	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
5	[BUG]  [BUGGY]  return(this.optional!=  null)?  null  :  this.optional;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional!=  null)?  null  :  this.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional!=  null)?  null  :  this.optional;	  return(optionalArg!=    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
6	[BUG]  [BUGGY]  return(this.optional!=  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional!=  null)?  null  :  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional!=  null)?  null  :  optionalArg;	  return(optionalArg!=    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
7	[BUG]  [BUGGY]  return(this.optional!=  null)?  null  :  opt;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional!=  null)?  null  :  opt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional!=  null)?  null  :  opt;	  return(optionalArg!=    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
8	[BUG]  [BUGGY]  OptionBuilder.setDescription(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setDescription(description);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setDescription(description);	  if(opt!=    null)    {    option.setDescription(description);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
9	[BUG]  [BUGGY]  OptionBuilder.append(longopt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.append(longopt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(longopt);	  OptionBuilder.append(opt);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
10	[BUG]  [BUGGY]  OptionBuilder.append(newLongopt);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.append(newLongopt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(newLongopt);	  OptionBuilder.append(opt);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
11	[BUG]  [BUGGY]  OptionBuilder.append(newDescription);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.append(newDescription);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(newDescription);	  OptionBuilder.append(opt);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
12	[BUG]  [BUGGY]  if(opt!=  null)required  =  false;  return(optionalArg  ==  null)?  null  :  opt.optional;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required  =  false;  return(optionalArg  ==  null)?  null  :  opt.optional;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required  =  false;  return(optionalArg  ==  null)?  null  :  opt.optional;  }	  return(optionalArg    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
13	[BUG]  [BUGGY]  optionalArg  =  required;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  required;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  required;	  optionalArg    =    optionalArg;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
14	[BUG]  [BUGGY]  option  =  optionalArg;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option  =  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option  =  optionalArg;	  optionalArg    =    optionalArg;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
15	[BUG]  [BUGGY]  OptionBuilder.initOptions(optionalArg,  required);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.initOptions(optionalArg,  required);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(optionalArg,  required);	  OptionBuilder.initOptions(optionalArg);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
16	[BUG]  [BUGGY]  OptionBuilder.initOptions(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.initOptions(opt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(opt);	  OptionBuilder.initOptions(optionalArg);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
17	[BUG]  [BUGGY]  OptionBuilder.setLongopt(newLongopt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongopt(newLongopt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongopt(newLongopt);	  OptionBuilder.setLongopt(opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
18	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt!=  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt!=  null)?  null  :  opt.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
19	[BUG]  [BUGGY]  if(opt!=  null)required  =  null;  if(opt  ==  null)required  =  false;  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required  =  null;  if(opt  ==  null)required  =  false;  return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required  =  null;  if(opt  ==  null)required  =  false;  return  null;  }	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
20	[BUG]  [BUGGY]  optionalArg  =  this.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  this.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  this.optionalArg;	  if(optionalArg!=    null)    {    return    this.optionalArg;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  return  option.toString()  + "null ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return  option.toString()  + "null ";  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + "null ";	  return    option.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	12	None	replace
22	[BUG]  [BUGGY]  return  option.toString()  + "   ";  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return  option.toString()  + "   ";  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + "   ";	  return    option.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	12	None	replace
23	[BUG]  [BUGGY]  return  option.toString()  + "  - ";  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return  option.toString()  + "  - ";  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + "  - ";	  return    option.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	12	None	replace
24	[BUG]  [BUGGY]  OptionBuilder.setLongOpt(longopt  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongOpt(longopt  +  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongOpt(longopt  +  1);	  OptionBuilder.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
25	[BUG]  [BUGGY]  OptionBuilder.setLongOpt(longopt  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongOpt(longopt  -  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongOpt(longopt  -  1);	  OptionBuilder.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
26	[BUG]  [BUGGY]  OptionBuilder.setLongOpt(newLongopt);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongOpt(newLongopt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongOpt(newLongopt);	  OptionBuilder.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
27	[BUG]  [BUGGY]  return(this.optional  ==  null)?  null  :  this.optional;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional  ==  null)?  null  :  this.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional  ==  null)?  null  :  this.optional;	  return(optionalArg    ==    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
28	[BUG]  [BUGGY]  return(this.optional  ==  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional  ==  null)?  null  :  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional  ==  null)?  null  :  optionalArg;	  return(optionalArg    ==    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
29	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  this.optional;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  this.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  this.optional;	  return(optionalArg    ==    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
30	[BUG]  [BUGGY]  option.setLongopt(newLongopt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setLongopt(newLongopt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongopt(newLongopt);	  option.setLongopt(opt);    	non-compiled	[CE]  <identifier>  expected	17	None	replace
31	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.toString();  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)  {  return  options.toString();  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)  {  return  options.toString();  }	  if(opt!=    null)    {    return    option.toString();    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
32	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt!=  null)?  null  :  opt.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt!=  null)?  null  :  opt.optionalArg;	  return(opt    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
33	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.argName;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  opt.argName;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  opt.argName;	  return(opt    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
34	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.longopt;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  opt.longopt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  opt.longopt;	  return(opt    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
35	[BUG]  [BUGGY]  option.setRequired(required);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setRequired(required);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setRequired(required);	  if(opt!=    null)    {    option.setRequired(required);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
36	[BUG]  [BUGGY]  OptionBuilder.setRequired(required);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setRequired(required);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setRequired(required);	  if(opt!=    null)    {    option.setRequired(required);    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
37	[BUG]  [BUGGY]  return(this.optionalArg!=  null)?  null  :  this.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg!=  null)?  null  :  this.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg!=  null)?  null  :  this.optionalArg;	  return(optionalArg!=    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
38	[BUG]  [BUGGY]  return(this.optionalArg!=  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg!=  null)?  null  :  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg!=  null)?  null  :  optionalArg;	  return(optionalArg!=    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
39	[BUG]  [BUGGY]  return(this.optionalArg!=  null)?  null  :  opt;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg!=  null)?  null  :  opt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg!=  null)?  null  :  opt;	  return(optionalArg!=    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
40	[BUG]  [BUGGY]  return(this.optionalArg  ==  null)?  null  :  this.optionalArg;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg  ==  null)?  null  :  this.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg  ==  null)?  null  :  this.optionalArg;	  return(optionalArg!=    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
41	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(required);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalArg(required);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(required);	  OptionBuilder.setOptionalArg(hasArg);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
42	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(hasOptionalArg);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalArg(hasOptionalArg);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(hasOptionalArg);	  OptionBuilder.setOptionalArg(hasArg);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
43	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  option.optionalArg;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  option.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  option.optionalArg;	  return(optionalArg    ==    null)?    null    :    option.optionalArg;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
44	[BUG]  [BUGGY]  return(optionalArg!=  null)?  null  :  option.optionalArg;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg!=  null)?  null  :  option.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg!=  null)?  null  :  option.optionalArg;	  return(optionalArg    ==    null)?    null    :    option.optionalArg;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArgs;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArgs;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  option.optionalArgs;	  return(optionalArg    ==    null)?    null    :    option.optionalArg;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  OptionBuilder.setLongopt(optionalArg);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongopt(optionalArg);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongopt(optionalArg);	  OptionBuilder.setLongopt(longopt);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
47	[BUG]  [BUGGY]  option.setOptionalArg(optionalArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setOptionalArg(optionalArgs);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setOptionalArg(optionalArgs);	  OptionBuilder.setOptionalArg(optionalArgs);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
48	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toLowerCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  optionalArg.toLowerCase();	  return(optionalArg    ==    null)?    null    :    optionalArg;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
49	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toString();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  optionalArg.toString();	  return(optionalArg    ==    null)?    null    :    optionalArg;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
50	[BUG]  [BUGGY]  if(optionalArg!=  null)  {  return  options;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(optionalArg!=  null)  {  return  options;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg!=  null)  {  return  options;  }	  if(opt!=    null)    {    return    options;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
51	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  options;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt  ==  null)  {  return  options;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt  ==  null)  {  return  options;  }	  if(opt!=    null)    {    return    options;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
52	[BUG]  [BUGGY]  return(this.optionalArg  ==  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg  ==  null)?  null  :  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg  ==  null)?  null  :  optionalArg;	  return(optionalArg    ==    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
53	[BUG]  [BUGGY]  return(this.optionalArg  ==  null)?  null  :  opt;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optionalArg  ==  null)?  null  :  opt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optionalArg  ==  null)?  null  :  opt;	  return(optionalArg    ==    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
54	[BUG]  [BUGGY]  optionalArg  =  option.toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  option.toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  option.toLowerCase();	  optionalArg    =    optionalArg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
55	[BUG]  [BUGGY]  option  =  optionalArg.toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option  =  optionalArg.toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option  =  optionalArg.toLowerCase();	  optionalArg    =    optionalArg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
56	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(newDescription);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalArg(newDescription);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(newDescription);	  OptionBuilder.setOptionalArg(newLongopt);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
57	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(opt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.addOptionalArg(opt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.addOptionalArg(opt);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
58	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  required);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  required);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.addOptionalArg(optionalArg,  required);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
59	[BUG]  [BUGGY]  option.setName(name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setName(name);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setName(name);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
60	[BUG]  [BUGGY]  option.setName(description);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setName(description);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setName(description);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
61	[BUG]  [BUGGY]  option.setName(newDescription);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setName(newDescription);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setName(newDescription);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
62	[BUG]  [BUGGY]  optionalArg  =  option.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  option.trim().toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  option.trim().toLowerCase();	  optionalArg    =    optionalArg.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
63	[BUG]  [BUGGY]  option  =  optionalArg.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option  =  optionalArg.trim().toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option  =  optionalArg.trim().toLowerCase();	  optionalArg    =    optionalArg.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
64	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.append(optionalArg  +  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(optionalArg  +  1);	  OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
65	[BUG]  [BUGGY]  option.setLongOpt(longopt  -  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setLongOpt(longopt  -  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongOpt(longopt  -  1);	  option.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
66	[BUG]  [BUGGY]  option.setLongOpt(longopt  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setLongOpt(longopt  +  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongOpt(longopt  +  1);	  option.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
67	[BUG]  [BUGGY]  if(opt!=  null)required  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required  :  opt.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required  :  opt.optionalArg;	  return(optionalArg    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	24	None	replace
68	[BUG]  [BUGGY]  OptionBuilder.setOptionalLongopt(opt);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalLongopt(opt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalLongopt(opt);	  OptionBuilder.setLongopt(opt);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
69	[BUG]  [BUGGY]  OptionBuilder.setOptionalArg(optionalArg  =  false;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setOptionalArg(optionalArg  =  false;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setOptionalArg(optionalArg  =  false;	  OptionBuilder.setOptionalArg(optionalArg;    	non-compiled	[CE]  <identifier>  expected	25	None	replace
70	[BUG]  [BUGGY]  option  =  option.toLowerCase();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option  =  option.toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option  =  option.toLowerCase();	  optionalArg    =    optionalArg.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	37	None	replace
71	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  this.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  this.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  this.optionalArg;	  return(optionalArg!=    null)?    null    :    this.optionalArg;    	non-compiled	[CE]  <identifier>  expected	23	None	replace
72	[BUG]  [BUGGY]  optionalArg(opt  ==  null)?  null  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg(opt  ==  null)?  null  :  opt.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg(opt  ==  null)?  null  :  opt.optionalArg;	  return(opt    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
73	[BUG]  [BUGGY]  if(opt!=  null)required  :  opt.optional;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required  :  opt.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required  :  opt.optional;	  return(optionalArg    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
74	[BUG]  [BUGGY]  option  =  option.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option  =  option.trim().toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option  =  option.trim().toLowerCase();	  optionalArg    =    optionalArg.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
75	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  option);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  option);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.addOptionalArg(optionalArg,  option);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
76	[BUG]  [BUGGY]  option.setArgName(argName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setArgName(argName);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setArgName(argName);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
77	[BUG]  [BUGGY]  option.setName(newName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setName(newName);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setName(newName);	  option.setName(argName);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
78	[BUG]  [BUGGY]  option.setLongopt(longopt  -  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setLongopt(longopt  -  1);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongopt(longopt  -  1);	  option.setLongopt(longopt);    	non-compiled	[CE]  <identifier>  expected	18	None	replace
79	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  optionalArg;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(opt  ==  null)?  null  :  optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(opt  ==  null)?  null  :  optionalArg;	  return(optionalArg    ==    null)?    null    :    optionalArg;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
80	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  option;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  option;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  option;	  return(optionalArg    ==    null)?    null    :    optionalArg;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
81	[BUG]  [BUGGY]  if(opt!=  null)?  null  :  opt.toString();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)?  null  :  opt.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
82	[BUG]  [BUGGY]  if(opt!=  null)return  null;  if(opt!=  null)return  null;  if(opt.length()  ==  0)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)return  null;  if(opt!=  null)return  null;  if(opt.length()  ==  0)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)return  null;  if(opt!=  null)return  null;  if(opt.length()  ==  0)  {  return  null;  }	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
83	[BUG]  [BUGGY]  return(this.optional  ==  null)?  null  :  opt;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(this.optional  ==  null)?  null  :  opt;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(this.optional  ==  null)?  null  :  opt;	  return(optionalArg    ==    null)?    null    :    this.optional;    	non-compiled	[CE]  <identifier>  expected	8	None	replace
84	[BUG]  [BUGGY]  return  option.toString()  + ",null ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return  option.toString()  + ",null ";  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + ",null ";	  return    option.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	12	None	replace
85	[BUG]  [BUGGY]  OptionBuilder.initOptions(optionalArg,  option);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.initOptions(optionalArg,  option);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(optionalArg,  option);	  OptionBuilder.initOptions(optionalArg);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
86	[BUG]  [BUGGY]  OptionBuilder.initOptions(optionalArg,  options);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.initOptions(optionalArg,  options);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(optionalArg,  options);	  OptionBuilder.initOptions(optionalArg);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
87	[BUG]  [BUGGY]  optionalArg  =  OptionBuilder.newInstance();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  OptionBuilder.newInstance();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  OptionBuilder.newInstance();	  optionalArg    =    option;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
88	[BUG]  [BUGGY]  optionalArg  =  option.getOptionalArg();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  option.getOptionalArg();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  option.getOptionalArg();	  optionalArg    =    option;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
89	[BUG]  [BUGGY]  if(opt!=  null)return  null;  if(opt.optional!=  null)  {  return  null;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)return  null;  if(opt.optional!=  null)  {  return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)return  null;  if(opt.optional!=  null)  {  return  null;  }	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
90	[BUG]  [BUGGY]  OptionBuilder.setLongOpt(opt);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongOpt(opt);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongOpt(opt);	  OptionBuilder.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
91	[BUG]  [BUGGY]  if(opt!=  null)?  null  :  opt.optionalArg;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)?  null  :  opt.optionalArg;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)?  null  :  opt.optionalArg;	  return(opt    ==    null)?    null    :    opt.optionalArg;    	non-compiled	[CE]  <identifier>  expected	39	None	replace
92	[BUG]  [BUGGY]  if(opt!=  null)required?  null  :  opt.optional;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)required?  null  :  opt.optional;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)required?  null  :  opt.optional;	  return(optionalArg    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
93	[BUG]  [BUGGY]  if(optionalArg  ==  null)  {  return  this.optionalArg;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(optionalArg  ==  null)  {  return  this.optionalArg;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(optionalArg  ==  null)  {  return  this.optionalArg;  }	  if(optionalArg!=    null)    {    return    this.optionalArg;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
94	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toUpperCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  optionalArg.toUpperCase();  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  optionalArg.toUpperCase();	  return(optionalArg    ==    null)?    null    :    optionalArg;    	non-compiled	[CE]  <identifier>  expected	32	None	replace
95	[BUG]  [BUGGY]  OptionBuilder.append(optionalArg,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.append(optionalArg,  description);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.append(optionalArg,  description);	  OptionBuilder.append(optionalArg);    	non-compiled	[CE]  <identifier>  expected	42	None	replace
96	[BUG]  [BUGGY]  OptionBuilder.initOptions(optionalArg,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.initOptions(optionalArg,  description);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.initOptions(optionalArg,  description);	  OptionBuilder.initOptions(optionalArg);    	non-compiled	[CE]  <identifier>  expected	28	None	replace
97	[BUG]  [BUGGY]  if(opt!=  null)return  null;  if(opt.optional  ==  null)return  null;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)return  null;  if(opt.optional  ==  null)return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)return  null;  if(opt.optional  ==  null)return  null;  }	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
98	[BUG]  [BUGGY]  if(opt!=  null)return  null;  if(opt.optional!=  null)return  null;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  if(opt!=  null)return  null;  if(opt.optional!=  null)return  null;  }  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	if(opt!=  null)return  null;  if(opt.optional!=  null)return  null;  }	  return(opt    ==    null)?    null    :    opt.optional;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
99	[BUG]  [BUGGY]  option.setLongOpt(longopt,  lengthOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  option.setLongOpt(longopt,  lengthOfArgs);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	option.setLongOpt(longopt,  lengthOfArgs);	  option.setLongOpt(longopt);    	non-compiled	[CE]  <identifier>  expected	35	None	replace
100	[BUG]  [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArg  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return(optionalArg  ==  null)?  null  :  option.optionalArg  +  1;  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return(optionalArg  ==  null)?  null  :  option.optionalArg  +  1;	  return(optionalArg    ==    null)?    null    :    option.optionalArg;    	non-compiled	[CE]  <identifier>  expected	7	None	replace
101	[BUG]  [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  description);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.addOptionalArg(optionalArg,  description);  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.addOptionalArg(optionalArg,  description);	  OptionBuilder.addOptionalArg(optionalArg);    	non-compiled	[CE]  <identifier>  expected	20	None	replace
102	[BUG]  [BUGGY]  optionalArg  =  opt.trim().toLowerCase();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  optionalArg  =  opt.trim().toLowerCase();  [BUGGY]      return  option;  }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	optionalArg  =  opt.trim().toLowerCase();	  optionalArg    =    optionalArg.trim().toLowerCase();    	non-compiled	[CE]  <identifier>  expected	38	None	replace
103	[BUG]  [BUGGY]  OptionBuilder.setLongDescription(longopt);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  OptionBuilder.setLongDescription(longopt);  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	OptionBuilder.setLongDescription(longopt);	  if(opt!=    null)    {    option.setDescription(description);    }    	non-compiled	[CE]  <identifier>  expected	34	None	replace
104	[BUG]  [BUGGY]  return  option.toString()  + "  => ";  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      option.setRequired(required);  option.setOptionalArg(optionalArg);  option.setArgs(numberOfArgs);  option.setType(type);  option.setValueSeparator(valuesep);  option.setArgName(argName);  OptionBuilder.reset();        [BUGGY]  return  option.toString()  + "  => ";  [BUGGY]      }  [CLASS]  OptionBuilder  [METHOD]  create  [RETURN_TYPE]  Option  String  opt  [VARIABLES]  boolean  hasArg  newRequired  optionalArg  required  OptionBuilder  instance  char  opt  sep  valuesep  Object  newType  type  Option  option  String  argName  description  longopt  name  newDescription  newLongopt  opt  int  num  numArgs  numberOfArgs  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	363	363	1	replace	return  option.toString()  + "  => ";	  return    option.toString()    +   "n   ";    	non-compiled	[CE]  <identifier>  expected	12	None	replace
