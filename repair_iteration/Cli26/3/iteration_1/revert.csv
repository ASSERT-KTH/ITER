projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returninstance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(i),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(i+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-2));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null)returnnull;if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(0));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=newDescription.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){returnwithDescription(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,i+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(0),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequiredObject(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toLowerCase()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withInstance(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
