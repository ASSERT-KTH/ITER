projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returninstance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(i),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(i+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-2));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null)returnnull;if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(0));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=newDescription.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){returnwithDescription(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getRequiredObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,i+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(0),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequiredObject(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toLowerCase()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withInstance(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<oldDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<oldDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnull;if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options).required=true;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options).toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options),this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withType(type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withValue(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(oldDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt)+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.getArgName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newType.length();++i){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withType(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=1;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.longopt,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription+2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription+1,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){instance.addArg(argName,newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newType.length()-1),newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(0),type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newType.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.toString(),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(0));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription,newType));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newType==null)?null:instance.withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.type=newType;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newDescription.withDescription(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.getRequired();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(1,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withLongValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withImmediateValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,description);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newLongopt.withLongopt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.getString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withInstance(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequired(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription,description));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.getRawName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newInteger(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newInstance(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()+2));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?this:newOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription,argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription,this));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null)returnnewOptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.get(newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.get(newDescription.length()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302intnumberOfArgs=newDescription.get(newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newType.charAt(i),newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType,type);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,i+1),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,numArgs+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()-2));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(1,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(i+1),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,newType,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length()+1;++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()-2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Stringarg=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newType.length();++i){instance.addArg(newDescription.charAt(i),newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i),type);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.toCharArray(),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newType));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newType.length();++i){instance.addArg(newDescription.charAt(i),newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.withLongopt();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription),this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,instance.withDescription(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription),description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,description.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,description.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,description.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(1,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withDescription(description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=newDescription.size()+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=newDescription.intValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302intnumArgs=newDescription.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){returnwithDescription(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302||(newDescription!=null&&newDescription.equals(""))){returnwithDescription(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302||(newDescription!=null&&newDescription.equals("null"))){returnwithDescription(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequired();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)this.type.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,numArgs));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.getString();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();if(argName.equals(newDescription.getString())){return
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();if(argName.equals(newDescription.getString())
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withRequired();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newDescription.withType(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){returnnewDescription.withValue(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){returnnewDescription.withValue(newDescription);}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.withValue(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.getRequiredInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newDescriptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.description;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newName,description);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.withType(type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.withLongopt();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withRequired(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=newType.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toLowerCase()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withValue(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withRequiredObject(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)this.type.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<oldDescription.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(numberOfArgs+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instances.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription.longopt-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=instance.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=newDescription.size()-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(0,i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this.options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getInstance();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<types.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newType,newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newOptionBuilder(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.get(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(1,newDescription.length()+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.length();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i),newType,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance).withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.clone();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302optionBuilder.type=newType;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302optionBuilders.add(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?this:newOptionBuilder(newDescription,options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302inti=0;i<newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(i+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getArgName();if(argName.equals(newDescription.getString())
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newType.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<newType.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,newLongopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.evaluate(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.getName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDescription(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription),true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance.withDescription(newDescription),false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=longopt.withLongopt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(newDescription)+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription.withLongopt(longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newType!=null){for(inti=0;i<newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription.withValue(newDescription)||(newDescription!=null&&newDescription.length()>0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){returnnewDescription.withValue(newDescription);}else{returnnewDescription;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withDescription(newDescription*1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription,options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,newArgName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withDeclaration(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withInstance(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=instance.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,this,newRequired);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newType.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:instance.withDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addDeclaration(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newType.withImmediateParentPointer();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null){for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<types.length();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null?this:newOptionBuilder(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withRequiredObject(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newType.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.clone();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.charAt(newDescription.length()-1),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()-1),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.clone();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newType),newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)type.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)type.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.type=newType;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=(newType==null)?null:newType.getArgName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,options).withValue(argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.getAssignedValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=newDescription.withLongopt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instances.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.longopt,newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getAsString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302intarg=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription==null?this:newString[]{newDescription};
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptimizer(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1),newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(oldDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.clone();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null)returnnewOptionBuilder(newDescription.toString()+"n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)this.newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=withType(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.argName=newType.getArgName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(0,i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toUpperCase()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(0,newDescription.length()-1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=this.newDescription.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=this.name.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumberOfArgs=newDescription.get(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()-4);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integerarg=newDescription.substring(0,newDescription.length()-3);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.longopt,newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.length();++i){instance.addArg(newDescription.longopt);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302IntegernumArgs=this.newDescription.size();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIllegalArgumentException(
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(0,newDescription.length()-1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i],newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instances.addArg(newDescription.charAt(i),newType);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilder.argName=newType.toLowerCase();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.instance=(OptionBuilder)newType.remove();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription==null?null:newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnthis.newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription.substring(0,newDescription.length()-2));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<oldDescription.size();++i){OptionBuilder.argName=newType.getString();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilder.argName=(newType==null)?null:newType.getString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302optionalArg=(newDescription!=null)?withDescription(newDescription):newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302optionalArg=(newDescription!=null)?withDescription(newDescription):newObject[]{newDescription};
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.assign);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.hasArg()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription.toCharArray()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance=(OptionBuilder)super.withDescription(newDescription,hasArg);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(instance.withDescription(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.withType();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=newDescription.withLongopt(newDescription.longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){OptionBuilder.argName=newType.getRawName();}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302returnnewDescription!=null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<this.newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.length()-1,newType));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addArg(newDescription.substring(0,newDescription.lastIndexOf('.')+1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newDescription.withDescription(instance);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(instance,newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();if(!instance.isRequired()){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(!instance.hasArg()){thrownewIllegalArgumentException("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance==null)?null:instance.withDescription(newDescription,this,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance!=null)?null:instance.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getLong();if(!instance.isRequired()){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302if(newDescription==null||newDescription!=null)returnnewOptionBuilder(newDescription.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?null:newOptionBuilder(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null)?null:newOptionBuilder(newDescription,this,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(!instance.isRequired()){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(newDescription!=null)?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.addDependency(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302instance.setArgName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302return(instance!=null)?null:instance.withDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withDescription(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java302OptionBuilderinstance=withType(newDescription,newType);
