projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongOperator(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.charAt(i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescriptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300allowNumberOfArgs(newDescription){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300While(newDescription!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300aughtExceptionHandler.handleMissingName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(i);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.charAt(0));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withLongValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescriptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append("(");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().intermediateThread();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getAsString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription,argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getValue();if(instance==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(name,newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(name,newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription.withLongopt();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription.toLowerCase(Longopt.UTF8);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append(";n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append(");n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongopt();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType(type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType(newType,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.trim(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,description,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=description==null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.trim()).toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){instance.addArg(argName);}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.size();++i){instance.addArg(argName,newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValue(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsStringValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.trim()).toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance==null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,description,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toLowerCase(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.withLongOperator(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongOperator(this,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongOperator(this,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongOperator(this,newValue);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.intValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.substring(0,newDescription.length()-1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.substring(1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,getRequiredClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,getRequiredType());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300StringargName=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intargName=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){allowNumberOfArgs(newDescription){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300enableNumberOfArgs(newDescription){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300allowNumberOfArgs(newDescription,numArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription).toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance==null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this.type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toString()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i+1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(0));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300While(newDescription==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()*1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toCharArray(),description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription,description);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){aughtExceptionHandler.handleMissingName(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){aughtExceptionHandler.handleMissingName(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300aughtExceptionHandler.handleMissingName(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescriptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getAsObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getAs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase(),1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase(),newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length()-2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().setCurrentName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().intermediateThread(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().setCurrentToken(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription+2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newType,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription.toUpperCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instances.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.length+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=description==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,type,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,type,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,2);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsInt();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().set(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=description!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,newName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,0L);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){aughtExceptionHandler.handleMissingName(newDescription);}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase(),0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.cloneTree();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValueOfArg(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){allowNumberOfArgs(newDescription){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300allowNumberOfArgs(newDescription),this.numberOfArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<this.newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.setArgName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addDeclaration(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withLongOpt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.substring(1));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toCharArray(),type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<this.newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.withLongOpt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,description.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt,longopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type,options);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<this.newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withUTC(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription*1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription+1,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Integeri=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(name,newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<this.newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.evaluate(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.remove(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toLowerCase(Locale.ENGLISH);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=description==null?this:newSimpleAtomicOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<this.newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=type==null?this:newSimpleAtomicOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?null:newOptionalDescription(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.substring(0,newDescription.length()));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownew
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(1,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.clone();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300charnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addDependency(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this.argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300charnumberOfArgs=getNumberOfArgs(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newDescriptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValueOfArgs(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newString(newDescription,getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?null:newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=this.newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this.type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this.argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this).intValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsString()+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().setContextClassLoader(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(this.newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().start();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newDescriptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<this.newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.trim(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300charnumberOfArgs=getNumberOfArgs(newDescription,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.get(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getAssignmentOp();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){aughtExceptionHandler.handleMissingName(newDescription);}else{thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsString();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.elementAt(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(name,newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toLowerCase(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.setValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.setAsObject(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(0));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(0));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toLowerCase(Long.parseLong(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toLowerCase(Long.valueOf(newDescription));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withUTC()&&newDescription.length()>0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type,argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toUpperCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length()-1,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.trim()+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<this.newDescription.size();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.substring(0,newDescription.length()-1));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.remove(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){allowNumberOfArgs(newDescription)thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append('(');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,type,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getLong();if(instance!=null){thrownewIllegalArgumentException("");}
