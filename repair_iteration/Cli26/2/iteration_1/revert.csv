projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newLongopt);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValue(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withLongOperator(this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.charAt(i));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300For(inti=0;i<newDescription.length();++i){instances.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,true);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs()-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getRequiredValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getDescription();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIl
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescriptionBuilder(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescriptionBuilder(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300allowNumberOfArgs(newDescription){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300While(newDescription!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().setContextClassLoader(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300aughtExceptionHandler.handleMissingName(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.get(i);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(newDescription.charAt(0));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withUTC();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,false);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.trim());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.withType(newType);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(name);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)super.withDescription(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription,description);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.withLongValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?null:newDescriptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.append("(");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.toString());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription,getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getAsString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription.toCharArray());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription,this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newOptionBuilder(newDescription.toLowerCase());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300IntegerargName=newDescription.substring(0,newDescription.length()-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300Thread.currentThread().intermediateThread().intermediateThread();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)this.newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getAsString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300instance.addArg(argName);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.size();++i){instance.addArg(argName);}
