projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription!=null){for(inti=0;i<newDescription.length();++i){instance.addArg(newDescription.charAt(i));}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300intnumberOfArgs=getNumberOfArgs(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toLowerCase();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toCharArray();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.trim();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription.toString();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?null:newDescription;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300ObjectnewType=getType(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.clone();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newType.getValue();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilderinstance=(OptionBuilder)newDescription.getObject();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription!=null?this:newString(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300OptionBuilder.description=newDescription==null?this:newSimpleAtomicOptionBuilder(newDescription);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.length();++i){instance.addArg(argName);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.getObject();if(instance!=null){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java300if(newDescription==null){for(inti=0;i<newDescription.size();++i){OptionBuilderinstance=(OptionBuilder)newDescription.get(i);if(instance!=null){thrownewIllegalArgumentException("");}
