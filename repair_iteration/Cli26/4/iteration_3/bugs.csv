bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
2	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
3	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
4	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression ",  expected);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression ",  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.missing.error.start  of  expression ",  expected);	  AssertionFailedError.warning(   "msg.missing.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
5	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression "  +  name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.missing.error.start  of  expression "  +  name);	  AssertionFailedError.warning(   "msg.missing.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
6	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.missing.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.missing.error.start  of  expression ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "msg.missing.error.start  of  expression ");	  AssertionFailedError.warning(   "msg.missing.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	8	None	replace
7	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	For(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }	  For(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
8	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	For(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  }	  For(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
9	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	For(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }	  For(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	39	None	replace
10	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_INT  -  1;	  Integer    numberOfArgs    =    Option.NUMBER_INT    +    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
11	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  /  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  /  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_INT  /  1;	  Integer    numberOfArgs    =    Option.NUMBER_INT    +    1;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
12	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "null ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "null ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "null ");	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "Unexpected  error: ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "Unexpected  error: ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "Unexpected  error: ");	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.error.expected.identifier ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.error.expected.identifier ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.error.expected.identifier ",  numberOfArgs);	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
15	[BUG]  [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  long  numberOfArgs  =  Option.UNNITIALIZED;	  private    static    final    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
16	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;	  private    static    final    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
17	[BUG]  [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  char  numberOfArgs  =  Option.UNNITIALIZED;	  private    static    final    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
18	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN  -  1;	  Integer    numberOfArgs    =    Option.UNKNOWN;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
19	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.UNKNOWN;	  Integer    numberOfArgs    =    Option.UNKNOWN;    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
20	[BUG]  [BUGGY]  AnnotationFailedError.class.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getName();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getName();	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
21	[BUG]  [BUGGY]  AnnotationFailedError.class.setSimpleName(null);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.setSimpleName(null);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.setSimpleName(null);	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
22	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName(),  null;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName(),  null;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName(),  null;	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
23	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number "  +  numberOfArgs);	  aughtExceptionHandler.handleMissingName(   "msg.unterminated.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
24	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "Unexpected  number  of  arguments: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "Unexpected  number  of  arguments: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "Unexpected  number  of  arguments: "  +  numberOfArgs);	  aughtExceptionHandler.handleMissingName(   "msg.unterminated.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
25	[BUG]  [BUGGY]  safeMultiply(numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs);	  safeMultiply(numberOfArgs)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
26	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0);	  safeMultiply(numberOfArgs)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	67	None	replace
27	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
28	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
29	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs);	  OptionBuilder.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
30	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: ",  numberOfArgs);	  OptionBuilder.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
31	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.toString(numberOfArgs));  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.toString(numberOfArgs));  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.toString(numberOfArgs));	  OptionBuilder.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
32	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_ARRAY;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_ARRAY;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
33	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_ARRAY;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN_ARRAY;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
34	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_EXTENDS;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_EXTENDS;	  Integer    numberOfArgs    =    Option.NUMBER_EXTENDS;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
35	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	  Integer    numberOfArgs    =    Option.NUMBER_EXTENDS;    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
36	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
37	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
38	[BUG]  [BUGGY]  pending(1)  {  return  numberOfArgs  -  1;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  numberOfArgs  -  1;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  numberOfArgs  -  1;  }	  pending(0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
39	[BUG]  [BUGGY]  pending(0)  {  return  numberOfArgs  -  1;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(0)  {  return  numberOfArgs  -  1;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0)  {  return  numberOfArgs  -  1;  }	  pending(0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
40	[BUG]  [BUGGY]  pending(2)  {  return  numberOfArgs;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending(2)  {  return  numberOfArgs;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(2)  {  return  numberOfArgs;  }	  pending(0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
41	[BUG]  [BUGGY]  pending(1)  {  return  numberOfArgs  +  1;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  numberOfArgs  +  1;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  numberOfArgs  +  1;  }	  pending(0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	91	None	replace
42	[BUG]  [BUGGY]  return  numberOfArgs  -  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  return  numberOfArgs  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  numberOfArgs  -  1;	  return    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
43	[BUG]  [BUGGY]  return  numberOfArgs  +  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  return  numberOfArgs  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  numberOfArgs  +  1;	  return    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
44	[BUG]  [BUGGY]  return  this.numberOfArgs;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  return  this.numberOfArgs;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  this.numberOfArgs;	  return    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
45	[BUG]  [BUGGY]  return  numberOfArgs  /  2;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  return  numberOfArgs  /  2;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  numberOfArgs  /  2;	  return    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
46	[BUG]  [BUGGY]  while(numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  while(numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	while(numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  while(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
47	[BUG]  [BUGGY]  while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	while(numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  while(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
48	[BUG]  [BUGGY]  OptionBuilder.this.append( "  <  identifier> ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  <  identifier> ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  <  identifier> ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
49	[BUG]  [BUGGY]  OptionBuilder.this.append( "null ").append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "null ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "null ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
50	[BUG]  [BUGGY]  OptionBuilder.this.append( "  <   ").append('n');  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  <   ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  <   ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
51	[BUG]  [BUGGY]  String  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  String  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	String  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  char    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
52	[BUG]  [BUGGY]  NumberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOfArgs  =  Option.NUMBER_OF_ARGS;	  char    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
53	[BUG]  [BUGGY]  Number  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Number  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Number  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  char    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
54	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(null);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(null);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName(null);	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
55	[BUG]  [BUGGY]  aughtExceptionHandler.handleError();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError();	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
56	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingError();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingError();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingError();	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
57	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;	  null    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
58	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
59	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
60	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  +  1;	  Integer    numberOfArgs    =    Option.NUMBER_IN_ARRAY;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
61	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_IN_ARRAY;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_IN_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_IN_ARRAY;	  Integer    numberOfArgs    =    Option.NUMBER_IN_ARRAY;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
62	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY  -  1;	  Integer    numberOfArgs    =    Option.NUMBER_IN_ARRAY;    	non-compiled	[CE]  <identifier>  expected	52	None	replace
63	[BUG]  [BUGGY]  NumberOutput.parseInt(0,  numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseInt(0,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(0,  numberOfArgs);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
64	[BUG]  [BUGGY]  NumberOutput.parseInt(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseInt(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(numberOfArgs,  1);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
65	[BUG]  [BUGGY]  NumberOutput.parseFloat(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseFloat(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseFloat(numberOfArgs);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
66	[BUG]  [BUGGY]  NumberOutput.parseInt(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseInt(numberOfArgs  +  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(numberOfArgs  +  1);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
67	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "native   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
68	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "native   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
69	[BUG]  [BUGGY]  null  =  NumberOutput.parseNumberInput(numberOfArgs);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  null  =  NumberOutput.parseNumberInput(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  =  NumberOutput.parseNumberInput(numberOfArgs);	  return    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
70	[BUG]  [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseNumberInput(numberOfArgs,  1);	  return    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
71	[BUG]  [BUGGY]  return  NumberOutput.parseNumberInput(0,  numberOfArgs);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseNumberInput(0,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseNumberInput(0,  numberOfArgs);	  return    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
72	[BUG]  [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseNumberInput(numberOfArgs,  0);	  return    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
73	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression ",  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression ",  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.error.start  of  expression ",  expected);	  AssertionFailedError.warning(   "msg.bad.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.bad.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.bad.error.start  of  expression ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "msg.bad.error.start  of  expression ");	  AssertionFailedError.warning(   "msg.bad.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression "  +  name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.error.start  of  expression "  +  name);	  AssertionFailedError.warning(   "msg.bad.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  pending(numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  pending(numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  <  1)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
77	[BUG]  [BUGGY]  pending(numberOfArgs  {  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  pending(numberOfArgs  {  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  {  1)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    1)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	68	None	replace
78	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(0,  numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(0,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(0,  numberOfArgs);	  pendingError    =    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
79	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  1);	  pendingError    =    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
80	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(this.numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(this.numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(this.numberOfArgs);	  pendingError    =    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
81	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  0);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  0);	  pendingError    =    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
82	[BUG]  [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+getMessage());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "Unexpected  error: "+getMessage());  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "Unexpected  error: "+getMessage());	  AssertionFailedError.error(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
83	[BUG]  [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage(),  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "Unexpected  error: "+getMessage(),  expected);	  AssertionFailedError.error(   "Unexpected    error:   "+getMessage());    	non-compiled	[CE]  <identifier>  expected	85	None	replace
84	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  /  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  /  1;	  int    numberOfArgs    =    Option.NUMBER_OF_ARRAY    +    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
85	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1L;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1L;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1L;	  int    numberOfArgs    =    Option.NUMBER_OF_ARRAY    +    1;    	non-compiled	[CE]  <identifier>  expected	36	None	replace
86	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  new  AssertionFailedError());  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: "  +  new  AssertionFailedError());	  OptionBuilder.appendText(   "Assertion    failed:   ",    new    AssertionFailedError());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
87	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs,  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs,  new  AssertionFailedError());  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: "  +  numberOfArgs,  new  AssertionFailedError());	  OptionBuilder.appendText(   "Assertion    failed:   ",    new    AssertionFailedError());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
88	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError()).returnZero();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError()).returnZero();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError()).returnZero();	  OptionBuilder.appendText(   "Assertion    failed:   ",    new    AssertionFailedError());    	non-compiled	[CE]  <identifier>  expected	106	None	replace
89	[BUG]  [BUGGY]  OptionBuilder.this.append( ":n ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( ":n ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( ":n ");	  OptionBuilder.this.append(   ":   ");    	non-compiled	[CE]  <identifier>  expected	86	None	replace
90	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
91	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED    +    1;    	non-compiled	[CE]  <identifier>  expected	58	None	replace
92	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  type);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  type);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  type);  }	  pending(1)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
93	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  1);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  1);  }	  pending(1)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
94	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  0);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  0);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs,  0);  }	  pending(1)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
95	[BUG]  [BUGGY]  pending(2)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  pending(2)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(2)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }	  pending(1)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
96	[BUG]  [BUGGY]  AnnotationFailedError.class.getName());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getName());  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getName());	  AnnotationFailedError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
97	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName(),  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName(),  null);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName(),  null);	  AnnotationFailedError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
98	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName()  + ": ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName()  + ": ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName()  + ": ");	  AnnotationFailedError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
99	[BUG]  [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getClass());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getClass());  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendError( "Unexpected  error: "  +  getClass());	  OptionBuilder.this.appendError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
100	[BUG]  [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage(),  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage(),  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage(),  expected);	  OptionBuilder.this.appendError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
101	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_ERROR;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN_ERROR;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN_ERROR;	  Integer    numberOfArgs    =    Option.NUMBER_ERROR;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
102	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.ERROR;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.ERROR;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.ERROR;	  Integer    numberOfArgs    =    Option.NUMBER_ERROR;    	non-compiled	[CE]  <identifier>  expected	80	None	replace
103	[BUG]  [BUGGY]  nisipTo(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
104	[BUG]  [BUGGY]  nisipTo(numberOfArgs,  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs,  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs,  null)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
105	[BUG]  [BUGGY]  nisipTo(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
106	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;	  double    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
107	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_EXTENDS;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_EXTENDS;	  double    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  <identifier>  expected	103	None	replace
108	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.bad.start  of  expression ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.bad.start  of  expression ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "msg.bad.start  of  expression ");	  AssertionFailedError.warning(   "msg.bad.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
109	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ",  expected);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ",  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.start  of  expression ",  expected);	  AssertionFailedError.warning(   "msg.bad.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
110	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression "  +  name);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.start  of  expression "  +  name);	  AssertionFailedError.warning(   "msg.bad.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
111	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  type);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  type);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
112	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  name);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  name);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  name);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
113	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  0);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
114	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  size);  [CE]  invalid  method  declaration;  return  type  required  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  size);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  size);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
115	[BUG]  [BUGGY]  OptionBuilder.this.append( "  <  identifier> ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  <  identifier> ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  <  identifier> ");	  OptionBuilder.this.append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
116	[BUG]  [BUGGY]  OptionBuilder.this.append( "null ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "null ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "null ");	  OptionBuilder.this.append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
117	[BUG]  [BUGGY]  OptionBuilder.this.append( "  <   ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  <   ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  <   ");	  OptionBuilder.this.append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
118	[BUG]  [BUGGY]  OptionBuilder.this.append( "  {   ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  {   ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  {   ");	  OptionBuilder.this.append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
119	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
120	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( ", ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( ", ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( ", ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	47	None	replace
121	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
122	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnknownError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleUnknownError(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleUnknownError(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
123	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
124	[BUG]  [BUGGY]  aughtExceptionHandler.handleErrorInput(numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleErrorInput(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleErrorInput(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
125	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(numberOfArgs);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
126	[BUG]  [BUGGY]  final  Integer  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  final  Integer  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	final  Integer  numberOfArgs  =  Option.UNINITIALIZED;	  Integer    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
127	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.UNINITIALIZED;	  Integer    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
128	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNNITIALIZED;	  Integer    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
129	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.UNNITIALIZED;	  Integer    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	51	None	replace
130	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
131	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_VALUE;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_VALUE;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_VALUE;	  Integer    numberOfArgs    =    Option.NUMBER_VALUE;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
132	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_VALUE  +  1;	  Integer    numberOfArgs    =    Option.NUMBER_VALUE;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
133	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE  -  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_VALUE  -  1;	  Integer    numberOfArgs    =    Option.NUMBER_VALUE;    	non-compiled	[CE]  <identifier>  expected	9	None	replace
134	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  0);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  0);	  aughtExceptionHandler.handleFailedError(   "Missing    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
135	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  name);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  name);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  name);	  aughtExceptionHandler.handleFailedError(   "Missing    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
136	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  exception);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  exception);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  exception);	  aughtExceptionHandler.handleFailedError(   "Missing    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
137	[BUG]  [BUGGY]  pending  numberOfArgs  =  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending  numberOfArgs  =  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending  numberOfArgs  =  1;	  pending    numberOfArgs    =    0;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
138	[BUG]  [BUGGY]  pending  numberOfArgs  =  0L;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending  numberOfArgs  =  0L;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending  numberOfArgs  =  0L;	  pending    numberOfArgs    =    0;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
139	[BUG]  [BUGGY]  pending  numberOfArgs  =  2;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending  numberOfArgs  =  2;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending  numberOfArgs  =  2;	  pending    numberOfArgs    =    0;    	non-compiled	[CE]  <identifier>  expected	79	None	replace
140	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }	  pending(1)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
141	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  0);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  0);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  0);  }	  pending(1)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
142	[BUG]  [BUGGY]  pending(2)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending(2)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(2)  {  return  NumberOutput.parseInt(numberOfArgs);  }	  pending(1)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
143	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }	  pending(1)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
144	[BUG]  [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
145	[BUG]  [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
146	[BUG]  [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
147	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
148	[BUG]  [BUGGY]  pending(0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0)  {  throw  new  IllegalArgumentException( " ");  }	  pending(0L)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
149	[BUG]  [BUGGY]  pending(1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  throw  new  IllegalArgumentException( " ");  }	  pending(0L)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
150	[BUG]  [BUGGY]  pending(1L)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1L)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1L)  {  throw  new  IllegalArgumentException( " ");  }	  pending(0L)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
151	[BUG]  [BUGGY]  pending(10)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  pending(10)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(10)  {  throw  new  IllegalArgumentException( " ");  }	  pending(0L)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
152	[BUG]  [BUGGY]  ||  numberOfArgs  >  1)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  ||  numberOfArgs  >  1)  {  return  this;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	||  numberOfArgs  >  1)  {  return  this;  }	  ||    numberOfArgs    >    0)    {    return    this;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
153	[BUG]  [BUGGY]  ||  numberOfArgs  <  0)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  ||  numberOfArgs  <  0)  {  return  this;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	||  numberOfArgs  <  0)  {  return  this;  }	  ||    numberOfArgs    >    0)    {    return    this;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
154	[BUG]  [BUGGY]  ||  numberOfArgs  ==  0)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  ||  numberOfArgs  ==  0)  {  return  this;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	||  numberOfArgs  ==  0)  {  return  this;  }	  ||    numberOfArgs    >    0)    {    return    this;    }    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
155	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;	  private    final    static    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
156	[BUG]  [BUGGY]  private  final  static  byte  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  byte  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  byte  numberOfArgs  =  Option.UNNITIALIZED;	  private    final    static    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
157	[BUG]  [BUGGY]  return  NumberOutput.parseInt(numberOfArgs,  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseInt(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(numberOfArgs,  1);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
158	[BUG]  [BUGGY]  return  NumberOutput.parseInt(0,  numberOfArgs);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseInt(0,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(0,  numberOfArgs);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
159	[BUG]  [BUGGY]  null  =  NumberOutput.parseInt(numberOfArgs);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  null  =  NumberOutput.parseInt(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  =  NumberOutput.parseInt(numberOfArgs);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
160	[BUG]  [BUGGY]  return  NumberOutput.parseInt(numberOfArgs  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseInt(numberOfArgs  +  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(numberOfArgs  +  1);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
161	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression "  +  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  expression "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression "  +  name);	  System.err.println(   "Failed    to    start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
162	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression. ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  expression. ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression. ");	  System.err.println(   "Failed    to    start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
163	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression "  +  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  expression "  +  this);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression "  +  this);	  System.err.println(   "Failed    to    start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
164	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
165	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
167	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
168	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
169	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
170	[BUG]  [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  double  numberOfArgs  =  Option.UNNITIALIZED;	  private    static    final    double    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
171	[BUG]  [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    static    final    double    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
172	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	  int    numberOfArgs    =    Option.UNKNOWN_EXTENDS;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
173	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN_EXTENDS  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN_EXTENDS  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.UNKNOWN_EXTENDS  -  1;	  int    numberOfArgs    =    Option.UNKNOWN_EXTENDS;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
174	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  long  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	  int    numberOfArgs    =    Option.UNKNOWN_EXTENDS;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
175	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]        [BUGGY]  short  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	  int    numberOfArgs    =    Option.UNKNOWN_EXTENDS;    	non-compiled	[CE]  <identifier>  expected	30	None	replace
176	[BUG]  [BUGGY]  private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
177	[BUG]  [BUGGY]  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	final  static  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
178	[BUG]  [BUGGY]  Private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Private  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
179	[BUG]  [BUGGY]  private  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
180	[BUG]  [BUGGY]  this.numberOfArgs  =  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  =  0;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  0;	  this.numberOfArgs    =    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
181	[BUG]  [BUGGY]  this.numberOfArgs  =  1;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  =  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  1;	  this.numberOfArgs    =    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
182	[BUG]  [BUGGY]  this.numberOfArgs  =  NumberOutput.parseInt(numberOfArgs);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  =  NumberOutput.parseInt(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  NumberOutput.parseInt(numberOfArgs);	  this.numberOfArgs    =    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
183	[BUG]  [BUGGY]  this.numberOfArgs  =  numberOfArgs  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  =  numberOfArgs  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  numberOfArgs  +  1;	  this.numberOfArgs    =    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
184	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
185	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  /  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY  /  1;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
186	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1L;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1L;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1L;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY    +    1;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs.length;  ++i)  {  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs  +  1;  ++i)  {  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs-1;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs-1;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs-1;  ++i)  {  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
190	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  error: "  +  numberOfArgs);  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  error: "  +  numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  error: "  +  numberOfArgs);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
191	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
192	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
193	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
194	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0,  numberOfArgs.length)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
195	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  type);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  type);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  type);	  aughtError(   "Unexpected    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
196	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  name);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  name);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  name);	  aughtError(   "Unexpected    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
197	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  0);	  aughtError(   "Unexpected    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
198	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  1);	  aughtError(   "Unexpected    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
199	[BUG]  [BUGGY]  this.numberOfArgs  >  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  >  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  >  1;	  this.numberOfArgs    >    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
200	[BUG]  [BUGGY]  this.numberOfArgs  >  2;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  >  2;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  >  2;	  this.numberOfArgs    >    0;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
201	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  /  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  /  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARGS  /  1;	  int    numberOfArgs    =    Option.NUMBER_OF_ARGS    -    1;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
202	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;	  int    numberOfArgs    =    Option.NUMBER_OF_ARGS    -    1;    	non-compiled	[CE]  <identifier>  expected	104	None	replace
203	[BUG]  [BUGGY]  String  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  String  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	String  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	  char    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
204	[BUG]  [BUGGY]  NumberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOfArgs  =  Option.NUMBER_OF_ARRAY;	  char    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
205	[BUG]  [BUGGY]  Number  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Number  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Number  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	  char    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
206	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  aught    Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	93	None	replace
207	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	throw  new  IllegalArgumentException( " ");	  aught    Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
208	[BUG]  [BUGGY]  if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  aught    Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
209	[BUG]  [BUGGY]  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    byte    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	77	None	replace
210	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n   ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n   ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
211	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "   ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
212	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-function ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-function ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-function ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
213	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;	  short    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	34	None	replace
214	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number "  +  numberOfArgs);	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
215	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number. ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number. ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number. ",  numberOfArgs);	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
216	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs: "  +  numberOfArgs);	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
217	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
218	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  <  =  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  <  =  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  <  =  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
219	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  >=  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
220	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  vice.appendText( "Assertion  failed: ");  }  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  vice.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  vice.appendText( "Assertion  failed: ");  }	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
221	[BUG]  [BUGGY]  if(numberOfArgs  >  1)  {  vice.appendText( "Assertion  failed: ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  1)  {  vice.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  1)  {  vice.appendText( "Assertion  failed: ");  }	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
222	[BUG]  [BUGGY]  v.appendText( "Assertion  failed: ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  v.appendText( "Assertion  failed: ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	v.appendText( "Assertion  failed: ");	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
223	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(0,  numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(0,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(0,  numberOfArgs);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
224	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(this,  numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(this,  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(this,  numberOfArgs);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
225	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(this.numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(this.numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(this.numberOfArgs);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
226	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(numberOfArgs,  1);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
227	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternalException( " ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwInternalException( " ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwInternalException( " ");	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
228	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
229	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternalError();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwInternalError();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwInternalError();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
230	[BUG]  [BUGGY]  private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
231	[BUG]  [BUGGY]  Private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Private  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
232	[BUG]  [BUGGY]  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	53	None	replace
233	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
234	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0L)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
235	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
236	[BUG]  [BUGGY]  static  final  long  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  long  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  long  numberOfArgs  =  Option.UNINITIALIZED;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
237	[BUG]  [BUGGY]  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  double  numberOfArgs  =  Option.UNINITIALIZED;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
238	[BUG]  [BUGGY]  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
239	[BUG]  [BUGGY]  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  int  numberOfArgs  =  Option.UNNITIALIZED;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	18	None	replace
240	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  +  1;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
241	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
242	[BUG]  [BUGGY]  public  static  final  long  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  long  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  long  numberOfArgs  =  Option.UNINITIALIZED;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
243	[BUG]  [BUGGY]  public  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
244	[BUG]  [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED_ERROR;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
245	[BUG]  [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	76	None	replace
246	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ".    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
247	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ".    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
248	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ERROR;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ERROR;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_ERROR;	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
249	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ARGS;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_ARGS;	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
250	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  long  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.NUMBER_INVALID;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
251	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  short  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_INVALID;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
252	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_INVALID;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
253	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_ERROR;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_ERROR;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_ERROR;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  <identifier>  expected	10	None	replace
254	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  type);  }	  aughtError(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
255	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  1)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs  >  1)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  1)  {  return  NumberOutput.parseInt(numberOfArgs);  }	  aughtError(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
256	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  1);  }	  aughtError(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
257	[BUG]  [BUGGY]  pending(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
258	[BUG]  [BUGGY]  pending(numberOfArgs  {  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending(numberOfArgs  {  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  {  0)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
259	[BUG]  [BUGGY]  aughtError(numberOfArgs,  null);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  null);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  null);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
260	[BUG]  [BUGGY]  aughtError(numberOfArgs,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  1);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
261	[BUG]  [BUGGY]  aughtError(numberOfArgs,  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  0);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
262	[BUG]  [BUGGY]  aughtError(numberOfArgs,  Object.class);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  Object.class);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  Object.class);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
263	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.NUMBER_INT;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  long  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.NUMBER_INT;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
264	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_INT;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  short  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_INT;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
265	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_INT;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_INT;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
266	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_FAIL;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_FAIL;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_FAIL;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
267	[BUG]  [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  long  numberOfArgs  =  Option.UNINITIALIZED  +  1;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
268	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1L;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
269	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  /  1;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED    +    1;    	non-compiled	[CE]  <identifier>  expected	70	None	replace
270	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression ",  expected);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression ",  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.error.start  of  expression ",  expected);	  AssertionFailedError.warning(   "msg.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
271	[BUG]  [BUGGY]  AssertionFailedError.error( "msg.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.error( "msg.error.start  of  expression ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "msg.error.start  of  expression ");	  AssertionFailedError.warning(   "msg.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
272	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression "  +  name);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.error.start  of  expression "  +  name);	  AssertionFailedError.warning(   "msg.error.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	5	None	replace
273	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
274	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	62	None	replace
275	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;	  double    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
276	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  |  Option.UNINITIALIZED;	  double    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	99	None	replace
277	[BUG]  [BUGGY]  aught(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aught(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
278	[BUG]  [BUGGY]  aught(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aught(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
279	[BUG]  [BUGGY]  aught(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aught(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
280	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    =    numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
281	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  numberOfArgs  <  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    =    numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
282	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  1);	  AssertionFailedError.this.numberOfArgs    =    NumberOutput.parse(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
283	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  0);	  AssertionFailedError.this.numberOfArgs    =    NumberOutput.parse(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
284	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  Integer.MAX_VALUE);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs,  Integer.MAX_VALUE);	  AssertionFailedError.this.numberOfArgs    =    NumberOutput.parse(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
285	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError(new  IllegalArgumentException( " "));  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError(new  IllegalArgumentException( " "));	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
286	[BUG]  [BUGGY]  aughtExceptionHandler.handleError(numberOfArgs,  null);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError(numberOfArgs,  null);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError(numberOfArgs,  null);	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
287	[BUG]  [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  this);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  this);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendText( "Error  starting  expression: "  +  this);	  OptionBuilder.this.appendText(   "Error    starting    expression:   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
288	[BUG]  [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  identifier);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  identifier);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendText( "Error  starting  expression: "  +  identifier);	  OptionBuilder.this.appendText(   "Error    starting    expression:   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
289	[BUG]  [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  name);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendText( "Error  starting  expression: "  +  name);	  OptionBuilder.this.appendText(   "Error    starting    expression:   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
290	[BUG]  [BUGGY]  (AssertionFailedError.this.numberOfArgs  >  0))  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  (AssertionFailedError.this.numberOfArgs  >  0))  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	(AssertionFailedError.this.numberOfArgs  >  0))  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
291	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "null ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "null ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "null ");	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
292	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }   ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }   ");	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
293	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }  is  not  an  argument ");  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }  is  not  an  argument ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ", "expected  numberOfArgs:  {  0  }  is  not  an  argument ");	  aughtExceptionHandler.throwAssertionFailedError(   "msg.illegal.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	21	None	replace
294	[BUG]  [BUGGY]  while(i  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  while(i  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	while(i  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  while(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
295	[BUG]  [BUGGY]  pending(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
296	[BUG]  [BUGGY]  pending(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  pending(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }	  pending(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	65	None	replace
297	[BUG]  [BUGGY]  public  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  final  static  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	105	None	replace
298	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;	  private    final    static    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
299	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  -  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  -  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED  -  1;	  private    final    static    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  <identifier>  expected	11	None	replace
300	[BUG]  [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED  +  1;	  private    static    final    double    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
301	[BUG]  [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_VALUE;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_VALUE;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED_VALUE;	  private    static    final    double    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  <identifier>  expected	54	None	replace
302	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR  -  1;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	13	None	replace
303	[BUG]  [BUGGY]  OptionBuilder.this.append( "identifier:  {  0  }   ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "identifier:  {  0  }   ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "identifier:  {  0  }   ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
304	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
305	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
306	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED  +  1;	  private    static    final    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  <identifier>  expected	55	None	replace
307	[BUG]  [BUGGY]  Double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  Double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	  char    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  <identifier>  expected	71	None	replace
308	[BUG]  [BUGGY]  pending(0)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending(0)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }	  pending(1)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	59	None	replace
309	[BUG]  [BUGGY]  public  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	76	None	replace
310	[BUG]  [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	76	None	replace
311	[BUG]  [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_FAIL_ERROR;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_FAIL_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_FAIL_ERROR;	  public    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	76	None	replace
312	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.valueOf(numberOfArgs));  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.valueOf(numberOfArgs));  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: "  +  NumberOfArgs.valueOf(numberOfArgs));	  OptionBuilder.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
313	[BUG]  [BUGGY]  vice.appendText( "Assertion  failed: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  vice.appendText( "Assertion  failed: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	vice.appendText( "Assertion  failed: "  +  numberOfArgs);	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
314	[BUG]  [BUGGY]  vict.appendText( "Assertion  failed: ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  vict.appendText( "Assertion  failed: ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	vict.appendText( "Assertion  failed: ");	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
315	[BUG]  [BUGGY]  Double  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Double  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Double  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  char    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	69	None	replace
316	[BUG]  [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "native   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
317	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "native   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	98	None	replace
318	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }   ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }   ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }   ");	  aughtExceptionHandler.handleMissingName(   "msg.unterminated.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
319	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }  cannot  be  deprecated  }   ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }  cannot  be  deprecated  }   ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs:  {  0  }  cannot  be  deprecated  }   ");	  aughtExceptionHandler.handleMissingName(   "msg.unterminated.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
320	[BUG]  [BUGGY]  safeGet(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeGet(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeGet(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
321	[BUG]  [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
322	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  nameNode);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  nameNode);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  nameNode);	  aughtExceptionHandler.handleFailedError(   "Missing    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
323	[BUG]  [BUGGY]  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	18	None	replace
324	[BUG]  [BUGGY]  static  final  int  numberOfArgs  =  Option.NUMBER_EXTENDS;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  int  numberOfArgs  =  Option.NUMBER_EXTENDS;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  int  numberOfArgs  =  Option.NUMBER_EXTENDS;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	18	None	replace
325	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_ARGS;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_ARGS;	  double    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	103	None	replace
326	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_ALIASING;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_ALIASING;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_ALIASING;	  double    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	103	None	replace
327	[BUG]  [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getName());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getName());  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendError( "Unexpected  error: "  +  getName());	  OptionBuilder.this.appendError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
328	[BUG]  [BUGGY]  this.numberOfArgs  =  numberOfArgs  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  this.numberOfArgs  =  numberOfArgs  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  numberOfArgs  -  1;	  this.numberOfArgs    =    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
329	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ERROR  +  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ERROR  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ERROR  +  1;	  Integer    numberOfArgs    =    Option.NUMBER_ERROR;    	non-compiled	[CE]  	80	None	replace
330	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  -  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARRAY  -  1;	  double    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  	99	None	replace
331	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: "	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ".    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	73	None	replace
332	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
333	[BUG]  [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
334	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression: "  +  name);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  expression: "  +  name);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression: "  +  name);	  System.err.println(   "Failed    to    start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
335	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
336	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MIN_VALUE);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MIN_VALUE);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(numberOfArgs,  Integer.MIN_VALUE);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
337	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
338	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs.length;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs.length;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  0,  len  =  numberOfArgs.length;  i  <  len;  ++i)  {  OptionBuilder.appendText( "n ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
339	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INITIALIZED;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_INITIALIZED;	  [Delete]    	non-compiled	[CE]  	92	None	replace
340	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( " ")  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( " ")  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( " ")	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
341	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ");  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ");	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
342	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  2;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  2;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  2;	  int    numberOfArgs    =    Option.NUMBER_OF_ARRAY    +    1;    	non-compiled	[CE]  	36	None	replace
343	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  short    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	29	None	replace
344	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs  +  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs  +  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs  +  1);	  AssertionFailedError.this.numberOfArgs    =    NumberOutput.parse(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
345	[BUG]  [BUGGY]  public  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  public  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  String  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    char    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	53	None	replace
346	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ARGS  |  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_ARGS  |  Option.UNINITIALIZED;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_ARGS  |  Option.UNINITIALIZED;	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
347	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
348	[BUG]  [BUGGY]  safely(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
349	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnexpectedNumberInput(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleUnexpectedNumberInput(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleUnexpectedNumberInput(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
350	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnexpectedError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleUnexpectedError(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleUnexpectedError(numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
351	[BUG]  [BUGGY]  annotationFailedError.class.getName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  annotationFailedError.class.getName();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	annotationFailedError.class.getName();	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
352	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName()  + "  <  identifier> ";  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.getSimpleName()  + "  <  identifier> ";  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName()  + "  <  identifier> ";	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
353	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	96	None	replace
354	[BUG]  [BUGGY]  nisipTo(type)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(type)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(type)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
355	[BUG]  [BUGGY]  nisipTo(type,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(type,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(type,  numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
356	[BUG]  [BUGGY]  nisipTo(numberOfArgs  -  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs  -  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs  -  1)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
357	[BUG]  [BUGGY]  return  NumberOutput.parseInt(numberOfArgs  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseInt(numberOfArgs  -  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(numberOfArgs  -  1);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
358	[BUG]  [BUGGY]  return  NumberOutput.parseInt(numberOfArgs,  0);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseInt(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(numberOfArgs,  0);	  return    NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
359	[BUG]  [BUGGY]  char  numberOfArgs  =  Option.NUMBER_INT;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  char  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	char  numberOfArgs  =  Option.NUMBER_INT;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  	31	None	replace
360	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INT  +  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INT  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_INT  +  1;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  	31	None	replace
361	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-string ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	49	None	replace
362	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "Unexpected  error: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "Unexpected  error: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError( "Unexpected  error: "  +  numberOfArgs);	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
363	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  -  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  -  1;	  Integer    numberOfArgs    =    Option.NUMBER_EXTENDS;    	non-compiled	[CE]  	64	None	replace
364	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  +  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_EXTENDS  +  1;	  Integer    numberOfArgs    =    Option.NUMBER_EXTENDS;    	non-compiled	[CE]  	64	None	replace
365	[BUG]  [BUGGY]  AnnotationFailedError.class);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class);	  AnnotationFailedError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
366	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
367	[BUG]  [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	72	None	replace
368	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
369	[BUG]  [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safely(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
370	[BUG]  [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeName(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	60	None	replace
371	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN  +  1;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN  +  1;	  Integer    numberOfArgs    =    Option.UNKNOWN;    	non-compiled	[CE]  	32	None	replace
372	[BUG]  [BUGGY]  aughtError(numberOfArgs,  InvalidElementType.ERROR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  InvalidElementType.ERROR);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  InvalidElementType.ERROR);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
373	[BUG]  [BUGGY]  aughtError(numberOfArgs,  InvalidNullValue.ERROR);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs,  InvalidNullValue.ERROR);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs,  InvalidNullValue.ERROR);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
374	[BUG]  [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED  +  1;	  private    static    final    byte    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	77	None	replace
375	[BUG]  [BUGGY]  final  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  final  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	final  Throwables.throw  new  IllegalArgumentException( " ");	  aught    Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	93	None	replace
376	[BUG]  [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);	  return    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
377	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError(numberOfArgs);	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
378	[BUG]  [BUGGY]  aughtExceptionHandler.handleNumberError( "msg.unknown.type ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleNumberError( "msg.unknown.type ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleNumberError( "msg.unknown.type ",  numberOfArgs);	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
379	[BUG]  [BUGGY]  NumberOutput.parseInt(numberOfArgs  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseInt(numberOfArgs  -  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(numberOfArgs  -  1);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
380	[BUG]  [BUGGY]  NumberOutput.parseInt(numberOfArgs,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parseInt(numberOfArgs,  0);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(numberOfArgs,  0);	  NumberOutput.parseInt(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
381	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  2)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs  >  2)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  2)  {  return  NumberOutput.parseInt(numberOfArgs);  }	  aughtError(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
382	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.NUMBER_ERROR;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.NUMBER_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.NUMBER_ERROR;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  	12	None	replace
383	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;	  null    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
384	[BUG]  [BUGGY]  aught(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aught(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  >=  0)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
385	[BUG]  [BUGGY]  char  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  char  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	char  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	  int    numberOfArgs    =    Option.UNKNOWN_EXTENDS;    	non-compiled	[CE]  	30	None	replace
386	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER;  [CE]  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER;	  Integer    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	51	None	replace
387	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  2;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  2;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  2;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY    +    1;    	non-compiled	[CE]  	82	None	replace
388	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "negative ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "negative ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  true)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "negative ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
389	[BUG]  [BUGGY]  pending(2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  pending(2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(2)  {  throw  new  IllegalArgumentException( " ");  }	  pending(0L)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	19	None	replace
390	[BUG]  [BUGGY]  char  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  char  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	char  numberOfArgs  =  Option.NUMBER_INVALID;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  	10	None	replace
391	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1L;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1L;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1L;	  int    numberOfArgs    =    Option.NUMBER_OF_ARGS    -    1;    	non-compiled	[CE]  	104	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs.size();  ++i)  {  }	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
393	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  0)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
394	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    options.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	26	None	replace
395	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	23	None	replace
396	[BUG]  [BUGGY]  aughtError( "Missing  numberOfArgs: "  +  numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  numberOfArgs: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  numberOfArgs: "  +  numberOfArgs);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
397	[BUG]  [BUGGY]  aughtError( "Missing  numberOfArgs  for  method: "  +  numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  numberOfArgs  for  method: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  numberOfArgs  for  method: "  +  numberOfArgs);	  aughtError(numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	3	None	replace
398	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.no.number ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.no.number ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.no.number ");	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
399	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.invalid.number ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.invalid.number ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.invalid.number ",  numberOfArgs);	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
400	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.unknown.type ");  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.unknown.type ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.unknown.type ");	  aughtExceptionHandler.throwAssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	20	None	replace
401	[BUG]  [BUGGY]  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	numberOfArgs  =  Option.NUMBER_OF_ARGS;	  long    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  <identifier>  expected	28	None	replace
402	[BUG]  [BUGGY]  OptionBuilder.this.append( "  => ").append('n');  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  => ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  => ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
403	[BUG]  [BUGGY]  OptionBuilder.this.append( "  <  / ").append('n');  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  <  / ").append('n');  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  <  / ").append('n');	  OptionBuilder.this.append(   "n   ").append('n');    	non-compiled	[CE]  <identifier>  expected	84	None	replace
404	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_INVALID;	  int    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  	10	None	replace
405	[BUG]  [BUGGY]  return  numberOfArgs  *  numberOfArgs;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  return  numberOfArgs  *  numberOfArgs;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  numberOfArgs  *  numberOfArgs;	  return    numberOfArgs;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
406	[BUG]  [BUGGY]  Int  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  Int  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Int  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  short    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	29	None	replace
407	[BUG]  [BUGGY]  OptionBuilder.this.append( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "Unexpected  error: "  +  getMessage());  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "Unexpected  error: "  +  getMessage());	  OptionBuilder.this.appendError(   "Unexpected    error:   "    +    getMessage());    	non-compiled	[CE]  <identifier>  expected	88	None	replace
408	[BUG]  [BUGGY]  System.err.println( "Unexpected  numberOfArgs: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Unexpected  numberOfArgs: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Unexpected  numberOfArgs: "  +  numberOfArgs);	  [Delete]    	non-compiled	[CE]  <identifier>  expected	92	None	replace
409	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Error: "+numberOfArgs);  }  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Error: "+numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Error: "+numberOfArgs);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
410	[BUG]  [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  number  of  arguments. ");  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  number  of  arguments. ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  >  0)  {  for(int  i  =  1;  i  <  numberOfArgs;  ++i)  {  System.err.println( "Unexpected  number  of  arguments. ");  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
411	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                          AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  1);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
412	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  Object.class);  [CE]  invalid  method  declaration;  return  type  required  [FE]                            AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  Object.class);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs,  Object.class);	  aughtError(   "Missing    number    of    argument:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	95	None	replace
413	[BUG]  [BUGGY]  aughtExceptionHandler.handleError( "Unknown  error: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleError( "Unknown  error: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleError( "Unknown  error: "  +  numberOfArgs);	  aughtExceptionHandler.handleNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
414	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs ",  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number ", "expected  numberOfArgs ",  numberOfArgs);	  aughtExceptionHandler.handleMissingName(   "msg.unterminated.number   ",    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
415	[BUG]  [BUGGY]  if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  null  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  null  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  null  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
416	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
417	[BUG]  [BUGGY]  if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	if(numberOfArgs  ==  Option.NUMBER_OF_ARGS)  {  numberOfArgs  =  Option.NUMBER_OF_ARGS;  }	  null    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
418	[BUG]  [BUGGY]  AnnotationFailedError.class,  new  Class  <  Object>());  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class,  new  Class  <  Object>());  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class,  new  Class  <  Object>());	  AnnotationFailedError.class.getSimpleName());    	non-compiled	[CE]  <identifier>  expected	17	None	replace
419	[BUG]  [BUGGY]  AnnotationFailedError.class.reset();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AnnotationFailedError.class.reset();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.reset();	  AnnotationFailedError.class.getSimpleName();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
420	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(numberOfArgs,  Integer.MAX_VALUE);	  pendingError    =    NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	101	None	replace
421	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ",  new  OptionBuilder());  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ",  new  OptionBuilder());  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.start  of  expression ",  new  OptionBuilder());	  AssertionFailedError.warning(   "msg.bad.start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
422	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARGS  +  1;	  int    numberOfArgs    =    Option.NUMBER_OF_ARGS    -    1;    	non-compiled	[CE]  	104	None	replace
423	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError();  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError();	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
424	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "Unknown  error ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName( "Unknown  error ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "Unknown  error ");	  aughtExceptionHandler.handleMissingName();    	non-compiled	[CE]  <identifier>  expected	57	None	replace
425	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression ",  expected);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  System.err.println( "Failed  to  start  of  expression ",  expected);  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression ",  expected);	  System.err.println(   "Failed    to    start    of    expression   ");    	non-compiled	[CE]  <identifier>  expected	87	None	replace
426	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  2);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  2);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseInt(numberOfArgs,  2);  }	  pending(1)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	56	None	replace
427	[BUG]  [BUGGY]  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  char  numberOfArgs  =  Option.UNINITIALIZED;	  static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	18	None	replace
428	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	25	None	replace
429	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;	  double    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	103	None	replace
430	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  Object.class);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  Object.class);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs,  Object.class);	  aughtExceptionHandler.handleFailedError(   "Missing    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	107	None	replace
431	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed:n ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.appendText( "Assertion  failed:n ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed:n ");	  OptionBuilder.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	14	None	replace
432	[BUG]  [BUGGY]  SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	  char    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  	71	None	replace
433	[BUG]  [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression:n ");  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression:n ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendText( "Error  starting  expression:n ");	  OptionBuilder.this.appendText(   "Error    starting    expression:   ");    	non-compiled	[CE]  <identifier>  expected	89	None	replace
434	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	  safeMultiply(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "null   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	97	None	replace
435	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_INT;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  double  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_INT;	  int    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  	31	None	replace
436	[BUG]  [BUGGY]  vio.appendText( "Assertion  failed: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  vio.appendText( "Assertion  failed: ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	vio.appendText( "Assertion  failed: ");	  vice.appendText(   "Assertion    failed:   ");    	non-compiled	[CE]  <identifier>  expected	15	None	replace
437	[BUG]  [BUGGY]  OptionBuilder.this.append( "  {  n ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  OptionBuilder.this.append( "  {  n ");  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "  {  n ");	  OptionBuilder.this.append(   "n   ");    	non-compiled	[CE]  <identifier>  expected	83	None	replace
438	[BUG]  [BUGGY]  NumberOutput.parse(numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  NumberOutput.parse(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parse(numberOfArgs);	  NumberOutput.parseNumberInput(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
439	[BUG]  [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  char  numberOfArgs  =  Option.UNNITIALIZED;	  private    final    static    int    numberOfArgs    =    Option.UNNITIALIZED;    	non-compiled	[CE]  	11	None	replace
440	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  1);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  1);	  safeAdd(numberOfArgs,    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	48	None	replace
441	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [CE]  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;	  long    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  	33	None	replace
442	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionsBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionsBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionsBuilder.append(optionBuilder.toString());  }	  safeAdd(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	24	None	replace
443	[BUG]  [BUGGY]  pending(1)  {  return  1;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  1;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  1;  }	  pending(1)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
444	[BUG]  [BUGGY]  pending(1)  {  return  0;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  pending(1)  {  return  0;  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  0;  }	  pending(1)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	78	None	replace
445	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  ArrayUtils.EMPTY_STRING_ARRAY);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  ArrayUtils.EMPTY_STRING_ARRAY);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs,  ArrayUtils.EMPTY_STRING_ARRAY);	  aughtError(   "Unexpected    number    of    arguments:   "    +    numberOfArgs);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	94	None	replace
446	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    =    numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
447	[BUG]  [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  	12	None	replace
448	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR,  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR,  1;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR,  1;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED_ERROR;    	non-compiled	[CE]  <identifier>  expected	12	None	replace
449	[BUG]  [BUGGY]  aught(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aught(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  >  2)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
450	[BUG]  [BUGGY]  aught(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aught(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(0,  numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }	  aught(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	66	None	replace
451	[BUG]  [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  stringOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  stringOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  stringOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
452	[BUG]  [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  NumberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	  nisipTo(numberOfArgs)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	61	None	replace
453	[BUG]  [BUGGY]  private  static  final  short  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  private  static  final  short  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]        [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  short  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    byte    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  	77	None	replace
454	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
455	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-variable  type ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-variable  type ");  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "no-variable  type ");  }	  safeMultiply(numberOfArgs,    false)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	50	None	replace
456	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnexpectedNumberError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleUnexpectedNumberError(numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleUnexpectedNumberError(numberOfArgs);	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
457	[BUG]  [BUGGY]  aughtExceptionHandler.handleNumberError( "Unknown  error: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleNumberError( "Unknown  error: "  +  numberOfArgs);  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleNumberError( "Unknown  error: "  +  numberOfArgs);	  aughtExceptionHandler.handleNumberError(numberOfArgs);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
458	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  -  1;  [CE]  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  -  1;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY  -  1;	  Integer    numberOfArgs    =    Option.NUMBER_ARRAY;    	non-compiled	[CE]  	81	None	replace
459	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError      [CONTEXT]        [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  numberOfArgs);  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs,  numberOfArgs);  }	  aughtError(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	42	None	replace
460	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  AssertionFailedError.this.numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  >  2)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	  AssertionFailedError.this.numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
461	[BUG]  [BUGGY]  SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        [BUGGY]  SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	SimpleNumeric  numberOfArgs  =  Option.NUMBER_OF_ARGS;	  char    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  	69	None	replace
462	[BUG]  [BUGGY]  aught  Throwables.throw  new  IllegalStateException( " ");  [CE]  [FE]                      AssertionFailedError      [CONTEXT]        [BUGGY]  aught  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught  Throwables.throw  new  IllegalStateException( " ");	  aught    Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	93	None	replace
463	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]        [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {  [BUGGY]      private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs  -  1;  ++i)  {	  for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
