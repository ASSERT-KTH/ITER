projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinallongnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=numberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs>0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.missing.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46vice.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0L){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwInternal();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46For(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_IN_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs>1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:".
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs;++i){
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalbytenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingnumberOfArgs=0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("n").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append(":");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendError("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46||numberOfArgs>0){returnthis;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46[Delete]
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtThrowables.thrownewIllegalArgumentException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:",newAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46while(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0L){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.missing.error.startofexpression",expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.missing.error.startofexpression"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("msg.missing.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46For(inti=0;i<numberOfArgs.length;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46For(inti=0;i<numberOfArgs-1;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46For(inti=0;i<numberOfArgs+1;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("null");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("Unexpectederror:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.error.expected.identifier",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinallongnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNNITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalcharnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNKNOWN;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.setSimpleName(null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName(),null;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number","Unexpectednumberofarguments:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0,numberOfArgs.length){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:"+NumberOfArgs.toString(numberOfArgs));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0L){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnnumberOfArgs-1;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0){returnnumberOfArgs-1;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(2){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnnumberOfArgs+1;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnthis.numberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs/2;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46while(numberOfArgs<0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46while(numberOfArgs>1){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("<identifier>").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("null").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("<").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46StringnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumbernumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName(null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARRAY|Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,1){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_IN_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_IN_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_IN_ARRAY-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(0,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseFloat(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46null=NumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(0,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.error.startofexpression",expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("msg.bad.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.error.startofexpression"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs<1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs{1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(0,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(this.numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("Unexpectederror:"+getMessage(),expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY+1L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:"+newAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:"+numberOfArgs,newAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:",newAssertionFailedError()).returnZero();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append(":n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED+1L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseNumberInput(numberOfArgs,type);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseNumberInput(numberOfArgs,1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseNumberInput(numberOfArgs,0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(2){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName(),null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName()+":");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendError("Unexpectederror:"+getClass());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendError("Unexpectederror:"+getMessage(),expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs,null){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARGS+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("msg.bad.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.startofexpression",expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.startofexpression"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,size);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("<identifier>");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("null");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("<");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("{");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(",");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleUnknownError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleErrorInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46finalIntegernumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_VALUE+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_VALUE-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs,name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs,exception);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingnumberOfArgs=1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingnumberOfArgs=0L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingnumberOfArgs=2;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs,1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs,0);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(2){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs,type);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinallongnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalcharnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalbytenumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1L){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(10){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46||numberOfArgs>1){returnthis;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46||numberOfArgs<0){returnthis;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46||numberOfArgs==0){returnthis;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNNITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticbytenumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(0,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46null=NumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression.");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression"+this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs.length;++i){
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs+1;++i){
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs.size();++i){
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,numberOfArgs.length){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNKNOWN_EXTENDS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46finalstaticStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46PrivatefinalstaticStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=NumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=numberOfArgs+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY+1L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs.length;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs+1;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs-1;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){System.err.println("Unexpectederror:"+numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0,numberOfArgs.length){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs,type);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs,name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs>1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs>2;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARGS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46StringnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumbernumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46Throwables.thrownewIllegalArgumentException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46thrownewIllegalArgumentException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs==1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalbytenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("no-function");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARRAY|Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number.",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number","expectednumberOfArgs:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs>1){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs<=0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs>=0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){vice.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>1){vice.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46v.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(0,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(this,numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(this.numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwInternalException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwInternalError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46PrivatestaticfinalStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0L){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinallongnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinaldoublenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.UNNITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED_ERROR+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED_ERROR-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinallongnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinaldoublenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNNITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:"
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:"
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs,type);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>1){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs,1);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs<0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs{0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_FAIL;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinallongnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED+1L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED/1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.error.startofexpression",expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("msg.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.error.startofexpression"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARRAY|Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs>1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs==0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs<0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=numberOfArgs>1){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=numberOfArgs<0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError(newIllegalArgumentException(""));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError(numberOfArgs,null);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:"+this);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:"+identifier);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46(AssertionFailedError.this.numberOfArgs>0)){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number","null");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number","expectednumberOfArgs:{0}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number","expectednumberOfArgs:{0}isnotanargument");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46while(i>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs>2){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0,numberOfArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicfinalstaticStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNNITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNNITIALIZED-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNINITIALIZED_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("identifier:{0}").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("no-string");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNNITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46DoublenumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNINITIALIZED_FAIL_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:"+NumberOfArgs.valueOf(numberOfArgs));
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46vice.appendText("Assertionfailed:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46vict.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46DoublenumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeName(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number","expectednumberOfArgs:{0}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number","expectednumberOfArgs:{0}cannotbedeprecated}");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeGet(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeName(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs,nameNode);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.NUMBER_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_ALIASING;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendError("Unexpectederror:"+getName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=numberOfArgs-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ERROR+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARRAY-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:"
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeName(numberOfArgs){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression:"+name);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(numberOfArgs,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(numberOfArgs,Integer.MIN_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0,len=numberOfArgs;i<len;++i){OptionBuilder.appendText("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0,len=numberOfArgs.length;i<len;++i){OptionBuilder.appendText("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("")
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY+2;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs+1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalStringnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_ARGS|Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,1){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleUnexpectedNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleUnexpectedError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46annotationFailedError.class.getName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName()+"<identifier>";
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(type){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(type,numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs-1){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_INT+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("no-string");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError("Unexpectederror:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_EXTENDS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_EXTENDS+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeName(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safely(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeName(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,InvalidElementType.ERROR);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs,InvalidNullValue.ERROR);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalbytenumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46finalThrowables.thrownewIllegalArgumentException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(numberOfArgs,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberError("msg.unknown.type",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs-1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs,0);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>2){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs>=0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY+2;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,true){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("negative");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(2){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS-1L;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs.size();++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<NumberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<NumberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("MissingnumberOfArgs:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("MissingnumberOfArgsformethod:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.no.number");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.invalid.number",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.unknown.type");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46numberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("=>").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("</").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs*numberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("UnexpectednumberOfArgs:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=1;i<numberOfArgs;++i){System.err.println("Error:"+numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=1;i<numberOfArgs;++i){System.err.println("Unexpectednumberofarguments.");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleError("Unknownerror:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number","expectednumberOfArgs",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs==Option.NUMBER_OF_ARGS){nullnumberOfArgs=Option.NUMBER_OF_ARGS;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARGS+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs==Option.NUMBER_OF_ARGS){numberOfArgs=Option.NUMBER_OF_ARGS;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class,newClass<Object>());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.reset();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(numberOfArgs,Integer.MAX_VALUE);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.startofexpression",newOptionBuilder());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("Unknownerror");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression",expected);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs,2);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,2){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARGS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs,Object.class);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46SimpleNumericnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,2){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46vio.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("{n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parse(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticcharnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,1);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_OF_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionsBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){return1;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){return0;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs,ArrayUtils.EMPTY_STRING_ARRAY);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=numberOfArgs>2){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticcharnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED_ERROR,1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs>2){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(0,numberOfArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs){for(inti=0;i<stringOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs){for(inti=0;i<NumberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalshortnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("no-variabletype");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleUnexpectedNumberError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberError("Unknownerror:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs,numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs>2){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46SimpleNumericnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtThrowables.thrownewIllegalStateException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs-1;++i){
