bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  numberOfArgs;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  return  numberOfArgs;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  numberOfArgs;	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  this.numberOfArgs  =  numberOfArgs;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  this.numberOfArgs  =  numberOfArgs;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  =  numberOfArgs;	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  aughtError(numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  aughtError(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
4	[BUG]  [BUGGY]  this.numberOfArgs  >  0;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  this.numberOfArgs  >  0;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	this.numberOfArgs  >  0;	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.warning( "msg.error.start  of  expression ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.error.start  of  expression ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
6	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ");  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.warning( "msg.bad.start  of  expression ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.start  of  expression ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.warning( "msg.bad.error.start  of  expression ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.bad.error.start  of  expression ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.warning( "msg.missing.error.start  of  expression ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.warning( "msg.missing.error.start  of  expression ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
9	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_VALUE;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_VALUE;	      Integer    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
10	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INVALID;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INVALID;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_INVALID;	      Integer    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
11	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNNITIALIZED;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
12	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
13	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED_ERROR;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
14	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ");  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ");  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: ");	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
15	[BUG]  [BUGGY]  vice.appendText( "Assertion  failed: ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  vice.appendText( "Assertion  failed: ");  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	vice.appendText( "Assertion  failed: ");	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
16	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName();  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  AnnotationFailedError.class.getSimpleName();  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName();	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
17	[BUG]  [BUGGY]  AnnotationFailedError.class.getSimpleName());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  AnnotationFailedError.class.getSimpleName());  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AnnotationFailedError.class.getSimpleName());	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
18	[BUG]  [BUGGY]  static  final  int  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  static  final  int  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	static  final  int  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    long    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  pending(0L)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  pending(0L)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0L)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
20	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( " ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( " ");  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( " ");	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
21	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ",  numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwAssertionFailedError( "msg.illegal.number ",  numberOfArgs);	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
22	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.throwInternal();	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
23	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
24	[BUG]  [BUGGY]  safeAdd(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeAdd(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
25	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
26	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  options.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
27	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_OF_ARGS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
28	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.NUMBER_OF_ARGS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
29	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_OF_ARGS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
30	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  int  numberOfArgs  =  Option.UNKNOWN_EXTENDS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.UNKNOWN_EXTENDS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
31	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INT;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  int  numberOfArgs  =  Option.NUMBER_INT;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_INT;	      Integer    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
32	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.UNKNOWN;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNKNOWN;	      Integer    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
33	[BUG]  [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  long  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	long  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
34	[BUG]  [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  short  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	short  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
35	[BUG]  [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  null  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	null  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
36	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARRAY  +  1;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
38	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
39	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  For(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	For(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
40	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
41	[BUG]  [BUGGY]  return  NumberOutput.parseInt(numberOfArgs);  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  return  NumberOutput.parseInt(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseInt(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError(numberOfArgs  >  0)  {  return  NumberOutput.parseInt(numberOfArgs);  }	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
43	[BUG]  [BUGGY]  NumberOutput.parseInt(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  NumberOutput.parseInt(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseInt(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  return  NumberOutput.parseNumberInput(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	return  NumberOutput.parseNumberInput(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  NumberOutput.parseNumberInput(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	NumberOutput.parseNumberInput(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
46	[BUG]  [BUGGY]  aughtExceptionHandler.handleNumberError(numberOfArgs);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleNumberError(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleNumberError(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
47	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
48	[BUG]  [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeAdd(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
49	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
50	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "n ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
51	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.UNINITIALIZED;	      Integer    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
52	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_IN_ARRAY;	      Integer    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
53	[BUG]  [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  char  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  double  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNNITIALIZED;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
56	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  pending(1)  {  return  NumberOutput.parseInt(numberOfArgs);  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseInt(numberOfArgs);  }	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	6	None	replace
57	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName();  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingName();  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName();	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
58	[BUG]  [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  NumberOutput.parseNumberInput(numberOfArgs);  }	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	8	None	replace
60	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
61	[BUG]  [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	nisipTo(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
62	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append(optionBuilder.toString());  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(optionBuilder.toString());    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	15	None	replace
63	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_INT  +  1;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_INT  +  1;	      Integer    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
64	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_EXTENDS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_EXTENDS;	      Integer    numberOfArgs    =    Option.NUMBER_INT;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
65	[BUG]  [BUGGY]  pending(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  pending(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
66	[BUG]  [BUGGY]  aught(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  aught(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught(numberOfArgs  >  0)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
67	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
68	[BUG]  [BUGGY]  pending(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  pending(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(numberOfArgs  >  1)  {  throw  new  IllegalArgumentException( " ");  }	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
69	[BUG]  [BUGGY]  char  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  char  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	char  numberOfArgs  =  Option.NUMBER_OF_ARGS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  int  numberOfArgs  =  Option.UNINITIALIZED  +  1;	  private    static    final    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
71	[BUG]  [BUGGY]  char  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  char  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	char  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
72	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
73	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ".  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ".  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  OptionBuilder.appendText( "Assertion  failed: ".	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	17	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.this.numberOfArgs  =  NumberOutput.parse(numberOfArgs);	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
75	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	public  static  final  int  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    long    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
77	[BUG]  [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  static  final  byte  numberOfArgs  =  Option.UNINITIALIZED;	  private    static    final    long    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
78	[BUG]  [BUGGY]  pending(1)  {  return  numberOfArgs;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  pending(1)  {  return  numberOfArgs;  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(1)  {  return  numberOfArgs;  }	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
79	[BUG]  [BUGGY]  pending  numberOfArgs  =  0;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  pending  numberOfArgs  =  0;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending  numberOfArgs  =  0;	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
80	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ERROR;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ERROR;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ERROR;	      Integer    numberOfArgs    =    Option.NUMBER_INVALID;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
81	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY;  [CE]  illegal  start  of  type  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY;	      Integer    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
82	[BUG]  [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	Integer  numberOfArgs  =  Option.NUMBER_ARRAY  +  1;	      Integer    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
83	[BUG]  [BUGGY]  OptionBuilder.this.append( "n ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.this.append( "n ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "n ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
84	[BUG]  [BUGGY]  OptionBuilder.this.append( "n ").append('n');  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.this.append( "n ").append('n');  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( "n ").append('n');	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
85	[BUG]  [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage());  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  AssertionFailedError.error( "Unexpected  error: "+getMessage());  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	AssertionFailedError.error( "Unexpected  error: "+getMessage());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
86	[BUG]  [BUGGY]  OptionBuilder.this.append( ": ");  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.this.append( ": ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.append( ": ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
87	[BUG]  [BUGGY]  System.err.println( "Failed  to  start  of  expression ");  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  System.err.println( "Failed  to  start  of  expression ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	System.err.println( "Failed  to  start  of  expression ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
88	[BUG]  [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage());  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendError( "Unexpected  error: "  +  getMessage());	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
89	[BUG]  [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: ");  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.this.appendText( "Error  starting  expression: ");  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.this.appendText( "Error  starting  expression: ");	      	non-compiled	[CE]  <identifier>  expected	4	None	replace
90	[BUG]  [BUGGY]  ||  numberOfArgs  >  0)  {  return  this;  }  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  ||  numberOfArgs  >  0)  {  return  this;  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	||  numberOfArgs  >  0)  {  return  this;  }	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
91	[BUG]  [BUGGY]  pending(0)  {  return  numberOfArgs;  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  pending(0)  {  return  numberOfArgs;  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pending(0)  {  return  numberOfArgs;  }	      if(numberOfArgs    >    0)    {    return    numberOfArgs;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	7	None	replace
92	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  [Delete]  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	[Delete]	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
93	[BUG]  [BUGGY]  aught  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  aught  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aught  Throwables.throw  new  IllegalArgumentException( " ");	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	9	None	replace
94	[BUG]  [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    AssertionFailedError    [CONTEXT]      [BUGGY]  aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Unexpected  number  of  arguments: "  +  numberOfArgs);	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
95	[BUG]  [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs);  [CE]  invalid  method  declaration;  return  type  required  [FE]                      AssertionFailedError    [CONTEXT]      [BUGGY]  aughtError( "Missing  number  of  argument: "  +  numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtError( "Missing  number  of  argument: "  +  numberOfArgs);	      if(numberOfArgs    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	9	None	replace
96	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  false)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
97	[BUG]  [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs,  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "null ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
98	[BUG]  [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	safeMultiply(numberOfArgs)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  optionBuilder.append( "native ");  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    optionBuilder.append(   "n   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	16	None	replace
99	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARRAY;	      int    numberOfArgs    =    Option.NUMBER_OF_ARRAY;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
100	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ",  numberOfArgs);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleMissingName( "msg.unterminated.number ",  numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleMissingName( "msg.unterminated.number ",  numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseInt(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
101	[BUG]  [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  pendingError  =  NumberOutput.parseNumberInput(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	pendingError  =  NumberOutput.parseNumberInput(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
102	[BUG]  [BUGGY]  aughtExceptionHandler.handleNumberInput(numberOfArgs);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleNumberInput(numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleNumberInput(numberOfArgs);	      if(numberOfArgs    >    0)    {    return    NumberOutput.parseNumberInput(numberOfArgs);    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
103	[BUG]  [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError    [CONTEXT]      [BUGGY]  double  numberOfArgs  =  Option.NUMBER_OF_ARGS;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	double  numberOfArgs  =  Option.NUMBER_OF_ARGS;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
104	[BUG]  [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError    [CONTEXT]      [BUGGY]  int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	int  numberOfArgs  =  Option.NUMBER_OF_ARGS  -  1;	      int    numberOfArgs    =    Option.NUMBER_OF_ARGS;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
105	[BUG]  [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED;  [CE]  illegal  start  of  type  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED;  [BUGGY]      [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	private  final  static  char  numberOfArgs  =  Option.UNINITIALIZED;	  private    final    static    int    numberOfArgs    =    Option.UNINITIALIZED;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
106	[BUG]  [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError());  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]      [BUGGY]  OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError());  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	OptionBuilder.appendText( "Assertion  failed: ",  new  AssertionFailedError());	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
107	[BUG]  [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]      [BUGGY]  aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs);  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	aughtExceptionHandler.handleFailedError( "Missing  number  of  arguments: "  +  numberOfArgs);	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    OptionBuilder.appendText(   "Assertion    failed:   ");    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
108	[BUG]  [BUGGY]  while(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [CE]  illegal  start  of  type  [FE]        AssertionFailedError    [CONTEXT]      [BUGGY]  while(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }  [BUGGY]    private  static  int  numberOfArgs  =  Option.UNINITIALIZED;  [CLASS]  OptionBuilder  [VARIABLES]  	projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java	0.3333333333333333	46	46	1	replace	while(numberOfArgs  >  0)  {  for(int  i  =  0;  i  <  numberOfArgs;  ++i)  {  }	      if(numberOfArgs    >    0)    {    for(int    i    =    0;    i    <    numberOfArgs;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
