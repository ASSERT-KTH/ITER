projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinallongnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46if(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnnumberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs=numberOfArgs;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46this.numberOfArgs>0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.bad.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.warning("msg.missing.error.startofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_VALUE;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_INVALID;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46vice.appendText("Assertionfailed:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AnnotationFailedError.class.getSimpleName());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46staticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0L){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwAssertionFailedError("msg.illegal.number",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.throwInternal();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){options.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.UNKNOWN_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_INT;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNKNOWN;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46longnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46shortnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nullnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46For(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError(numberOfArgs>0){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseInt(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46returnNumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46NumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberError(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeAdd(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("n");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_IN_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinaldoublenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNNITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseInt(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName();
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticintnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnNumberOutput.parseNumberInput(numberOfArgs);}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46nisipTo(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append(optionBuilder.toString());}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_INT+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_EXTENDS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aught(numberOfArgs>0){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(numberOfArgs>1){thrownewIllegalArgumentException("");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalintnumberOfArgs=Option.UNINITIALIZED+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46charnumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){OptionBuilder.appendText("Assertionfailed:".
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.this.numberOfArgs=NumberOutput.parse(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46for(inti=0;i<numberOfArgs;++i){
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46publicstaticfinalintnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatestaticfinalbytenumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(1){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingnumberOfArgs=0;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ERROR;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46IntegernumberOfArgs=Option.NUMBER_ARRAY+1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("n");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append("n").append('n');
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46AssertionFailedError.error("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.append(":");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46System.err.println("Failedtostartofexpression");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendError("Unexpectederror:"+getMessage());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.this.appendText("Errorstartingexpression:");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46||numberOfArgs>0){returnthis;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pending(0){returnnumberOfArgs;}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46[Delete]
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtThrowables.thrownewIllegalArgumentException("");
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Unexpectednumberofarguments:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtError("Missingnumberofargument:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,false){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs,0){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("null");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46safeMultiply(numberOfArgs){for(inti=0;i<numberOfArgs;++i){optionBuilder.append("native");}
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARRAY;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleMissingName("msg.unterminated.number",numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46pendingError=NumberOutput.parseNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleNumberInput(numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46doublenumberOfArgs=Option.NUMBER_OF_ARGS;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46intnumberOfArgs=Option.NUMBER_OF_ARGS-1;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46privatefinalstaticcharnumberOfArgs=Option.UNINITIALIZED;
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46OptionBuilder.appendText("Assertionfailed:",newAssertionFailedError());
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46aughtExceptionHandler.handleFailedError("Missingnumberofarguments:"+numberOfArgs);
projects/Cli26/src/java/org/apache/commons/cli/OptionBuilder.java46while(numberOfArgs>0){for(inti=0;i<numberOfArgs;++i){}
