projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip==null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equals(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Tar.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equals(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||FR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)||!entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equals(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(ERROR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)&&ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=zip.createInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(ZIP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(zip,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.equalsIgnoreCase(TAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.equalsIgnoreCase(ERROR_NAME)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=this.tar.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=JAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=this.TAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=this.zip.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)&&!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!JAR.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!Tar.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ArchiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||ARJ.equalsIgnoreCase(archiverName)&&CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ArchiverName!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equals(archiverName)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equals(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equals(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||ARJ.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||JAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||entryEncoding.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||!TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(encoding!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip==null||!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equals(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223Domnului.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equals(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equalsIgnoreCase(archiverName)||!entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)&&!entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!Tar.equalsIgnoreCase(archiverName)||!entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(encoding==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&archiverName.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&archiverName.length()<0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equals(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||ARJ.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||JAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||entryEncoding.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||!TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equals(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(FR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(FR.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(FOR.equalsIgnoreCase(archiverName)||FR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||FR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(FR.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||archiverName.length()!=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equals(TAR)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip!=null&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equals(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equals(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||ZERO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName,ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||R.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(ZIP)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)&&Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)&&Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP==null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP!=null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.endsWith("zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.encode(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.encode(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=JAR.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.encode(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=TAR.encode(archiverName,DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(TAR)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(JAR.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName,entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ!=null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!JAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!JAR.equalsIgnoreCase(archiverName)&&!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.equalsIgnoreCase(TAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=zip.getInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!ZIP.equalsIgnoreCase(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!JAR.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!Tar.equalsIgnoreCase(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||DUMP.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223|TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)&&ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=archiverName.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||ArchiveStreamFactory.isArchiveInputStream(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||archives.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.equalsIgnoreCase(ArchiveInputStream.DEFAULT_VERSION)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null){TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223ARJ.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(PRINT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Tar.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(archiverName,null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ENCODING==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewFileInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)&&!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!TAR.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223|TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||R.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)||Tar.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,INVALID_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.endsWith("tar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!archiverName.endsWith("tar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.getInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsIgnoreCase(archiverName)||!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in);}}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equals(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Tar.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||GET.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equals(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equals(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equalsIgnoreCase(archiverName)||FR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR==null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(RAJ!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ArchiveStreamFactory.isInterface()||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR==null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equals(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||CR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!ArchiveStreamFactory.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=zip.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=ZIP.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&archiverName.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR.equals(archiverName)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Tar.equals(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR!=null||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(TAR!=null&&!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)|nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ERROR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||TAR.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZipInputStream(in,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.equalsIgnoreCase(ArchiveInputStream.TAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||TAR.equalsIgnoreCase(archiverName,entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||in.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=newZip(archiverName,this.zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.endsWith("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.isEmpty()){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(DUMP.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(VERSION.equalsIgnoreCase(archiverName)||VERSION.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ArchiverName!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||FR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewZIPArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223nisip.equalsIgnoreCase(archiverName)|nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||CR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=zip.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(encoding!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(AR.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223TAR.equalsIgnoreCase(archiverName)||in.isEnabled(Feature.QUOTE_FIELD_NAMES)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(zip.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName==null||!archiverName.equalsIgnoreCase(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(!TAR.equalsArchiveInputStream(archiverName)||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=Zip.createInputStream(archiverName,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Tar.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||in.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||encoding.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding==null&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(entryEncoding.equalsIgnoreCase(archiverName)||!TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223InputStreamin=zip.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ZIP.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(archiverName!=null){TAR.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223if(ARJ.equalsIgnoreCase(archiverName)){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||encoding.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java223||in.equalsIgnoreCase(archiverName)){returnnewZipArchiveInputStream(in,entryEncoding);
