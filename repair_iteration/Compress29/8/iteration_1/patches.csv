bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ZIP!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(archiverName!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(archiverName!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  if(zip  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  if(zip!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  if(ZIP!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(ZIP!=  null  ||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP!=  null  ||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
8	[BUG]  [BUGGY]  if(zip!=  null  ||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  ||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  if(zip  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  if(zip!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
13	[BUG]  [BUGGY]  if  (ZIP!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (ZIP!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  if  (ZIP!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (ZIP!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
17	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  if  (ZIP.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (ZIP.equals(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP.equals(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  if  (ZIP.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (ZIP.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if    (ZIP    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  if  (archiverName  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName  ==  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null)  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  if(!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
31	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
32	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  if  (zip!=  null)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (zip!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (zip!=  null)  {	  if    (ZIP!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if  (zip  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (zip  ==  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (zip  ==  null)  {	  if    (ZIP!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
40	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
41	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
42	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
43	[BUG]  [BUGGY]  if(zip!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  if(zip  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  if(zip!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  if(zip  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if(zip!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(zip!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if  (ZIP!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (ZIP!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
50	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
51	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
52	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
54	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
58	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName);  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName);  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName);  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  encoding.getInputStream();  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  encoding.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes());  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in.getBytes());	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  archiverName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName!=  null  ||  archiverName.length()  ==  0)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  archiverName.length()  ==  0)  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName!=  null  ||  entryEncoding!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  entryEncoding!=  null)  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
67	[BUG]  [BUGGY]  if  (archiverName!=  null  &&  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {    [BUGGY]  if  (archiverName!=  null  &&  entryEncoding!=  null)  {  [BUGGY]    return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  &&  entryEncoding!=  null)  {	  if    (archiverName!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
