bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
3	[BUG]  [BUGGY]  if(zip  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
4	[BUG]  [BUGGY]  if(ZIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
5	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
6	[BUG]  [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
7	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
8	[BUG]  [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
9	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
10	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  >=  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()  >=  0)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
11	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entries.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entries.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entries.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
12	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  in.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  in.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  in.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
13	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  2)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  2)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
14	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
15	[BUG]  [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  zip.getInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
16	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  JAR);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
17	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
18	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName)+  1;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName)+  1;  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName)+  1;	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
19	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(entryEncoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
20	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
21	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
22	[BUG]  [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.encode(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  if(ZIP!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
25	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
26	[BUG]  [BUGGY]  if(FR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(FR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(FR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
27	[BUG]  [BUGGY]  if(FR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(FR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(FR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
28	[BUG]  [BUGGY]  if(FOR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(FOR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(FOR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
29	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
30	[BUG]  [BUGGY]  if(ZIP!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  if(archiverName!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  if(zip  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  if(ZIP!=  null  ||  Archive.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  ||  Archive.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  Archive.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
35	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
36	[BUG]  [BUGGY]  if(GET.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(GET.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(GET.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
37	[BUG]  [BUGGY]  if(GET.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(GET.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(GET.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
38	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
39	[BUG]  [BUGGY]  if(GZ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(GZ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(GZ.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
40	[BUG]  [BUGGY]  if(GZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(GZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(GZIP.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
41	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
42	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
43	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
44	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
45	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
46	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
47	[BUG]  [BUGGY]  if(archiverName!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
48	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||  ZIP.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
49	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  if(zip!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
51	[BUG]  [BUGGY]  if(zip!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
52	[BUG]  [BUGGY]  if(zip  ==  null  &&  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  &&  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  &&  zip.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
53	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
54	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
55	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
56	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
57	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
58	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
59	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  entryEncoding);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
60	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  JAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  JAR);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
61	[BUG]  [BUGGY]  InputStream  in  =  zip.createInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  zip.createInputStream(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  zip.createInputStream(archiverName);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
62	[BUG]  [BUGGY]  InputStream  in  =  Zip.createZipInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createZipInputStream(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createZipInputStream(archiverName);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
63	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  ARJ);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
64	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  TAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  TAR);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
65	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
66	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
67	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
69	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  entryEncoding.length()  ==  0)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
70	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  >=  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  entryEncoding.length()  >=  0)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
71	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  entries.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  entries.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  entries.length()  ==  0)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
72	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  2)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  2)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  entryEncoding.length()  ==  2)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
73	[BUG]  [BUGGY]  if(zip  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
74	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
75	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.getBytes());  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
76	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName.getBytes());  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(archiverName.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
77	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP.getBytes());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(ZIP.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
78	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(),  ARJ);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(),  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(),  ARJ);	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
79	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(),  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(),  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(),  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
80	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip.getBytes());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(zip.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
81	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
82	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
83	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
84	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
85	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
86	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
87	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
88	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
90	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
94	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
95	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
96	[BUG]  [BUGGY]  if(ENCODING  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ENCODING  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ENCODING  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
97	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
98	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
99	[BUG]  [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
100	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
101	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
102	[BUG]  [BUGGY]  if(ZIP  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
103	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
104	[BUG]  [BUGGY]  if(zip  ==  null  ||  archiverName.equalsIgnoreCase(entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  archiverName.equalsIgnoreCase(entryEncoding))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  archiverName.equalsIgnoreCase(entryEncoding))  {	  if(zip    ==    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
105	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  ||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||  entryEncoding!=  null)  {	  if    (archiverName!=    null    &&    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
106	[BUG]  [BUGGY]  if  (archiverName  ==  null  &&  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  &&  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  &&  entryEncoding!=  null)  {	  if    (archiverName!=    null    &&    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
107	[BUG]  [BUGGY]  if  (entryEncoding!=  null  &&  archiverName!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (entryEncoding!=  null  &&  archiverName!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (entryEncoding!=  null  &&  archiverName!=  null)  {	  if    (archiverName!=    null    &&    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
108	[BUG]  [BUGGY]  if(zip  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
109	[BUG]  [BUGGY]  if(ZIP!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
110	[BUG]  [BUGGY]  if(ZIP  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
111	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  entryEncoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
112	[BUG]  [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  this.encoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
113	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(ZIP);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(ZIP);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  encoding.getInputStream(ZIP);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
114	[BUG]  [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  EntryEncoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
115	[BUG]  [BUGGY]  InputStream  in  =  zip.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  zip.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  zip.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
116	[BUG]  [BUGGY]  if  (archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||    archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
117	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||  archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||    archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
118	[BUG]  [BUGGY]  if  (archiverName  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||    archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
119	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  archiverName.equalsIgnoreCase(ARJ))  {	  if    (archiverName!=    null    ||    archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
121	[BUG]  [BUGGY]  if  (ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
122	[BUG]  [BUGGY]  if(ZIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
123	[BUG]  [BUGGY]  if(zIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zIP  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
124	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
125	[BUG]  [BUGGY]  if(zip  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
126	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ZIP))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ZIP))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ZIP))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
127	[BUG]  [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {	  if    (archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
128	[BUG]  [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ZIP))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ZIP))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||!archiverName.equalsIgnoreCase(ZIP))  {	  if    (archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
129	[BUG]  [BUGGY]  if(zip!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
130	[BUG]  [BUGGY]  if(zip  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
131	[BUG]  [BUGGY]  if(zIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zIP!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
132	[BUG]  [BUGGY]  if  (ZIP!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
133	[BUG]  [BUGGY]  if(TAR!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
134	[BUG]  [BUGGY]  if  (ZIP!=  null  ||!ZIP.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP!=  null  ||!ZIP.equals(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  ||!ZIP.equals(archiverName))  {	  if    (ZIP!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
135	[BUG]  [BUGGY]  if  (ZIP!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
136	[BUG]  [BUGGY]  if(ZIP  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
137	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(entryEncoding);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
138	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName,  entryEncoding);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
139	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(entryEncoding,  archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(entryEncoding,  archiverName);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
140	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(encoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(encoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(encoding);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
141	[BUG]  [BUGGY]  InputStream  in  =  zipUtilities.getZIP(archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  zipUtilities.getZIP(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  zipUtilities.getZIP(archiverName);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
142	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIPInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIPInputStream(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIPInputStream(archiverName);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
143	[BUG]  [BUGGY]  if(zip!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  TAR.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
144	[BUG]  [BUGGY]  if(ZIP!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
145	[BUG]  [BUGGY]  if(ARJ!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
146	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
147	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
148	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding  ==  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
149	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
150	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
151	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||  archiverName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  ||  archiverName.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||  archiverName.length()  ==  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
152	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||  archiverName.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  ||  archiverName.length()!=  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||  archiverName.length()!=  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
153	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  entryEncoding.length()  ==  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
154	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  in.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||  in.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  in.length()  ==  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
155	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(archiverName);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
156	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(ZIP);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
157	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(zip);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
158	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
159	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  in);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  in);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
160	[BUG]  [BUGGY]  if(ZIP  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    &&    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
161	[BUG]  [BUGGY]  if(zIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zIP!=  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    &&    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
162	[BUG]  [BUGGY]  if(archiverName!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
163	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
164	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
165	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
166	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
167	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
168	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
169	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
170	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
171	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
172	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
173	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
174	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  PARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  PARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  PARJ.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
175	[BUG]  [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.asIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
176	[BUG]  [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.encode(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
177	[BUG]  [BUGGY]  if(!ZIP.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!ZIP.equals(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(!ZIP.equals(archiverName))  {	  if(!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
178	[BUG]  [BUGGY]  if(!ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(!ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
179	[BUG]  [BUGGY]  if(!ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(!ARJ.equalsIgnoreCase(archiverName))  {	  if(!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
180	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {	  if(!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
181	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
182	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
183	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
184	[BUG]  [BUGGY]  if(ZIP!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
185	[BUG]  [BUGGY]  if(zip!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
186	[BUG]  [BUGGY]  if(ZIP  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
187	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  Zip.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
188	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
189	[BUG]  [BUGGY]  if  (entryEncoding!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (entryEncoding!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (entryEncoding!=  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if    (ZIP!=    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
190	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
191	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
192	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
193	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
194	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisipIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
195	[BUG]  [BUGGY]  if  (archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
196	[BUG]  [BUGGY]  if  (archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
197	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  entryEncoding  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||  entryEncoding  ==  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  entryEncoding  ==  null)  {	  if    (archiverName!=    null    ||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
198	[BUG]  [BUGGY]  if  (entryEncoding!=  null  ||  archiverName!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (entryEncoding!=  null  ||  archiverName!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (entryEncoding!=  null  ||  archiverName!=  null)  {	  if    (archiverName!=    null    ||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
199	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
200	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
201	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entry  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entry  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entry	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
202	[BUG]  [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
203	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
204	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
205	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
206	[BUG]  [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
207	[BUG]  [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
208	[BUG]  [BUGGY]  if  (ZIP!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {	  if    (archiverName!=    null    ||    archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
209	[BUG]  [BUGGY]  if(Zip.equals(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equals(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Zip.equals(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
210	[BUG]  [BUGGY]  InputStream  in  =  ZipArchiveInputStream.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipArchiveInputStream.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipArchiveInputStream.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
211	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  this.archiverName.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
212	[BUG]  [BUGGY]  if(zip  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  &&  ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    &&    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
213	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  CPIO);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  CPIO);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
214	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  JAR_Z);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  JAR_Z);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
215	[BUG]  [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.createInputStream(archiverName,  encoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.createInputStream(archiverName,  encoding);	  InputStream    in    =    Zip.createInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
216	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
217	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
218	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
219	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
220	[BUG]  [BUGGY]  if(PR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(PR.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
221	[BUG]  [BUGGY]  if(RF.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RF.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(RF.equalsIgnoreCase(archiverName)||  FR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    FR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
222	[BUG]  [BUGGY]  if(zip  ==  null  ||  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  RC.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
223	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(RC.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
224	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
225	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(file.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(file.getBytes());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(file.getBytes());	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
226	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  JAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
227	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  archiverName);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
228	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  ARJ);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
229	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
230	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
231	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equals(archiverName))  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
232	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equals(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
233	[BUG]  [BUGGY]  if(zip  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  &&  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
234	[BUG]  [BUGGY]  if(zip  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
235	[BUG]  [BUGGY]  if(ZIP!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
236	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisipIgnoreCase(archiverName)  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
237	[BUG]  [BUGGY]  if(ARJ!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
238	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
239	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
240	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
241	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  JAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName,  JAR);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
242	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.entryEncoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.entryEncoding);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
243	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  encoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName,  encoding);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
244	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.zip);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.zip);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.getZIP(archiverName,  this.zip);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
245	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
246	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
247	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
248	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
249	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
250	[BUG]  [BUGGY]  if(zip  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
251	[BUG]  [BUGGY]  if(zip  ==  null  ||  encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  encoding.equals(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  encoding.equals(archiverName))  {	  if(zip    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
252	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  CPIO);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  CPIO);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
253	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR_Z);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  JAR_Z);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
254	[BUG]  [BUGGY]  if(zip!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
255	[BUG]  [BUGGY]  if  (archiverName!=  null  &&  in!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  &&  in!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  &&  in!=  null)  {	  if    (archiverName!=    null    &&    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
256	[BUG]  [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equals(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
257	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
258	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
259	[BUG]  [BUGGY]  if(ZIP  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP  ==  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
260	[BUG]  [BUGGY]  if(ZIP!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
261	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
262	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
263	[BUG]  [BUGGY]  if(zip!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||!ZIP.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
264	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
265	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
266	[BUG]  [BUGGY]  if  (archiverName  ==  null  ||  ArchiveStreamFactory.isArchiveInputStream(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName  ==  null  ||  ArchiveStreamFactory.isArchiveInputStream(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName  ==  null  ||  ArchiveStreamFactory.isArchiveInputStream(archiverName))  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
267	[BUG]  [BUGGY]  if(zip!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(ZIP!=    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
268	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  in.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  in.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  in.length()  ==  0)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
269	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  zip);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  zip);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  zip);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
270	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
271	[BUG]  [BUGGY]  if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
272	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  encoding);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  encoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
273	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
274	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisipIgnoreCase(archiverName)  {  if(entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
275	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
276	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null  ||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null  ||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if(entryEncoding  ==  null  ||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
277	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisip.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
278	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  in.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  in.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  in.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
279	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(zip))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(zip))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  archiverName.equalsIgnoreCase(zip))  {	  if(entryEncoding!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
280	[BUG]  [BUGGY]  if(Tar.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Tar.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Tar.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
281	[BUG]  [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
282	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
283	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
284	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||  Zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    ZIP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
285	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  JAR);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  JAR);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
286	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
287	[BUG]  [BUGGY]  if(ZIP!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
288	[BUG]  [BUGGY]  if(archiverName!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
289	[BUG]  [BUGGY]  if  (zip  ==  null  ||  zip.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (zip  ==  null  ||  zip.equals(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (zip  ==  null  ||  zip.equals(archiverName))  {	  if    (zip    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
290	[BUG]  [BUGGY]  if(zip  ==  null  ||  encoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  encoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  encoding!=  null)  {	  if    (zip    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
291	[BUG]  [BUGGY]  if(zip  ==  null  ||  in!=  Zip.getLocalFilename(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  in!=  Zip.getLocalFilename(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  in!=  Zip.getLocalFilename(archiverName))  {	  if    (zip    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
292	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
293	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding.getInputStream());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding.getInputStream());  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding.getInputStream());	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
294	[BUG]  [BUGGY]  if(zip!=  null  &&  archiverName.equalsIgnoreCase(zip))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  archiverName.equalsIgnoreCase(zip))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  archiverName.equalsIgnoreCase(zip))  {	  if(zip!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
295	[BUG]  [BUGGY]  if(zip!=  null  &&  in.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  &&  in.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  &&  in.equalsIgnoreCase(archiverName))  {	  if(zip!=    null    &&    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
296	[BUG]  [BUGGY]  if(zip  ==  null  ||  encoding.equalsZip(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  encoding.equalsZip(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  encoding.equalsZip(archiverName))  {	  if(zip    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
297	[BUG]  [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJECT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
298	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
299	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  encoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  encoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  encoding!=  null)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
300	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
301	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
302	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
303	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZIPArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
304	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
305	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName))  {  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
306	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
307	[BUG]  [BUGGY]  InputStream  in  =  ZipUtilities.readZIP(archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  ZipUtilities.readZIP(archiverName);  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  ZipUtilities.readZIP(archiverName);	  InputStream    in    =    ZipUtilities.getZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
308	[BUG]  [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Tar.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
309	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||!zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||!zip.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
310	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
311	[BUG]  [BUGGY]  if(entryEncoding  >=  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  >=  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  >=  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding!=    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
312	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
313	[BUG]  [BUGGY]  if(ENCODING.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ENCODING.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ENCODING.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
314	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".zip "))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( ".zip "))  {	  if    (archiverName    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
315	[BUG]  [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Tar.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {	  if(ZIP.equalsIgnoreCase(archiverName)||    entryEncoding!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
316	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));	  InputStream    in    =    new    ZipInputStream(in.getBytes());    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
317	[BUG]  [BUGGY]  if(zip  ==  null  ||  archiverName.equalsIgnoreCase(zip))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  archiverName.equalsIgnoreCase(zip))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  archiverName.equalsIgnoreCase(zip))  {	  if(zip    ==    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
318	[BUG]  [BUGGY]  if(zip  ==  null  ||  ZipArchiveInputStream.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip  ==  null  ||  ZipArchiveInputStream.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip  ==  null  ||  ZipArchiveInputStream.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
319	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.equalsIgnoreCase(archiverName))  {	  if(zip    ==    null    ||    entryEncoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
320	[BUG]  [BUGGY]  if  (archiverName!=  null  &&  archiverName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  &&  archiverName.length()  ==  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  &&  archiverName.length()  ==  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
321	[BUG]  [BUGGY]  if  (archiverName!=  null  ||  archiverName.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (archiverName!=  null  ||  archiverName.length()  >=  0)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (archiverName!=  null  ||  archiverName.length()  >=  0)  {	  if    (archiverName!=    null    ||    archiverName.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
322	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
323	[BUG]  [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ERJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
324	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.equals(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    entryEncoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
325	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
326	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
327	[BUG]  [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Tar.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(Tar.equalsIgnoreCase(archiverName)||  GET.equalsIgnoreCase(archiverName))  {	  if(ZIP.equalsIgnoreCase(archiverName)||    GET.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
328	[BUG]  [BUGGY]  if(DUMP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(DUMP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(DUMP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
329	[BUG]  [BUGGY]  if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(ENUM.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
330	[BUG]  [BUGGY]  if(zip!=  null  ||  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip!=  null  ||  entryEncoding!=  null)  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if(zip!=  null  ||  entryEncoding!=  null)  {	  if    (zip!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
331	[BUG]  [BUGGY]  if  (ZIP.equals(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (ZIP.equals(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	if  (ZIP.equals(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if    (ZIP.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
332	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  in!=  null)  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  in!=  null)  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	216	216	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  in!=  null)  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
