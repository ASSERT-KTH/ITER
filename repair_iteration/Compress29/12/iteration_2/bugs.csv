bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  [Delete]  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	[Delete]	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ");  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ");  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException( " ");	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( " ");	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal();  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwInternal();  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwInternal();	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException(in);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
20	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
21	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
22	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
31	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
32	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
34	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
35	[BUG]  [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
36	[BUG]  [BUGGY]  ||  R.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  R.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  R.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
43	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
44	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
45	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
52	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
57	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
58	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
59	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
60	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
61	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
64	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  aughtExceptionHandler(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
66	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
67	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  archiverName,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  CPIO,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  1);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
74	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  TARJAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TARJAR);	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR_Z);	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  ||  TAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
77	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
78	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
79	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
80	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
81	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName));  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName));	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
82	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
83	[BUG]  [BUGGY]  return  new  TarInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  archiverName);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
84	[BUG]  [BUGGY]  return  new  TarInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  encoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  encoding);	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
86	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
88	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
89	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
90	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
91	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
92	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
93	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
94	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
95	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
96	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  archiverName);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
97	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
99	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
100	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
101	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
104	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
105	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  in.close();  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
106	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
107	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
108	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
109	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  encoding.getInputStream();  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
110	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  TAR);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
111	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
114	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
117	[BUG]  [BUGGY]  ||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
118	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  TAR);	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
119	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarInternalInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TAR);	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
120	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarArchiveInputStream(in,  encoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  encoding);	  return    new    TarArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
121	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
122	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
123	[BUG]  [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAccess(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
124	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]    }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
