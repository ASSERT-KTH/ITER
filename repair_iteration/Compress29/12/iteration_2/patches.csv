bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
2	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
3	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
4	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  archiverName);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
5	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
6	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
7	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
8	[BUG]  [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
9	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  }	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
10	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
11	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  archiverName):  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  archiverName):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  archiverName):  null;	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
12	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.getInputStream();	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
13	[BUG]  [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
14	[BUG]  [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  this.encoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
15	[BUG]  [BUGGY]  InputStream  in  =  TAR.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  TAR.getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  TAR.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
16	[BUG]  [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  EntryEncoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
17	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream( "UTF-8 ");  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  encoding.getInputStream( "UTF-8 ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream( "UTF-8 ");	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
18	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ARJ);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
20	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  }	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
21	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  TAR);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
22	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
23	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
24	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
25	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
26	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
27	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
28	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
29	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
31	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  archiverName);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
32	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
33	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
34	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
35	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  Tar);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
36	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
37	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
38	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  ARJ):  null;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  ARJ):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  ARJ):  null;	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
40	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
41	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
42	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  zip);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  zip);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  zip);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
43	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
44	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
45	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
46	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
47	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
48	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
49	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
50	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
51	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
52	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  ARJ;  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  ARJ;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  ARJ;	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
53	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
54	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
55	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
56	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
57	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
58	[BUG]  [BUGGY]  InputStream  in  =  new  TarInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  TarInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  TarInputStream(archiverName);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
59	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  TAR);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
60	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(encoding);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(encoding);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
61	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(ARJ);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(ARJ);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
62	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
63	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
64	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
65	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ  -  1);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
66	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  DUMP);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
67	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  2);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  2);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  2);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
68	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO  -  1);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO  -  1);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
69	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  3);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  3);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  3);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
70	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  4);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  4);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  4);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
71	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    JAR);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
72	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  DUMP);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    JAR);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
73	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    JAR);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
74	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)/  JAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)/  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)/  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    JAR);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
76	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
77	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ,  CPIO);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
78	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
79	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
80	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ_CPIO);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
81	[BUG]  [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
82	[BUG]  [BUGGY]  nisip.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
83	[BUG]  [BUGGY]  nisip.encode(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.encode(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.encode(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
84	[BUG]  [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
85	[BUG]  [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
86	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName);	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
87	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+ "ArchiveInputStream ";  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+ "ArchiveInputStream ";  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)+ "ArchiveInputStream ";	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
88	[BUG]  [BUGGY]  ||  in.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  in.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  in.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    in.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
89	[BUG]  [BUGGY]  |  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  |  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	|  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    in.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
90	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
91	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
92	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  archiverName);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
93	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
94	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  ARJ);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
96	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
97	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
98	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
99	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
100	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
101	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
102	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  ARJ);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
103	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
104	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
105	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
106	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  ARJ,  TAR);  }	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
107	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(archiverName,  entryEncoding);	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
108	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
109	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(archiverName,  in);	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
110	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
111	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  entryEncoding  =  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  entryEncoding  =  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  else  {  entryEncoding  =  new  ZipArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
112	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
113	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( " ",  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( " ",  in);	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
114	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Archive  error: ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Archive  error: ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( "Archive  error: ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Tar  error: ");  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Tar  error: ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( "Tar  error: ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( "Tar  exception: ");  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( "Tar  exception: ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( "Tar  exception: ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
117	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
118	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
119	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
120	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equals(archiverName));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equals(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.equals(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
121	[BUG]  [BUGGY]  return  new  TarInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
122	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName.equalsIgnoreCase(TAR));  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName.equalsIgnoreCase(TAR));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName.equalsIgnoreCase(TAR));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
123	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
124	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
125	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
126	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
127	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEn	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
128	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
129	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
130	[BUG]  [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
132	[BUG]  [BUGGY]  ||  R.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  R.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  R.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
133	[BUG]  [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
134	[BUG]  [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
136	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
137	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
138	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
139	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
140	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
141	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
142	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
143	[BUG]  [BUGGY]  ||  JAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
144	[BUG]  [BUGGY]  ||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
145	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
146	[BUG]  [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
147	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DUMP);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
148	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
149	[BUG]  [BUGGY]  if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
150	[BUG]  [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
151	[BUG]  [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName)||  ARJ_CPIO.equalsIgnoreCase(ARJ_CPIO))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_CPIO.equalsIgnoreCase(archiverName)||  ARJ_CPIO.equalsIgnoreCase(ARJ_CPIO))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_CPIO.equalsIgnoreCase(archiverName)||  ARJ_CPIO.equalsIgnoreCase(ARJ_CPIO))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
152	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
153	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
154	[BUG]  [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.encode(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
155	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR.encode(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
156	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
157	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
158	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  archiverName);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
159	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
160	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
161	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(entryEncoding,  in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(entryEncoding,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(entryEncoding,  in);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
162	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  Tar);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  Tar);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  Tar);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
163	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternates(true);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternates(true);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternates(true);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
164	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  archiverName);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
165	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternates(false);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternates(false);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternates(false);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
166	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  ARJ);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
167	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  TAR);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
168	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  ARJ);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
169	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  JAR);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
170	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  TAR);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
171	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  DUMP);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  DUMP);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
172	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR.getRawClass());  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR.getRawClass());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  TAR.getRawClass());	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
173	[BUG]  [BUGGY]  ||  R.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  R.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  R.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    R.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
174	[BUG]  [BUGGY]  ||  ROOT.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ROOT.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ROOT.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    R.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
175	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
176	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
177	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
178	[BUG]  [BUGGY]  nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
179	[BUG]  [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
180	[BUG]  [BUGGY]  nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  TAR):  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
181	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
182	[BUG]  [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  in.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
183	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
184	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ:  null;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ:  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding),  ARJ:  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
185	[BUG]  [BUGGY]  ||  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
186	[BUG]  [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
187	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  ARJ);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
188	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  TAR);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
189	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  TAR);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
190	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding,  archiverName);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
191	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  archiverName);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
192	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  ARJ);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
193	[BUG]  [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
194	[BUG]  [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
195	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
196	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
197	[BUG]  [BUGGY]  nisip  =  ARJ.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  ARJ.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  ARJ.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
198	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
199	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
200	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
201	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
202	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
203	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equals(archiverName));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equals(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equals(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
204	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  JAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
205	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  entryEncoding);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
206	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  ARJ);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
207	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
208	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  }	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
209	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  TAR);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
210	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNaNArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
211	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
212	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
213	[BUG]  [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
214	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
215	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArch	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
216	[BUG]  [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
217	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.entry.encoding ",  in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.entry.encoding ",  in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.entry.encoding ",  in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
218	[BUG]  [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.entry.archive ",  archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAssertionError( "msg.bad.entry.archive ",  archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAssertionError( "msg.bad.entry.archive ",  archiverName));	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
219	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
220	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
221	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  CPIO);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  CPIO);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ,  CPIO);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
222	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  else  {  return  ARJ;  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
223	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(  ARJ))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(  ARJ))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(  ARJ))  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
224	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  encoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
225	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
226	[BUG]  [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
227	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
228	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
229	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  ARJ);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
230	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  entryEncoding);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
231	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);  }	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
232	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  TAR);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
233	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TAR.encodeAsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TAR.encodeAsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TAR.encodeAsIgnoreCase(archiverName));	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
234	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInternalInputStream(in,  entryEncoding);  }	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
235	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
236	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TARJAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TARJAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TARJAR);  }	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
237	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
238	[BUG]  [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
239	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
240	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
241	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
242	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
243	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
244	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
245	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
246	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
247	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
248	[BUG]  [BUGGY]  nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
249	[BUG]  [BUGGY]  nisip.equals(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
250	[BUG]  [BUGGY]  nisip.equals(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
251	[BUG]  [BUGGY]  in.defaultReadZip();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in.defaultReadZip();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in.defaultReadZip();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
252	[BUG]  [BUGGY]  in.defaultWriteLocation();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in.defaultWriteLocation();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in.defaultWriteLocation();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
253	[BUG]  [BUGGY]  in.defaultCloseOperation();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in.defaultCloseOperation();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in.defaultCloseOperation();	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
254	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
255	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
256	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
257	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
258	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  TAR);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
259	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  false);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  false);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  false);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
260	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  entryEncoding);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
261	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  ARJ);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
262	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  true);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  true);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  true);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
263	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  entryEncoding);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
264	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  in);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
265	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  TAR);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
266	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(ARJ);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
267	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(entryEncoding);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
268	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(zip);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(zip);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(zip);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
269	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  null);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  null);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    this);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
270	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding,  ARJ);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
271	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding,  archiverName);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
272	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding,  TAR);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
273	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarNumberInputStream(in,  entryEncoding);  }	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
274	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  TAR);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
275	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
276	[BUG]  [BUGGY]  ||  ARJ.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
277	[BUG]  [BUGGY]  ||  entryEncoding.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
278	[BUG]  [BUGGY]  ||  JAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
279	[BUG]  [BUGGY]  ||  R.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  R.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  R.equalsFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
280	[BUG]  [BUGGY]  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in  =  new  ZipInputStream(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in  =  new  ZipInputStream(in);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
281	[BUG]  [BUGGY]  in  =  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in  =  new  ZipInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in  =  new  ZipInputStream(in,  entryEncoding);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
282	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
283	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
284	[BUG]  [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
285	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
286	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
287	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
288	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
289	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
290	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
291	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchive  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchive  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchive	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
292	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
293	[BUG]  [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.encode(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  }	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    in);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
294	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  in);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    in);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
295	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  encoding,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
296	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
297	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
298	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  encoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  encoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
299	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  encoding,  archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  encoding,  archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  encoding,  archiverName,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
300	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  archiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  archiverName));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
301	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
302	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  in);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
303	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  entryEncoding));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  entryEncoding));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  entryEncoding));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
304	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  TAR);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
305	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName),  entryEncoding);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
306	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  entryEncoding);	  return    new    TarArchiveInputStream(in,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
307	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }	  return    new    TarArchiveInputStream(in,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
308	[BUG]  [BUGGY]  if(TAR.encode(archiverName)!=  null)  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.encode(archiverName)!=  null)  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.encode(archiverName)!=  null)  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }	  return    new    TarArchiveInputStream(in,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
309	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName));  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
310	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  ARJ);	  return    new    TarArchiveInputStream(in,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
311	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
312	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR_Z,  entryEncoding);	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
313	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR_Z);  }	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
314	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ARJ,  TAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ARJ,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ARJ,  TAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
315	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR,  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
316	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR,  entryEncoding);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
317	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR.toString());  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR.toString());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR.toString());	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
318	[BUG]  [BUGGY]  return  new  TarInputStream(in,  in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  in,  TAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
319	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
320	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
321	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ARJ,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
322	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
323	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
324	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  archiverName);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
325	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
326	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
327	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
328	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
329	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  Tar);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  Tar);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  Tar);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
330	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
331	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
332	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
333	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
334	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
335	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ_CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
336	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
337	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
338	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingException(in))  {  throw  new  IllegalStateException( " ");  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
339	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(in,  archiverName);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
340	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
341	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(entryEncoding,  in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(entryEncoding,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(entryEncoding,  in);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
342	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
343	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
344	[BUG]  [BUGGY]  aughtExceptionHandler.handleAccess(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAccess(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAccess(in,  archiverName);	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
345	[BUG]  [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAccess(in,  entryEncoding,  ARJ);	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
346	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
347	[BUG]  [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAccess(in,  entryEncoding,  archiverName);	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
348	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
349	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
350	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
351	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
352	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
353	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
354	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
355	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
356	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName));  }  else  {  return  new  TarInputStream(in,  entryEn	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
357	[BUG]  [BUGGY]  ||  JAVA.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAVA.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAVA.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAVA.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
358	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
359	[BUG]  [BUGGY]  if(encoding!=  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(encoding!=  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(encoding!=  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
360	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
361	[BUG]  [BUGGY]  if(encoding  ==  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(encoding  ==  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(encoding  ==  null)  {  return  new  TarArchiveInputStream(in,  encoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
362	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
363	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
364	[BUG]  [BUGGY]  InputStream  in  =  new  TarInputStream(in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  TarInputStream(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  TarInputStream(in);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
365	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(zip,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
366	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(ZIP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(ZIP);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
367	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  in);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
368	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
369	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  }	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
370	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  TAR);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
371	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
372	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
373	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
374	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
375	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsIOException( " ");	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
376	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.throwInternal();  }  else  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
377	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
378	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
379	[BUG]  [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
380	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
381	[BUG]  [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
382	[BUG]  [BUGGY]  cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
383	[BUG]  [BUGGY]  this.cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  this.cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	this.cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
384	[BUG]  [BUGGY]  cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
385	[BUG]  [BUGGY]  Cearc  =  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearc  =  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearc  =  new  TarArchiveInputStream(in,  entryEncoding);	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
386	[BUG]  [BUGGY]  Cearca  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearca  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearca  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
387	[BUG]  [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearc  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
388	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
389	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
390	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
391	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  entryEncoding,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
392	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
393	[BUG]  [BUGGY]  nisip.startsWith(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.startsWith(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.startsWith(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
394	[BUG]  [BUGGY]  nisip.equals(ArchiveInputStream.TAR))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(ArchiveInputStream.TAR))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(ArchiveInputStream.TAR))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
395	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  TAR);	  if(entryEncoding!=    null)    {    return    new    TarInputStream(in,    entryEncoding);    }    else    {    return    new    TarInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
396	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
397	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
398	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
399	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
400	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
401	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
402	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  ARJ);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
403	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  TAR);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
404	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  JAR);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
405	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  this);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
406	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName)+  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName)+  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName)+  1);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
407	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_Z,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
408	[BUG]  [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
409	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  CPIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
410	[BUG]  [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
411	[BUG]  [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_Z.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
412	[BUG]  [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName)||  ARJ_Z.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_Z.equalsIgnoreCase(archiverName)||  ARJ_Z.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_Z.equalsIgnoreCase(archiverName)||  ARJ_Z.equals(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
413	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(entryEncoding);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
414	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in.read();  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in.read();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in.read();	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
415	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  in;	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
416	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
417	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
418	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
419	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
420	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
421	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equals(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
422	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    TAR);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
423	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(ARJ),  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    TAR);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
424	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)+  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)+  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)+  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    TAR);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
425	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
426	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
427	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
428	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
429	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
430	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
431	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
432	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
433	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
434	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarInputStream(in,  entryEncoding,  archiverName);  }	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
435	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
436	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  JAR);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
437	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
438	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
439	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  JAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  JAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  JAR);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
440	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
441	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
442	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
443	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  ARJ?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
444	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_CPIO,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_CPIO,  ARJ?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_CPIO,  ARJ?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
445	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
446	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
447	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
448	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
449	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
450	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  ARJ);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
451	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  TAR);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
452	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  TAR));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  TAR));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  TAR));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
453	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  archiverName));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
454	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  this);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  this);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
455	[BUG]  [BUGGY]  ||  archiverName.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  archiverName.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  archiverName.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    entryEncoding.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
456	[BUG]  [BUGGY]  ||  file.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  file.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  file.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    entryEncoding.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
457	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ  CPIO);	  return    new    TarArchiveInputStream(in,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
458	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  ARJ);	  return    new    TarArchiveInputStream(in,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
459	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ",  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ",  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException( " ",  in);	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
460	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( ", ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException( ", ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException( ", ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
461	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( "Archive  error: ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException( "Archive  error: ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException( "Archive  error: ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
462	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( "Archive  error  message: ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException( "Archive  error  message: ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException( "Archive  error  message: ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
463	[BUG]  [BUGGY]  aughtExceptionHandler(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler(in,  entryEncoding,  archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
464	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
465	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
466	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
467	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
468	[BUG]  [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
469	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
470	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
471	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
472	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
473	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
474	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
475	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  in);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  in);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
476	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
477	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  Zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
478	[BUG]  [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  ZIP.equalsIgnoreCase(archiverName)?  null  :  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
479	[BUG]  [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
480	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
481	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
482	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
483	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
484	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  archiverName);	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
485	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
486	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
487	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEn	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
488	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
489	[BUG]  [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	final  TarArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
490	[BUG]  [BUGGY]  result  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  result  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	result  =  new  TarArchiveInputStream(in,  entryEncoding,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
491	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
492	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
493	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
494	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  }  else  {  return  ARJ;  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
495	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  entryEncoding  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  entryEncoding  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  entryEncoding  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
496	[BUG]  [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
497	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
498	[BUG]  [BUGGY]  nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  entryEncoding.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  TAR);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
499	[BUG]  [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  in.equalsIgnoreCase(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
500	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  DUMP  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  DUMP  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  DUMP  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
501	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
502	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
503	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  SEVEN_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  SEVEN_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
504	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
505	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
506	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
507	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
508	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
509	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
510	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
511	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
512	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  JAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
513	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  CPIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
514	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  SEVEN_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP,  SEVEN_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
515	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  DUMP);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
516	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
517	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
518	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  ARJ):  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  ARJ):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  ARJ):  null;	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
519	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
520	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  entryEncoding);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
521	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  null);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  null);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
522	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  JAR);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
523	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  null);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  null);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
524	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  null);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  null);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    this);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
525	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  this,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    this);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
526	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  this);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    this);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
527	[BUG]  [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  TAR.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	TAR.equals(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
528	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
529	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
530	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
531	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
532	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
533	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
534	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
535	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
536	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
537	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  ARJ);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
538	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  TAR);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
539	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding,  archiverName);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
540	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
541	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  ARJ);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
542	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
543	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  TAR);	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
544	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
545	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName,  ARJ));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName,  ARJ));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName,  ARJ));	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
546	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
547	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
548	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
549	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  JAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
550	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
551	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
552	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  entryEncoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
553	[BUG]  [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  zip.getInputStream(archiverName,  entryEncoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
554	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.getInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.getInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
555	[BUG]  [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  zip.getInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  zip.getInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
556	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  TAR);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
557	[BUG]  [BUGGY]  InputStream  in  =  TAR.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  TAR.getInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  TAR.getInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
558	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
559	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
560	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_Z,  ARJ);	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
561	[BUG]  [BUGGY]  if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  ARJ);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
562	[BUG]  [BUGGY]  if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ!=  null)  {  return  new  TarArchiveInputStream(in,  CPIO,  ARJ);  }	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
563	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_NAME,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_NAME,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_NAME,  ARJ);	  return    new    TarArchiveInputStream(in,    CPIO,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
564	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
565	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
566	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
567	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
568	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
569	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleInternal(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleInternal(in,  entryEncoding);	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
570	[BUG]  [BUGGY]  aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
571	[BUG]  [BUGGY]  InputStream  in  =  zip.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  zip.getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  zip.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
572	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(TAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream(TAR);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
573	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ_CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
574	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ARJ?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ARJ?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
575	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJE?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJE?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJE?  ARJ  :  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
576	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
577	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
578	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  new  TarInputStream(in);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
579	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  ZipInputStream.createZipInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  ZipInputStream.createZipInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarInputStream(in,  archiverName);  }  else  {  return  ZipInputStream.createZipInputStream(in);  }	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
580	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR.encode(archiverName),  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR.encode(archiverName),  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR.encode(archiverName),  entryEncoding);	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
581	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
582	[BUG]  [BUGGY]  return  new  TarInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
583	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  ARJ);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
584	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  this);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in,  this);	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
585	[BUG]  [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
586	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
587	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
588	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  CPIO,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
589	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  TAR,  CPIO);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  TAR,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  TAR,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
590	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  Tar.class);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  Tar.class);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  Tar.class);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
591	[BUG]  [BUGGY]  if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ_CPIO!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  else  {  return  new  TarArchiveInputStream(in);  }	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
592	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  ARJ_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
593	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  archiverName);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
594	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  encoding);	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
595	[BUG]  [BUGGY]  return  new  TarInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  JAR);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
596	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TARJAR);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
597	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR_Z);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
598	[BUG]  [BUGGY]  return  new  TarInputStream(in,  TAR.getValue());  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  TAR.getValue());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  TAR.getValue());	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
599	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  in);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
600	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  CPIO);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
601	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(null);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(null);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(null);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
602	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  archiverName);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
603	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  Tar.class);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  Tar.class);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  Tar.class);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
604	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  in);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
605	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArch	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
606	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveIn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveIn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveIn	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
607	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
608	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException(in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException(in);	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
609	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIgnoreCase(archiverName, " ");  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsIgnoreCase(archiverName, " ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsIgnoreCase(archiverName, " ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
610	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException(archiverName, " ");  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException(archiverName, " ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException(archiverName, " ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
611	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
612	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  archiverName,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  archiverName,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
613	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
614	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR,  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  JAR,  TAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
615	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  JAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  JAR_Z);	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
616	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR_Z,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR_Z,  ARJ);	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
617	[BUG]  [BUGGY]  return  new  TarZipArchiveInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarZipArchiveInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarZipArchiveInputStream(in,  TAR_Z);	  return    new    TarArchiveInputStream(in,    TAR_Z);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
618	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
619	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
620	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  entryEncoding);  }	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
621	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  archiverName,  TAR	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
622	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
623	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
624	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
625	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
626	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
627	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
628	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  encoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
629	[BUG]  [BUGGY]  return  new  TarFactoryArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarFactoryArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarFactoryArchiveInputStream(in,  encoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
630	[BUG]  [BUGGY]  return  new  TarZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarZipArchiveInputStream(in,  entryEncoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
631	[BUG]  [BUGGY]  return  new  TarZipArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarZipArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarZipArchiveInputStream(in,  encoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
632	[BUG]  [BUGGY]  rackArchiveInputStream.append(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rackArchiveInputStream.append(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rackArchiveInputStream.append(in,  entryEncoding,  archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
633	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.getResourceAsStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.getResourceAsStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.getResourceAsStream(archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
634	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding,  archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
635	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  TARJAR);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
636	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  TAR_Z);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
637	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  JAR);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
638	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TARIO);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TARIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  TARIO);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
639	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
640	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
641	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
642	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
643	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)||  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
644	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(encoding))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
645	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
646	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
647	[BUG]  [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
648	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
649	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
650	[BUG]  [BUGGY]  nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
651	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(zip,  archiverName);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
652	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(zip);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(zip);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(zip);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
653	[BUG]  [BUGGY]  ||  TAR.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
654	[BUG]  [BUGGY]  ||  TAR.equalsRaw(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsRaw(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsRaw(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
655	[BUG]  [BUGGY]  ||  TAR.equalsFieldName(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsFieldName(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsFieldName(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
656	[BUG]  [BUGGY]  EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName);	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
657	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separator;  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separator;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)+  File.separator;	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
658	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar;	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
659	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar  +  TAR;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar  +  TAR;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)+  File.separatorChar  +  TAR;	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
660	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  TAR;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)+  TAR;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)+  TAR;	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
661	[BUG]  [BUGGY]  EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName)+  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName)+  1;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	EntryEncoding  entryEncoding  =  entryEncoding.encode(archiverName)+  1;	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
662	[BUG]  [BUGGY]  return  new  TarInputStream(in,  JAR,  TAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  JAR,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  JAR,  TAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
663	[BUG]  [BUGGY]  return  new  TarInputStream(in,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  archiverName,  TAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
664	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encode(archiverName));	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
665	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  Tar.encoding);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
666	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
667	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
668	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
669	[BUG]  [BUGGY]  rack.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rack.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rack.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
670	[BUG]  [BUGGY]  rack.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rack.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rack.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
671	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  encoding);	  PrintrArchiveInputStream    in    =    new    PrintrArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
672	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ARJ,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
673	[BUG]  [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
674	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
675	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
676	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  nu  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  nu  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  nu	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
677	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  nu  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  nu  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  nu	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
678	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z  -  1);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
679	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
680	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
681	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
682	[BUG]  [BUGGY]  ||  R.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  R.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  R.equalsCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    R.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
683	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
684	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
685	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
686	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
687	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
688	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [CE]  illegal  start  of  expression  [FE]                                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArch	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
689	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  CPIO,  ARJ,  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    DUMP);    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
690	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  Tar.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  Tar.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  Tar.encode(archiverName));	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
691	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  ARJ);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
692	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  in);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
693	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
694	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  null);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  null);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  null);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
695	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TARJAR);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
696	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  JAR);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
697	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TAR_Z);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
698	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TARIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TARIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TARIO);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
699	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  zip);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  zip);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  zip);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    this);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
700	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
701	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
702	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  CPIO,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  CPIO,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  CPIO,  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
703	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
704	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ARJ_Z);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
705	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ARJ_CPIO);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
706	[BUG]  [BUGGY]  in  =  new  TarNumberArchiveInputStream(ARJ,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in  =  new  TarNumberArchiveInputStream(ARJ,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in  =  new  TarNumberArchiveInputStream(ARJ,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
707	[BUG]  [BUGGY]  ||  archiverName.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  archiverName.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  archiverName.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    entryEncoding.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
708	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
709	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
710	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
711	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  INVALID_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName,  INVALID_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(archiverName,  INVALID_Z);	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
712	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(in);	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
713	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingName(archiverName))  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
714	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingName(archiverName))  {  throw  new  IllegalStateException( " ");  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
715	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
716	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ_Z);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
717	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ  -  1);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
718	[BUG]  [BUGGY]  return  new  TarInputStream(in,  CPIO,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  CPIO,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  CPIO,  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
719	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  JAR.encode(archiverName),  TAR.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
720	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
721	[BUG]  [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
722	[BUG]  [BUGGY]  ||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  DUMP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
723	[BUG]  [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
724	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
725	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  SEVEN_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  SEVEN_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
726	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in),  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in),  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in),  archiverName);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
727	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  in));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  in));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(archiverName,  in));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
728	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  TarInputStream(in));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  TarInputStream(in));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  TarInputStream(in));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
729	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipArchiveInputStream(in));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipArchiveInputStream(in));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipArchiveInputStream(in));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
730	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  ARJ);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
731	[BUG]  [BUGGY]  InputStream  in  =  Zip.getZipInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getZipInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getZipInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
732	[BUG]  [BUGGY]  InputStream  in  =  this.zip.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  this.zip.getInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  this.zip.getInputStream(archiverName);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
733	[BUG]  [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearc  {  return  new  TarArchiveInputStream(in,  encoding);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
734	[BUG]  [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Cearc  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Cearc  {  return  new  TarArchiveInputStream(in,  TAR);  }	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
735	[BUG]  [BUGGY]  int  cearc  =  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  int  cearc  =  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	int  cearc  =  new  TarArchiveInputStream(in,  entryEncoding);	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
736	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  ARJ,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
737	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  SEVEN_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  SEVEN_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
738	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TARJAR);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
739	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR_Z);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
740	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  JAR);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
741	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  in);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
742	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
743	[BUG]  [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
744	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  SEVEN_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  SEVEN_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    JAR);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
745	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
746	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
747	[BUG]  [BUGGY]  return  new  TarZipArchiveInputStream(in,  entryEncoding,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarZipArchiveInputStream(in,  entryEncoding,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarZipArchiveInputStream(in,  entryEncoding,  ARJ_Z);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
748	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
749	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
750	[BUG]  [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
751	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
752	[BUG]  [BUGGY]  return  new  TarJarArchiveInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarJarArchiveInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarJarArchiveInputStream(in,  TARJAR);	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
753	[BUG]  [BUGGY]  return  new  TarJarInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarJarInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarJarInputStream(in,  TARJAR);	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
754	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingException(in))  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
755	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingException(in))  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingException(in))  {  return  null;  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
756	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  archiverName);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
757	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  this.archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  this.archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  this.archiverName);	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
758	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
759	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
760	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisipIgnoreCase(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in,  entryEn	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
761	[BUG]  [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
762	[BUG]  [BUGGY]  aughtExceptionInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionInputStream(in,  entryEncoding,  archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
763	[BUG]  [BUGGY]  aughtExceptionInput(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionInput(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionInput(in,  entryEncoding,  archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
764	[BUG]  [BUGGY]  ||  CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  CPIO.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
765	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in.getPath());	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
766	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.readLine());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in.readLine());	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
767	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  FileInputStream(archiverName);	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
768	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding.encode(archiverName),  in);	  return    new    TarInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
769	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TARJAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TARJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  TARJAR);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
770	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR_Z);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  TAR_Z);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
771	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEn	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
772	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
773	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
774	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
775	[BUG]  [BUGGY]  aughtExceptionHandler.handleSequence(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSequence(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSequence(in,  entryEncoding);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
776	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  ARJ);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
777	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  Tar.encoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  Tar.encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  Tar.encoding);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
778	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  archiverName,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
779	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  archiverName,  entryEncoding.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
780	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  JAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
781	[BUG]  [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
782	[BUG]  [BUGGY]  return  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  ZipInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  ZipInputStream(in,  entryEncoding);	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
783	[BUG]  [BUGGY]  return  new  TarInputStream(in,  encoding,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  encoding,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  encoding,  entryEncoding);	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
784	[BUG]  [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(encoding!=  null)  {  return  new  TarInputStream(in,  encoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
785	[BUG]  [BUGGY]  aughtExceptionHandler.startInternal();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startInternal();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startInternal();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
786	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleInternal();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleInternal();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
787	[BUG]  [BUGGY]  aughtExceptionHandler.setInternal(true);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.setInternal(true);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.setInternal(true);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
788	[BUG]  [BUGGY]  aughtExceptionHandler.throwInternal(in);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwInternal(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwInternal(in);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
789	[BUG]  [BUGGY]  aughtExceptionHandler.initInternal();  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.initInternal();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.initInternal();	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
790	[BUG]  [BUGGY]  aughtExceptionHandler.handleInternal(in);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleInternal(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleInternal(in);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
791	[BUG]  [BUGGY]  nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equals(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
792	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  in);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
793	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ.encode(archiverName),  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
794	[BUG]  [BUGGY]  nisip.equals(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName)&&  in!=  entryEncoding)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
795	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equals(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }	  nisip.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
796	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  }	  nisip.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
797	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  archiverName,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
798	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  Tar.class);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  Tar.class);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  Tar.class);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
799	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName)  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName)  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName)	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
800	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName,  encoding);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
801	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  archiverName,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
802	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
803	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ,  entryEncoding,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
804	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  archiverName,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  archiverName,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
805	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_Z,  archiverName,  entryEncoding);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
806	[BUG]  [BUGGY]  ||  NAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  NAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  NAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
807	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
808	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
809	[BUG]  [BUGGY]  joinExceptionHandler(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  joinExceptionHandler(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	joinExceptionHandler(in,  entryEncoding);	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
810	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding  ==  null)  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
811	[BUG]  [BUGGY]  rehashExceptionHandler(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rehashExceptionHandler(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rehashExceptionHandler(in,  entryEncoding);	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
812	[BUG]  [BUGGY]  nisip  =  TAR.equals(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equals(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equals(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
813	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR_Z  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR_Z  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  JAR_Z  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
814	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
815	[BUG]  [BUGGY]  nisip  =  TAR.equals(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equals(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equals(archiverName)?  JAR  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
816	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  Tar  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  Tar  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  Tar	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
817	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchive	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
818	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  Tar  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  Tar  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  Tar	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
819	[BUG]  [BUGGY]  InputStream  in  =  new  TarInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  TarInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  TarInputStream(in,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
820	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ARJ));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ARJ));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ARJ));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
821	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  Tar.class));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  Tar.class));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  Tar.class));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
822	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
823	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException( ", ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException( ", ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
824	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException( " ");  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
825	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
826	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveIn  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveIn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveIn	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
827	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
828	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
829	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
830	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ARJ,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ARJ,  CPIO);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
831	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ_Z,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ_Z,  TAR);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
832	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR,  ARJ_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR,  ARJ_Z);	  return    new    TarArchiveInputStream(in,    ARJ,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
833	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
834	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
835	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(in,  ARJ);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
836	[BUG]  [BUGGY]  nisipToJava2D(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisipToJava2D(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisipToJava2D(archiverName)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
837	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(JAR.class);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(JAR.class);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(JAR.class);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
838	[BUG]  [BUGGY]  nisip  =  TAR.equals(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equals(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equals(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
839	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
840	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  JAR);	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
841	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiveUtil.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiveUtil.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiveUtil.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
842	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
843	[BUG]  [BUGGY]  return  new  TarNumberOutputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberOutputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberOutputStream(in,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
844	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  return  new  TarNumberArchiveInputStream(in,  archiverName);  }  else  {  return  new  TarNumberArchiveInputStream(in);  }	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
845	[BUG]  [BUGGY]  nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
846	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
847	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
848	[BUG]  [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(aughtExceptionHandler!=  null)  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
849	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  in);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  in);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
850	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  TAR.encode(archiverName),  this);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    this);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
851	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  this,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    this);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
852	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  CPIO);	  return    new    TarArchiveInputStream(in,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
853	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(getResourceClass().getClass().getClassLoader());  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(getResourceClass().getClass().getClassLoader());  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(getResourceClass().getClass().getClassLoader());	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
854	[BUG]  [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
855	[BUG]  [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  in.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
856	[BUG]  [BUGGY]  nisip  =  ARJ.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  ARJ.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  ARJ.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    in    :    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
857	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ  -  1);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
858	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ,  JAR);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
859	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ARJ,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ARJ,  DUMP);	  return    new    TarInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
860	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  TAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
861	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
862	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  JAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
863	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_DUMP);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z,  ARJ_DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_Z);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
864	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingName(archiverName);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
865	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleMissingName(archiverName))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleMissingName(archiverName))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
866	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingName(archiverName);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleMissingName(archiverName);  }	  aughtExceptionHandler.handleMissingName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
867	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
868	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
869	[BUG]  [BUGGY]  int  cearc  =  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  int  cearc  =  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	int  cearc  =  return  new  TarArchiveInputStream(in,  entryEncoding);	  cearcă    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
870	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
871	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO  DUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO  DUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
872	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  PUBLIC);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  PUBLIC);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  PUBLIC);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
873	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
874	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  in,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
875	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
876	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
877	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in,  in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in,  in,  entryEncoding);	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
878	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleMissingException(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
879	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchiveInputStream	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
880	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchive  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchive  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(entryEncoding))  {  return  new  TarArchive	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
881	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  in);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding),  in);	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(in,    entryEncoding));    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
882	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
883	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler(in,  entryEncoding);  }  else  {  return  null;  }	  aughtExceptionHandler(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
884	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  JAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
885	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  TAR,  ARJ);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
886	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
887	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
888	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
889	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
890	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  TAR.encode(archiverName));	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
891	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  encoding);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
892	[BUG]  [BUGGY]  return  new  TarNaNArchiveInputStream(in,  ERJAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNaNArchiveInputStream(in,  ERJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNaNArchiveInputStream(in,  ERJAR);	  return    new    TarNaNArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
893	[BUG]  [BUGGY]  ||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  JAVA.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
894	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  this.tar);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  this.tar);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  this.tar);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
895	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  TAR.encode(archiverName));	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
896	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  encoding);	  InputStream    in    =    new    ZipInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
897	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(false,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(false,  in);	  Thread.currentThread().getContextClassLoader().setAlternate(false);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
898	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  JAR);	  return    new    TarInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
899	[BUG]  [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding,  archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
900	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding,  archiverName);	  if(entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
901	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  LUMP);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  LUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  JAR,  LUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
902	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingSource(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingSource(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingSource(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarInputStream(in,    entryEncoding);    }    else    {    return    new    TarInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
903	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  this);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  this);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
904	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  archiverName,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  archiverName,  encoding);	  return    new    TarInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
905	[BUG]  [BUGGY]  rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  entryEncoding,  archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
906	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  entryEncoding.getMethod().getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  entryEncoding.getMethod().getInputStream();  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  entryEncoding.getMethod().getInputStream();	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
907	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  entryEncoding.append(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  PrintrArchiveInputStream  in  =  entryEncoding.append(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	PrintrArchiveInputStream  in  =  entryEncoding.append(archiverName);	  if(entryEncoding.equals(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName);    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
908	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding,  TAR);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
909	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR):  null;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR):  null;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR):  null;	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
910	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding.encode(archiverName));	  InputStream    in    =    new    ZipInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
911	[BUG]  [BUGGY]  return  new  TarnumberArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarnumberArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarnumberArchiveInputStream(in,  entryEncoding);	  return    new    TarNumberArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
912	[BUG]  [BUGGY]  return  new  TarOutputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarOutputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarOutputStream(in,  entryEncoding);	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
913	[BUG]  [BUGGY]  return  new  Tar(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  Tar(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  Tar(in,  entryEncoding);	  return    new    TarInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
914	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
915	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
916	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
917	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsSequence(in,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsSequence(in,  in);	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
918	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding!=  null)  {  aughtExceptionHandler.handleAsSequence(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsSequence(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
919	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  in;  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  in;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding):  in;	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    new    TarArchiveInputStream(in,    entryEncoding):    null;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
920	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  zip.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
921	[BUG]  [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  in.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
922	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  in  :  new  TarArchiveInputStream(in,  entryEncoding);	  nisip    =    TAR.equalsIgnoreCase(archiverName)?    null    :    ZIP.equalsIgnoreCase(archiverName)?)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
923	[BUG]  [BUGGY]  ||  encoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  encoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  encoding.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    entryEncoding.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
924	[BUG]  [BUGGY]  ||  tar.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  tar.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  tar.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    entryEncoding.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
925	[BUG]  [BUGGY]  aughtExceptionHandler.handleEssentialError(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleEssentialError(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleEssentialError(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
926	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
927	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName!=  null)  {  if(TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
928	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TAR.encode(archiverName));	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
929	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  encoding);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
930	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  ERJAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  ERJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  ERJAR);	  return    new    TarInternalInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
931	[BUG]  [BUGGY]  rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	rackArchiveInputStream  in  =  new  TarArchiveInputStream(in,  TAR);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
932	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
933	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
934	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
935	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)&  TAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)&  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName)&  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    TAR);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
936	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  in.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  in.encode(archiverName),  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  in.encode(archiverName),  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    TAR);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
937	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ  -  1);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
938	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
939	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  ARJ,  DUMP);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
940	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
941	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
942	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
943	[BUG]  [BUGGY]  if(Tar.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(Tar.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(Tar.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
944	[BUG]  [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  in.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
945	[BUG]  [BUGGY]  ||  encoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  encoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  encoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
946	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJCPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJCPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJCPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
947	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ;  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ;  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ?  ARJ  :  ARJ;	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
948	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  ARJ?  ARJ  :  in);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ?    ARJ    :    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
949	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  16);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  16);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  16);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
950	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  6);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  6);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ  -  6);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ    -    1);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
951	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
952	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
953	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
954	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding    ==    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
955	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in, " ");  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingException(in, " ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingException(in, " ");	  aughtExceptionHandler.handleMissingException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
956	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  TAR);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    in);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
957	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  ARJ);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName),  in,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName),    in);    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
958	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  JAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
959	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  archiverName);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
960	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  in);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
961	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DEUMP);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DEUMP);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_CPIO,  DEUMP);	  return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ_CPIO);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
962	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  in);  }	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
963	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
964	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(ZIP))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
965	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  in,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  in,  TAR);	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
966	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  TAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  TAR,  archiverName);	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
967	[BUG]  [BUGGY]  return  new  TarInternalInputStream(in,  TAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInternalInputStream(in,  TAR,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInternalInputStream(in,  TAR,  archiverName);	  return    new    TarArchiveInputStream(in,    archiverName,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
968	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  ARJ  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    ARJ;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
969	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(ARJ))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(ARJ))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
970	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
971	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
972	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  TarArchiveInputStream(in	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    else    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
973	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ZIP);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ZIP);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ZIP);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
974	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
975	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleMissingException(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
976	[BUG]  [BUGGY]  if(in.isMissingException())  {  aughtExceptionHandler.handleMissingException(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(in.isMissingException())  {  aughtExceptionHandler.handleMissingException(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(in.isMissingException())  {  aughtExceptionHandler.handleMissingException(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
977	[BUG]  [BUGGY]  if(in!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(in!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(in!=  null)  {  aughtExceptionHandler.handleMissingException(in);  }	  aughtExceptionHandler.handleMissingException(in);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
978	[BUG]  [BUGGY]  return  new  TarInputStream(in,  ERJAR);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  ERJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  ERJAR);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
979	[BUG]  [BUGGY]  return  new  TarOutputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarOutputStream(in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarOutputStream(in,  TAR);	  return    new    TarInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
980	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
981	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAccess(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
982	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleAccess(in,  entryEncoding))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleAccess(in,  entryEncoding))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleAccess(in,  entryEncoding))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAccess(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
983	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName)&&  in!=  entryEncoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
984	[BUG]  [BUGGY]  ||  TAR.equalsWordFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  TAR.equalsWordFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  TAR.equalsWordFactory(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    TAR.equalsFactory(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
985	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
986	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  encoding,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  encoding,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  encoding,  entryEncoding);	  return    new    TarArchiveInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
987	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ;  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
988	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ_Z);  }  else  {  return  null;  }	  if(ARJ.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    ARJ);    }    else    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
989	[BUG]  [BUGGY]  return  new  TarJarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarJarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarJarArchiveInputStream(in,  entryEncoding);	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
990	[BUG]  [BUGGY]  return  new  TarJarInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarJarInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarJarInputStream(in,  entryEncoding);	  return    new    TarArchiveInputStream(in,    TARJAR);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
991	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName),  ARJ);	  return    new    TarInputStream(in,    entryEncoding,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
992	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  JAR,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
993	[BUG]  [BUGGY]  in  =  Zip.getInstance(archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  in  =  Zip.getInstance(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	in  =  Zip.getInstance(archiverName);	  [Delete]    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
994	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
995	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(archiverName.equalsIgnoreCase(TAR))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    TarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
996	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
997	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  in,  entryEncoding);	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
998	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
999	[BUG]  [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding  ==  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding  ==  null)  {  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  }	  aughtExceptionHandler.handleUnsupportedOperation(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
1000	[BUG]  [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startArchiveInputStream(in);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1001	[BUG]  [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startArchiveInputStream(in,  entryEncoding);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1002	[BUG]  [BUGGY]  aughtExceptionHandler.startArchiver(in);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startArchiver(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startArchiver(in);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1003	[BUG]  [BUGGY]  aughtExceptionHandler.startArchiver(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.startArchiver(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.startArchiver(in,  entryEncoding);	  aughtExceptionHandler.throwInternal();    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
1004	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException(in, " ");  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.throwAsSerializationException(in, " ");  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.throwAsSerializationException(in, " ");	  aughtExceptionHandler.throwAsSerializationException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1005	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1006	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1007	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  entryEncoding);	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1008	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
1009	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleMissingName(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleMissingName(in,  entryEncoding);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1010	[BUG]  [BUGGY]  ||!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||!TAR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAVA.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1011	[BUG]  [BUGGY]  ||  FR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  FR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  FR.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  ||    JAVA.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1012	[BUG]  [BUGGY]  InputStream  in  =  new  ZIPInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZIPInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZIPInputStream(in,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1013	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1014	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1015	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  in,  TAR.encode(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1016	[BUG]  [BUGGY]  return  new  TarInputStream(in,  encoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  encoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  encoding,  ARJ);	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1017	[BUG]  [BUGGY]  return  new  TarOutputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarOutputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarOutputStream(in,  encoding);	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1018	[BUG]  [BUGGY]  return  new  TarInputStream(in,  encoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  encoding,  archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  encoding,  archiverName);	  return    new    TarInputStream(in,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1019	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1020	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarArchiveInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1021	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding);	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1022	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  entryEncoding.encode(archiverName)?  new  TarInputStream(in,  in):  new  TarArchiveInputStream(in,  entryEncoding.encode(archiverName));	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1023	[BUG]  [BUGGY]  join(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  join(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	join(in,  entryEncoding.encode(archiverName));	  if(entryEncoding.encode(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding.encode(archiverName));    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
1024	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  encoding);	  nisip.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1025	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR,  archiverName.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1026	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  in,  entryEncoding,  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1027	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  TAR.equalsIgnoreCase(archiverName));  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  TAR.equalsIgnoreCase(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  TAR.encode(archiverName),  TAR.equalsIgnoreCase(archiverName));	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    TAR.equalsIgnoreCase(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
1028	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1029	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  in,  TAR);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1030	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEn	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1031	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1032	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(entryEncoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1033	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(archiverName,  JAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(archiverName,  JAR);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1034	[BUG]  [BUGGY]  InputStream  in  =  Zip.getInputStream(encoding);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  Zip.getInputStream(encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  Zip.getInputStream(encoding);	  InputStream    in    =    Zip.getInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1035	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  ArchiverName.encode(archiverName),  in);	  return    new    TarInputStream(in,    entryEncoding,    ArchiverName.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1036	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(in);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(in);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1037	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass(archiverName);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().loadClass(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().loadClass(archiverName);	  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1038	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1039	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1040	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  new  ZipInputStream(in.getBytes(archiverName));	  in.close();    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
1041	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1042	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1043	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  }	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1044	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1045	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEn  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  in!=  null  &&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEn	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1046	[BUG]  [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleAsIgnoreCase(archiverName)&&  entryEncoding!=  null)  {  return  new  TarNumberArchiveInputStream(in,  entryEncoding	  if(entryEncoding!=    null)    {    return    new    TarNumberArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1047	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().getContextClassLoader().setAlternate(true,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().getContextClassLoader().setAlternate(true,  entryEncoding);	  Thread.currentThread().getContextClassLoader().setAlternate(true);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1048	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1049	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(archiverName);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream(archiverName);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1050	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_Z);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_Z);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	InputStream  in  =  encoding.getInputStream(PRINT_Z);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
1051	[BUG]  [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  ||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	||  in.equalsIgnoreCase(archiverName))  {  return  new  TarArchiveInputStream(in,  entryEncoding);	  ||    TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
1052	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  in);	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1053	[BUG]  [BUGGY]  return  new  TarInputStream(in,  in,  TAR.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  in,  TAR.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  in,  TAR.encode(archiverName));	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1054	[BUG]  [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarInputStream(in,  entryEncoding,  TAR.encode(archiverName),  this);	  return    new    TarInputStream(in,    entryEncoding,    TAR.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
1055	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ERJAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  ERJAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  ERJAR);	  return    new    TarNumberArchiveInputStream(in,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1056	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	aughtExceptionHandler.handleSerialization(in,  in,  entryEncoding);	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1057	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1058	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleSerialization(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1059	[BUG]  [BUGGY]  if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1060	[BUG]  [BUGGY]  if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(in.equalsIgnoreCase(archiverName))  {  aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in);  }  else  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1061	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  if(entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1062	[BUG]  [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!aughtExceptionHandler.handleAsIgnoreCase(archiverName,  in))  {  throw  new  IllegalArgumentException( " ");  }	  aughtExceptionHandler.handleAsIgnoreCase(archiverName,    in);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1063	[BUG]  [BUGGY]  cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	cearcă  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1064	[BUG]  [BUGGY]  JoinerInputStream.class.getSimpleName())  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  JoinerInputStream.class.getSimpleName())  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	JoinerInputStream.class.getSimpleName())  {  return  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  }	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1065	[BUG]  [BUGGY]  nisip  =  JAR.parse(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  JAR.parse(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  JAR.parse(archiverName)?  TAR  :  new  TarArchiveInputStream(in,  entryEncoding,  ARJ);	  if(TAR.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
1066	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ArchiverName));  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ArchiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  ArchiverName));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1067	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(this,  new  ZipInputStream(archiverName));  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  Thread.currentThread().setContextClassLoader(this,  new  ZipInputStream(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	Thread.currentThread().setContextClassLoader(this,  new  ZipInputStream(archiverName));	  Thread.currentThread().setContextClassLoader(new    ZipInputStream(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1068	[BUG]  [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding.encode(archiverName));  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberInputStream(in,  entryEncoding.encode(archiverName));  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberInputStream(in,  entryEncoding.encode(archiverName));	  return    new    TarNumberInputStream(in,    entryEncoding);    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1069	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	if(!TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }	  TAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    TarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
1070	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  ARJ);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  ARJ,  ARJ);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1071	[BUG]  [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);	  return    new    TarArchiveInputStream(in,    entryEncoding,    archiverName,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1072	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  this);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1073	[BUG]  [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	return  new  TarNumberArchiveInputStream(in,  entryEncoding,  archiverName,  encoding);	  return    new    TarNumberArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1074	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR);  [BUGGY]      }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	224	224	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?  new  TarArchiveInputStream(in,  entryEncoding,  TAR);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    TarArchiveInputStream(in,    entryEncoding,    TAR);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
