projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=createArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewARjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding==null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{entryEncoding=ARJ_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding==null){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}else{}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.entrySet();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,archiverName.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readInput();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(en,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,archiverName);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getArj();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getArjValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue()+1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue(),archiverName;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212StringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=in.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(archiverName,in.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName.encode(entryEncoding));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,archiverName.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(archiverName.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(encoding,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=this.entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=encoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getRawEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEntry(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=this.encoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.readEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=in.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){in=newArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){in=newArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=ARJ_Z){returnnewARjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newARjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnARjArchiveInputStream.createRootArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnARjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.entryEncoding!=null){returnnewArjArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().setContextClassLoader(JAR.class.getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingException("");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAnchor(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().setContextClassLoader(this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212nisipToBack(encoding){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212nisipToBack(encoding){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleSerialization(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAssertion(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingException(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingName(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.entryEncoding!=null){returnnewArchiveArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(ERROR_NAME);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding==null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)||(archiverName.charAt(archiverName.length()-1)!='/')){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)||(archiverName==null&&archiverName.length()>0)){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)||(archiverName.charAt(archiverName.length()-1)=='/')){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)||(archiverName!=null&&archiverName.length()>0)){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||(archiverName!=null&&archiverName.length()>0)||(archiverName.length()==0)){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.encode(archiverName)!=null){returnnewArchiveInputStream(entryEncoding,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArchiveInputStream(entryEncoding,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.encode(archiverName)!=null){returnnewArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ.encode(entryEncoding),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_Z),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_CPIO),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z.encode(entryEncoding),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_NAME),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,CPIO.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION,archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,ARJ_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.ARJ_Z,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING,archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in==null){returnnewArjArchiveInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=in.entrySet();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entries.entrySet();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.cloneTree();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(encoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(ARJ_Z,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,ARJ_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(ARJ_Z,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(pathEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding==null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding);}else{entryEncoding=ARJ_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,ARJ_Z);}else{entryEncoding=ARJ_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,ARJ_Z);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{entryEncoding=ARJ_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding);}else{entryEncoding=ARJ_ZE;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,ARJ_Z);}else{entryEncoding=ARJ_ZE;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnArjArchiveInputStream.createArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.zip.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.encode(archiverName,this.zip)!=null){returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName,this.zip));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(this.zip,entryEncoding.encode(archiverName,in));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName,this.zip),this.zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(this.zip,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getKey()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue()+2);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue()/1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.encode(archiverName)!=null){returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.encode(archiverName)!=null){returnnewArjArchiveInputStream(entryEncoding,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getName(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getName();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getBase64());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrorin=entryEncoding.getAssertionError();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewARjArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readUTF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=this.in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readFile();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.read();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readLine()+1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(ARJ_Z,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,ARJ_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z+entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleEmpty(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewARjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewARjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrore=newAssertionError("Failedtoinstantiatearchivername:"+in.getMessage());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrore=newAssertionError("Failedtocreatearchivername:"+archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrore=newAssertionError("Failedtocreatearchivername:"+in.getMessage());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrore=newAssertionError("Unabletoinitializearchivername:"+archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(ARJ,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ.encode(entryEncoding),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding.encode(ARJ),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=this.entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getValue()+1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getArj();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,CPIO.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toByteArray(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding.toByteArray());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.toByteArray();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewARjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=ARJ){returnnewARjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=this.in.readInput();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readInput(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ_Z),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z.encode(entryEncoding),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ_CPIO),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,ARJ_Z.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.entryEncoding!=null){returnnewARjArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=this.entryEncoding.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=encoding.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getRawEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEntryEncoding(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=ARJ){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212If(encoding!=ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=ARJ){returnnewArjArchiveInputStream(in,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212If(encoding!=ARJ){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||encoding!=ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=createArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=createArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=createArchiveInputStream(in,entryEncoding
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=createArchiveInputStream(in,entryEnco);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(in,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(in),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=in.encode(archiverName)?null:in.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveInputStream(in,encoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()!=ARJ){returnnewArjArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.entryEncoding!=null){returnnewArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getKey(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(fileEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(fileEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(fileEncoding,fileName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AssertionErrore=newAssertionError("Failedtoinitializearchivername:"+in.getMessage());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding==null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212StringarchiverName=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=in.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212StringarchiverName=in.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,archiverName);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in,entryEncoding);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){entryEncoding=newArjArchiveInputStream(in,archiverName);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in,archiverName);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArchiveArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toString(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,in.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(encoding,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewARjArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,JAR.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.ERROR_NAME),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding>=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=ARJ){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){readFactory().createArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){readFactory().createArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212reader.createArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,encoding,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArchiveArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding==null){returnnewArchiveArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.getValue()==ARJ){returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in.getValue()!=ARJ){returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue();if(in!=null){returnnewArjArchiveInputStream(in,in.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(entryEncoding,in.encode(ArchiveInputStream.DEFAULT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeRaw(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,encoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=null){returnnewArjArchiveInputStream(in,encoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212StringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=in.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,cpi);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingClass(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleStatement(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AnnotationentryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncodinginstanceofArchiveStream){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,DEFAULT_ENCODING);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.encoding!=null){returnnewArchiveInputStream(in,this.encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,this.encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(this.archiverName!=null){returnnewArjArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(encoding,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),encoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=in.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getArj();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getArjValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getValue()+1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION,archiverName,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=entryEncoding.encode(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,JAR.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding.encode(archiverName,ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(in,entryEncoding);}else{}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalEntry<K,V>entryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,EntryEncoding);}else{}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,CPIO.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),READ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),READ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,fileEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.archiverName.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=createArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=getArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.get(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingFor(ArchiveInputStreamin:archiverName){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().process(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAlternate(true);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAlternate(false);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().registerInternal(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().registerListener(this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(zip,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInput(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingException(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleUnsupportedOperation(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(encoding!=null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleUnsupportedOperation(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleUnsupportedOperation(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_NAME),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(ARJ,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ_NAME),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchive(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getImplicitReturn();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getValue(ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(ARJ_Z,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encode(ARJ_Z),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encode(ARJ_Z),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(entryEncoding!=null){returnnewARjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(entryEncoding!=null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(entryEncoding!=null?"null":entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(this.in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_NAME);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_Z+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_Z+entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(ARJ_Z,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZIPInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInput(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,encoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,encoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212[Delete]
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingName(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingSource(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingResource(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,ARJ_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getValue(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getRawEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZIP(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||encoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=ARJ_Z){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}else{returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}else{returnnewArjArchiveInputStream(in,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,in.encode(archiverName));}else{returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(zip,entryEncoding.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,this.zip.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,entryEncoding,archiverName,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoding,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||encoding!=null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=ARJ){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||in!=null){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readFully();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readFully(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getArchiveEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(fileEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAnswer(newArjArchiveInputStream(in,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().setContextClassLoader(getClass().getResourceAsStream(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAnswer(newArjArchiveInputStream(in,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().setAnswer(newArjArchiveInputStream(in),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,encoderName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(encoding!=null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(encoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(archiverName,in.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readInt();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_Z,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_NAME);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212parent==null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getKey());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue()-1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entriesEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newFileInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getEntrySet();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArchiveInputStream(in,entryEncoding);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{EntryEncodingentryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(this.in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArjArchiveInputStream(entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(archiverName!=null){returnnewArjArchiveInputStream(entryEncoding,archiverName);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getRawClass(),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(encoding,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,ARJ_Z);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toByteArray()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getAbsolutePath());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getURL());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,archiverName.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleMissingException(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getSimpleName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encoding,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,endEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(encode);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){readFactory().createArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ReadFactory().createArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createRootArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEscaped();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInput(in,ARJ_Z){returnnewArjArchiveInputStream(in,ARJ_Z);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInput(in,ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInput(in,ARJ){returnnewArjArchiveInputStream(in,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=ARJ){returnnewArjArchiveInputStream(in,ARJ_Z);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding!=ARJ){returnnewArjArchiveInputStream(in,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,encode(archiverName,JAR_Z),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_RCURLY,archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArchiveInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().createArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readLine()-1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(en,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArjArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,fileEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.archiverName.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,zip.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(encoding!=null){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212ParchetState.checkArgument(encoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ARRAY));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(in,entryEncoding.getValue());}else{returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){returnnewArjArchiveInputStream(entryEncoding,in.getValue());}else{returnnewArjArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalStringarchiverName=entryEncoding.getRawClass().getName()+1;returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(file,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(out,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.encode(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getValue(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.toUTC());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entries.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZIP(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AnnotationentryEncoding=in.readValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ_Z),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ_Z),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ARJ_Z),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArjArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArjArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding,archiverName,in.readBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding,archiverName,in.readBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212in.defaultReader().writeArchiveName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,pathEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getArchiveRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getArchive());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.getValueClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,ARJ_ZERO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR_Z),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalARjArchiveInputStreamin=newARjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=entryEncoding.getArjArchiveInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName)+1,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveInputStreamin=newArjArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_Z),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_Z),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ_Z),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newARjArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValueClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZIPInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,this.archiverName);}else{entryEncoding=JAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,ARJ_ZERO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAsArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAlterArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAsArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingEntryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.entryEncoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,in.encode(ArchiveInputStream.DEFAULT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING+archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212anchor=createArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=getArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=in.read(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamin=newArjArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),in,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAlterArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AnnotationentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveArchiveInputStream(in,entryEncoding,archiverName,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalARjArchiveInputStreamin=newARjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalARjArchiveInputStreamin=newARjArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null||entryEncoding.length()==0){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null||entryEncoding.length()==0){returnnewArjArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null||entryEncoding.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(ARJ),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ-1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding.getRawClass()==null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=this.in.readUTF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getValue(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(archiverName,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entries.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Entry<K,V>entryEncoding=entryEncoding.getEntry(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212reader.readFactory().createArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().writeArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readFactory().initArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in==null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveInputStreamin=newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingInputStream(){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingInput(){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingInputStream(){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212pendingInput(){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArchiveArchiveInputStreamin=newArchiveArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,this.archiverName.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.startArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212AnnotationentryEncoding=entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamin=newArjArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding.length);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212||entryEncoding!=null){returnnewArjArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().addValue(newArchiveInputStream(in,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().intermediateThread().intermediateThread().intermediateThread();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().loadClass(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().intermediateThread().intermediateThread();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().process(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=null){returnnewArchiveInputStream(in,encoding);}else{EntryEncoding=ARJ_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveInputStreamin=newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName)+1,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler.handleAssertion(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getEntryEncoding(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212EntryEncodingentryEncoding=entryEncoding.getValueEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArchiveInputStreamin=newArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212newArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212readIO(){returnnewArjArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().getContextClassLoader().addAsArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Thread.currentThread().intermediateThread().intermediateThread().intermediateThread().intermediateThread();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=ARJ){aughtExceptionHandler(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in==null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(in!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding!=ARJ){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212entryEncoding=InputStream.toString(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(entryEncoding==null){returnnewArchiveInputStream(in,archiverName);}else{EntryEncodingentryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,this.entryEncoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212anchor=newArjArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212anchor=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(ARJ),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212Encodingin=entryEncoding.getRawClass().getName();returnnewArjArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName),this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewARjArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entries.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding==ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler(in,ARJ){returnnewArjArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212aughtExceptionHandler(in,ARJ){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212if(encoding==ARJ){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(entryEncoding.encode(archiverName,in));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212finalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212staticfinalArjArchiveInputStreamentryEncoding=newArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212InputStreamin=newArchiveArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,JAR,ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.encode(archiverName,this.zip),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,entryEncoding.getValue(),archiverName,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java212returnnewArjArchiveInputStream(in,in.getValue(),archiverName);
