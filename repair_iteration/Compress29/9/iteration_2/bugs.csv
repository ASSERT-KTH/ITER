bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZIPArchiveInputStream(in,  entryEncoding);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
5	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
8	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
9	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
10	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
11	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  archiverName);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  archiverName);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
12	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  3);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  3);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  3);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  2);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  2);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  2);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  4);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  4);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  4);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  TAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  TAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  1,  TAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  ARJ);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  ARJ;  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
23	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  ARJ);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  TAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  null;  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  else  {  return  null;  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  TAR);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  TAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  TAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  TAR);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
35	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
36	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
40	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	||  entryEncoding.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
46	[BUG]  [BUGGY]  ||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
48	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
49	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
51	[BUG]  [BUGGY]  nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip.equals(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
53	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)?)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
54	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().setContextClassLoader(entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
55	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  new  ZipArchiveInputStream(in,  entryEncoding):  null;	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
56	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)?  null  :  ZIP.equalsIgnoreCase(archiverName)||  zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEn	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
57	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  DUMP);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  DUMP);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  DUMP);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
58	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_ZIP);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_ZIP);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ_ZIP);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  result  =  new  ZipArchiveInputStream(in,  entryEncoding,  CPIO);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  result  =  new  ZipArchiveInputStream(in,  entryEncoding,  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	result  =  new  ZipArchiveInputStream(in,  entryEncoding,  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR_Z);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR_Z);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  ARJ);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  SEVEN_Z);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  SEVEN_Z);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  SEVEN_Z);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  SEVEN_Z);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  SEVEN_Z);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  [Delete]  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	[Delete]	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
67	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ");  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsSerializationException( " ");  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.throwAsSerializationException( " ");	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
68	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleSerialization(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleSerialization(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
69	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException( " ");  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleMissingException( " ");	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
70	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingException(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleMissingException(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.throwAsIOException( " ");  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.throwAsIOException( " ");	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
72	[BUG]  [BUGGY]  aughtExceptionHandler.handleSerialization(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleSerialization(in,  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleSerialization(in,  ARJ);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
73	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.encode(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.encode(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  ARJ);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
76	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  TAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
77	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
78	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName));  }  else  {  return  new  ZipArchiveInputStream(in,  entryEn	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
79	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
80	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
81	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
82	[BUG]  [BUGGY]  if(encoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(encoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(encoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
83	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  ARJ);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  ARJ);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
84	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
85	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  encoding,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  encoding,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  encoding,  entryEncoding);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  encoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  encoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  encoding);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
88	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  archiverName,  encoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  archiverName,  encoding);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
89	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  CPIO);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
91	[BUG]  [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  ARJ.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	ARJ.equalsIgnoreCase(archiverName)&&  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
92	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
93	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  JAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
94	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
95	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  in);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  in);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
96	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  this);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  this);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
97	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  6);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding  +  6);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding  +  6);	  return    new    ZipArchiveInputStream(in,    entryEncoding    +    1);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
98	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArch	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchive	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipIgnoreCase(archiverName)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
105	[BUG]  [BUGGY]  aughtExceptionHandler(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
106	[BUG]  [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleUnsupportedOperation(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
107	[BUG]  [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleAccess(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleAccess(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
108	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
110	[BUG]  [BUGGY]  nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisipToJAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
111	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
112	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
113	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInputStream(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInputStream(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInputStream(archiverName)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
114	[BUG]  [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().setContextClassLoader(new  ZipInputStream(in,  entryEncoding));	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
115	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerException(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerException(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerException(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName,  this)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName,  this)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	Thread.currentThread().getContextClassLoader().setAnswer(new  AnswerInterceptor(archiverName,  this)))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
117	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  NAR);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  NAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  NAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
118	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  NUMBER_Z);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  NUMBER_Z);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  NUMBER_Z);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  archiverName);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(archiverName!=  null)  {  return  new  ZipArchiveInputStream(in,  archiverName);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
121	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  JAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
122	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  this);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
123	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  in);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
124	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  INVALID_Z);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  INVALID_Z);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName),  INVALID_Z);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
125	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ,  JAR);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
126	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ  -  1);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  ARJ  -  1);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
127	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  input);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  input);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  archiverName,  input);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
128	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
129	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                  AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
130	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName);  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
131	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  null  :  in.toByteArray();  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  null  :  in.toByteArray();  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName)?  null  :  in.toByteArray();	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
132	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  JAR  :  JAR;  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  JAR  :  JAR;  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName)?  JAR  :  JAR;	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
133	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  null  :  in.getValue();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  null  :  in.getValue();  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName)?  null  :  in.getValue();	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
134	[BUG]  [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	nisip  =  Integer.parseInt(archiverName)?  in  :  new  ZipArchiveInputStream(in);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    ZipArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
135	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
136	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
137	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
138	[BUG]  [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName)||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(entryEncoding.equalsIgnoreCase(archiverName)||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(entryEncoding.equalsIgnoreCase(archiverName)||  entryEncoding.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  return    new    ZipArchiveInputStream(in,    archiverName);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
139	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	InputStream  in  =  new  ZipInputStream(in);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
140	[BUG]  [BUGGY]  in.close();  [CE]  illegal  start  of  expression  [FE]                        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  in.close();  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	in.close();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
141	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  encoding.getInputStream();  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	InputStream  in  =  encoding.getInputStream();	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
142	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [CE]  illegal  start  of  expression  [FE]                            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(in.getPath());  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	InputStream  in  =  new  ZipInputStream(in.getPath());	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
143	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	InputStream  in  =  new  ZipInputStream(archiverName);	      	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
144	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  zip);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  zip);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  zip);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    TAR);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
145	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	if(ZIP.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName)||    ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
147	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding.encode(archiverName)+  1);	  return    new    ZipArchiveInputStream(in,    entryEncoding.encode(archiverName));    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
148	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  encoding,  archiverName);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    encoding);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
149	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  LUMP);  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  LUMP);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  LUMP);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    CPIO);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
150	[BUG]  [BUGGY]  aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleArchiveInputStream(in,  entryEncoding);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
151	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  aughtExceptionHandler.handleMissingName(archiverName);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	aughtExceptionHandler.handleMissingName(archiverName);	  if(entryEncoding!=    null)    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
152	[BUG]  [BUGGY]  cearcă  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  cearcă  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	cearcă  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
153	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
154	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchivesInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchivesInputStream(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchivesInputStream(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
155	[BUG]  [BUGGY]  PrintrArchiveInputStream.append(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  PrintrArchiveInputStream.append(in,  entryEncoding);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	PrintrArchiveInputStream.append(in,  entryEncoding);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
156	[BUG]  [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in);  [CE]  illegal  start  of  expression  [FE]                AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	PrintrArchiveInputStream  in  =  new  PrintrArchiveInputStream(in);	  if(ZIP.equalsIgnoreCase(archiverName))    {    return    new    ZipArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
157	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  CPIO);  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {    [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  CPIO);  [BUGGY]    }  else  {  return  new  ZipArchiveInputStream(in);  }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	217	217	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding,  JAR,  CPIO);	  return    new    ZipArchiveInputStream(in,    entryEncoding,    JAR);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
