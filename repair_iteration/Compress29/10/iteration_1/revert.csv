projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding==null){returnnewZipArchiveInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamout=newZipArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamout=newZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding==null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipInputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipInputStream(in,entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipInputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamentryEncoding=newZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219||entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding.getRawClass()!=ARJ){returnnewZipArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219newZipArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219||entryEncoding!=null){returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219||entryEncoding==null){returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding==null){returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219newZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219newZipArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219newZipArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipInputStream(in.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding==null){returnnewZipArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(encoding!=null){returnnewZipArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(encoding==null){returnnewZipArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalArchiveInputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219Thread.currentThread().setContextClassLoader(newZipInputStream(in,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219Thread.currentThread().setContextClassLoader(newZipInputStream(in,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219Thread.currentThread().getContextClassLoader().setAlternate(true);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(out,entryEncoding);}else{returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamout=newZipArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamin=newZipArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219finalZipArchiveInputStreamentryEncoding=newZipArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.encode(archiverName,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewZipArchiveInputStream(in,entryEncoding.getValueClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219aughtExceptionHandler(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219aughtExceptionHandler.handleAssertion(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219returnnewArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(entryEncoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}else{returnnewZipArchiveInputStream(en,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219if(encoding!=null){returnnewZipArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219in.defaultReader().writeZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219in.defaultReader().writeArchive(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219encoding=zip.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java219InputStreamin=newZipArchiveInputStream(in);
