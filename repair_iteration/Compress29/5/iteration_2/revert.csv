projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)){return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equals(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("arj")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=in.readLine();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=newZipInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=in.readERROR();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingin=entryEncoding.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryInputStreamentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entryin=entryEncoding.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingentryEncoding=in.read();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)&&entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||in.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.startsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.startsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.startsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ!=null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||entryEncoding.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.endsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=zip.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=this.zip.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding!=null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209nisip.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=this.encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=archiverName.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=encoding.getInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=encoding.getInputStream("UTF-8");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(CPIO.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(SCRIPT.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(RCIO.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(Pojo.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName.equalsIgnoreCase(ARJ)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverType)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingentryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209entryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncoding<Zip>entryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncoding<ARJ>entryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryInputStreamentryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryentryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(DUMP.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(DUMP.equalsIgnoreCase(archiverName)||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(DUMP.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)||AR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(in!=null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,entryEncoding);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(entryEncoding);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(ARJ);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,entryEncoding.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.endsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length()>0||in.charAt(entryEncoding.length()-1)!='/'){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJCPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(ARJ,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ_CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(ARJ,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null||entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentSegmentInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream(),ARJ;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream().getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentDirectoryInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209}elseif(ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209nisip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209}elseif(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream(),ARJ;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream(),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream()+File.separatorChar;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=this.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(ZIP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(!ARJ.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(!ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(AR.equalsIgnoreCase(archiverName)||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||ZERO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.length()!=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entryEncoding.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entries.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||PARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.length()>0||in.charAt(archiverName.length()-1)!='/'){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209nisip.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209nisip.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||entryEncoding.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ENCODING==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||RANJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||in.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.endsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.endsWith("arj")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.endsWith("arj")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("ArchiveInputStream")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("ARJ")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.endsWith("arj")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(in!=null&&entryEncoding.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209entryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncodingin=entryEncoding.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryInputStreamentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209EntryEncoding<ARJ>entryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entryin=entryEncoding.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){if(entryEncoding==null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.encode(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)||entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(ZIP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209nisip.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)&&entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(zip==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP==null||zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP!=null||zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(zip==null||zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&in.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(CPIO.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(CCIO.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||in==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equalsIgnoreCase(archiverName)||RJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(!CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".jar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=this.getCurrentInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)&&encoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJECT.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entry<String,Archive>entryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=ZipArchiveInputStream.readERROR();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith("/")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null){entryEncoding=newZipInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entry<Zip,Archive>entryEncoding=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=newZipInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream().openStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getInputStream().encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.equals(ArchiveInputStream.DEFAULT_ENCODING)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||encoding.equals(ArchiveInputStream.DEFAULT_ENCODING)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(PRINT.equals(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ!=null||archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.asIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchive
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)||ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ERJ.equalsIgnoreCase(archiverName)&&ERJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP!=null||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=this.archiverName.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=encoding.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null&&archiverName.endsWith("ArchiveInputStream.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(JAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiv
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiv
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equals(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName)
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,archiverName);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,archiverName.readLine());entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(zip);entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&entryEncoding.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(zip==null||RANJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&archiverName.startsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(DUMP.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||archiverName.equals(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP==null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ZIP!=null||!ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null){entryEncoding=in.readLine();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entry<K,V>entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null&&archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||entryEncoding.length()<0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ-1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,ARJ_NAME);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".ArchiveInputStream")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209Entry<String,Archive>entryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=zip.readLine();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.startsWith(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding==null||RANGE.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".js")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newFileInputStream(archiverName.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||archiverName.equals(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding>=null&&entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=encoding.getInputStream(PRINT_ENCODING);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=zip.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ENCODING.equalsIgnoreCase(archiverName)||entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding>=null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)&&in!=entryEncoding){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith("arj")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.startsWith("archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName,entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entryEncoding.length>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName==null||!archiverName.equalsIgnoreCase(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding>=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(archiverName!=null&&entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||!zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209}elseif(ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209}elseif(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209[Delete]elseif(ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=Zip.getInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(CPIO.equalsIgnoreCase(archiverName)||APJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(RC.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||encoding.length()!=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getOutputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&entries.length>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream().encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=createCurrentInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=getCurrentInputStream().openStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(encoding!=null&&encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJECT.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)||entryEncoding!=null){returnnewArjArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209ARJ.equalsIgnoreCase(archiverName)){returnnewArjArchiveInputStream(in,entryEncoding);}elseif(ARJ.equalsIgnoreCase(archiverName
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(zip==null||entryEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding==null||in.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)||entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)||!ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding.equalsIgnoreCase(archiverName)&&entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null){entryEncoding=zip.readERROR();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(entryEncoding!=null&&archiverName.endsWith(".Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209if(ENCODING.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java209InputStreamin=newZipInputStream(in,this.entryEncoding);
