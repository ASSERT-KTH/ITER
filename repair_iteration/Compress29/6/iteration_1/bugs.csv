bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
2	[BUG]  [BUGGY]  return  new  ArjArchiveInputStream(in,  entryEncoding,  archiverName);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ArjArchiveInputStream(in,  entryEncoding,  archiverName);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ArjArchiveInputStream(in,  entryEncoding,  archiverName);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
3	[BUG]  [BUGGY]  return  new  ArjArchiveInputStream(in,  entryEncoding,  ARJ);  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ArjArchiveInputStream(in,  entryEncoding,  ARJ);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ArjArchiveInputStream(in,  entryEncoding,  ARJ);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
4	[BUG]  [BUGGY]  return  new  ArjArchiveInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]          AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ArjArchiveInputStream(in,  archiverName);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ArjArchiveInputStream(in,  archiverName);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
5	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  return  ARJ;  }	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	if(entryEncoding!=  null)  {  return  new  ArjArchiveInputStream(in,  entryEncoding);  }  else  {  throw  new  IllegalArgumentException( " ");  }	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]                AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]    [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	  	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  return  new  ArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ArchiveInputStream(in,  entryEncoding);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ArchiveInputStream(in,  entryEncoding);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ZipArchiveInputStream(in,  entryEncoding);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ZipArchiveInputStream(in,  entryEncoding);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
10	[BUG]  [BUGGY]  return  new  ArjJarArchiveInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (in  ==  null)  {  throw  new  IllegalArgumentException( "InputStream  must  not  be  null. ");  }  if  (AR.equalsIgnoreCase(archiverName))  {  return  new  ArArchiveInputStream(in);  }  if  (ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  [BUGGY]  return  new  ArjJarArchiveInputStream(in,  entryEncoding);  [BUGGY]  }  else  {  return  new  ArjArchiveInputStream(in);  }  }  if  (ZIP.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  ZipArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  ZipArchiveInputStream(in);  }  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	210	210	3	replace	return  new  ArjJarArchiveInputStream(in,  entryEncoding);	return  new  ArjArchiveInputStream(in,  entryEncoding);  	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
