projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,cpio);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,JAR,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231result=newJarArchiveInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231in=newJarArchiveInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newJarArchiveInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231JarArchiveInputStreamin=newJarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231JarArchiveInputStreamin=newJarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231JarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231JarArchiveInputStreamin=newJarArchiveInputStream(in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231JarArchiveInputStreamin=newJarArchiveInputStream(in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newJarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,JAR);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231||JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231||JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,cpio,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,cpio,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,cpio,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(encoding!=null){returnnewJarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnull;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding!=null){returnnewJARArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding.encode(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encodeJAR(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231[Delete]
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.throwAsSerializationException("");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleMissingException("");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleMissingException(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.throwAsIOException("");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleException(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding.equals(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231in=newJarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231result=newJarArchiveInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231in=newJarArchiveInputStream(in,entryEncoding,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(ARJ)){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}else{returnARJ;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}else{returnnull;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}else{returnJAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(ARJ)){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR_Z,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ!=null){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ!=null){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}else{returnARJ;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(ARJ!=null){returnnewJarArchiveInputStream(in,entryEncoding,ARJ);}else{returnJAR;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231in=newJarArchiveInputStream(ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionInput(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleSerialization(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,entryEncoding,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,cpio);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,JAR.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARArchiveInputStream(in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJARInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleAsIOException(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleMissingSource(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231aughtExceptionHandler.handleMissingName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231if(encoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInternalInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ-1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ?ARJ:ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,ARJ_CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231in.close();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231InputStreamin=newZIP(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,JAR,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,JAR,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarInputStream(in,entryEncoding,cpio);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,cpio);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java231returnnewJarArchiveInputStream(in,entryEncoding,archiverName,encoding);
