projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),0);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarArchiveInputStream(in,encoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchive(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName,zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),this,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarStreamInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarNumberArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarNumberArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarNumberArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarNumberArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readUTF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=this.in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.read();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readFile();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readOnly();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(fileEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(fileEncoding,fileName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(fileEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,CPIO.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),READ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),READ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.archiverName!=null){returnnewTarInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.archiverName!=null){returnnewArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberOutputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberOutputStreamin=newTarNumberOutputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarNumberArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarNumberArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=in.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=in.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarInternalInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in.readLine(),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in.readLine(),in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=in.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=in.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||encoding!=null){returnnewTarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||encoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleMissingException("");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader().reset();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.archiverName!=null){returnnewTarStreamInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){aughtExceptionHandler(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){aughtExceptionHandler(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.entryEncoding!=null){returnnewArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.entryEncoding!=null){returnnewTarInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Entry<K,V>entryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(in,entries);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getRawValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchive(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchive(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchive(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeRaw(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchive(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInternalInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamentryEncoding=newTarInternalInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamentryEncoding=newTarInternalInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInternalInputStream(entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().setContextClassLoader(getResourceClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().setContextClassLoader(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in=newArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(ARJ),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ.encode(entryEncoding),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(ARJ,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarInputStream(entryEncoding,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarInputStream(in,entryEncoding.encode(archiverName));}else{returnnewTarInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarInputStream(in,entryEncoding.encode(archiverName));}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(entryEncoding,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(fileEncoding!=null){returnnewTarNumberArchiveInputStream(in,fileEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(entryEncoding,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarArchiveInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=in.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName,file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName,this.zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=this.archiverName.encode(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding==null){returnnewTarInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarInputStream(in,encoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarInputStream(in,encoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=this.entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getValue()+1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getValue(),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.encoding!=null){returnnewArchiveInputStream(in,this.encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewArchiveInputStream(in,this.encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),false);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName)+1,0);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),0,0);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),4);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,cacherName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(zip,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(ARJ),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),JAR,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,JAR.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberInputStreamin=newTarNumberInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberInputStreamin=newTarNumberInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarArchiveInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarArchiveInputStream(in,encoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(encoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarArchiveInputStream(in,encoding.encode(archiverName));}else{entryEncoding=in;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,archiverName);}else{entryEncoding=in;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,CPIO.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),READ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),READ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding==null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding>=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding.toString());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleSerialization(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleAssertion(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleMissingName(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleMissingException(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=this.entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getInputStream(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getInputStream(),archiverName;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,zip.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(zip,entryEncoding.encode(archiverName,zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(zip,entryEncoding.encode(archiverName,in));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(zip,entryEncoding.encode(archiverName,file));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding.encode(archiverName,in));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName,zip),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarArchiveInputStream(in,encoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarInternalInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarStreamInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarStreamInputStream(in,encoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}if(entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding);}if(entryEncoding==null){returnnewTarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(pathEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(file,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,file.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),this.file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName),file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarNumberArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamentryEncoding=newTarNumberArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamentryEncoding=newTarNumberArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamentryEncoding=newTarNumberArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarStreamInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding==null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncodinginstanceofTarArchiveInputStream){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInternalInputStream(in,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInternalInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewTarNumberArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding==null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readUTF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.read();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=this.in.readEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readFile();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readTar();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(archiverName!=null){returnnewTarStreamInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(archiverName!=null){returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()==null){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226StringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getName(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,in.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.getName();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=this.entryEncoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=encoding.getEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getRawEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getEntry(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(ARJ),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ.encode(entryEncoding),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(ARJ,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,ARJ.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,encoding,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(file,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,file.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),this.file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),file,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){returnnewTarInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZip(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_VERSION,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(ArchiveInputStream.DEFAULT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||in!=null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in==null){returnnewTarInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(encoding,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=in.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.entryEncoding!=null){returnnewTarStreamInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.archiverName!=null){returnnewTarArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in.encode(archiverName)!=null){returnnewTarArchiveInputStream(entryEncoding,in.encode(archiverName));}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),this,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(entryEncoding,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),this,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(this.entryEncoding!=null){returnnewTarArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226readFactory().createArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226ParchetState.checkArgument(encoding!=null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226readFactory().createArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226readFactory().createArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readERE();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readTarEntry();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readERF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(file,entryEncoding.encode(archiverName),file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,zip.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getArchiveInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getAstRoot(JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=ARJ){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in,entryEncoding.toUpperCase());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,zip,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.archiveRName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIP(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,zip.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiverName.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,fileEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getURL());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getBase64());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226anchor=newTarNumberArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getEntryEncoding();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.getEscaped();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarArchiveInputStream(entryEncoding,in);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=archiverName.encode(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=encoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,zip,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(entryEncoding,in);}else{returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(entryEncoding,in);}else{ArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);returnnewTarStreamInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(in,entryEncoding);}else{returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(entryEncoding,in);}else{InputStreamin=newZIPInputStream(in,entryEncoding);returnnewTarStreamInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalArchiveInputStreamin=newArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(file,entryEncoding.encode(archiverName),file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),file,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,entryEncoding.getPath());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,zip,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226[Delete]
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleMissingName(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleUnsupportedOperation(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleSerialization(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIPInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in=entryEncoding.getRawClass().getName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawClass().getInputStream();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(entryEncoding,in);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(entryEncoding,in);}else{returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(in,entryEncoding);}else{returnnewTarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(zip,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarOutputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.entryEncoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass().getName()+"ArchiveInputStream";if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(fileEncoding,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(fileEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){returnnewTarStreamInputStream(in,archiverName);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,this.encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in.readLine(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(archiverName,in.encode(entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncode.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entries.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.encode(PRINT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(entryEncoding,encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(en,encoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().setContextClassLoader(getClass().getResourceAsStream(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader().setCurrentName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader().process(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader().setAlternate(true);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiveRName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(en,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=null){aughtExceptionHandler(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(en,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newFileInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||encoding!=null){returnnewTarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||entryEncoding!=null){returnnewTarArchiveInputStream(in.getValue());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(out,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,encoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=in.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=entryEncoding.getArchiveName();returnnewTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalStringarchiverName=in.getRawClass();returnnewTarArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readFully();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readLine()-1;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226Thread.currentThread().getContextClassLoader().setAlternate(false);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getRawClass()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),this,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncode.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=in.readEntry(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=this.in.readUTF();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,in.readBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInternalInputStreamin=newTarInternalInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,entryEncoding,archiverName,this.zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),0);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),true);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName)+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(this.in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226EntryEncodingentryEncoding=entryEncoding.encode(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(this.in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226AnnotationentryEncoding=in.readLine();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZip(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarOutputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberOutputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName)/CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName)+1,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(ARJ),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.readLine());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleAssertion(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.handleAssertion(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding==null){returnnewTarStreamInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in==null){returnnewTarArchiveInputStream(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in==null){returnnewTarArchiveInputStream(entryEncoding,in);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in==null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZipInputStream(entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.getArchiveRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.toByteArray());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarStreamInputStreamin=newTarStreamInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,in.readBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()==null){finalStringarchiverName=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in=entryEncoding.getRawClass().getName();if(archiverName==null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226aughtExceptionHandler.startArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),JAR,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamentryEncoding=in.readERROR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in.defaultReader().writeArchiveName(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getRawClass().getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){returnnewTarStreamInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getArchiveRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.getArchive());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=archiverName){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()==archiverName){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()==ARJ){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=archiverName){finalStringarchiverName=entryEncoding.getRawClass();returnnewTarArchiveInputStream(in,archiverName);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding.getRawClass()!=archiverName){finalStringarchiverName=in.getRawClass();returnnewTarArchiveInputStream(archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarStreamInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226in=entryEncoding.getRawClass().getName();if(archiverName!=null){returnnewTarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.toUTC());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.entryEncoding.encode(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName)/CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName)+1,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,entryEncoding.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(in!=null){aughtExceptionHandler.handleArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226||in!=null){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),file,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName),in,file);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),in,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(in,in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamentryEncoding=newTarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entries.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newArchiveInputStream(in,entryEncoding,archiverName,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewArchiveInputStream(in,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,entryEncoding,archiverName,zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(ARJ),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarNumberArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.archiverName,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInternalInputStream(in.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newZIPInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarNumberInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226pendingInputStream(){returnnewTarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226pendingInput(){returnnewTarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226pendingInputStream(){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226pendingInput(){returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarInputStreamin=newTarInputStream(in,this.encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,entryEncoding.encode(archiverName,this.zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,in.encode(archiverName,zip));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.getArchiveName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.toUTC());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(encoding,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarNumberArchiveInputStreamin=newTarNumberArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarInternalInputStream(in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarNumberArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarNumberInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226InputStreamin=newTarNumberInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,encoding.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,this.encoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarStreamInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226newTarArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=ARJ){aughtExceptionHandler(in,entryEncoding);}else{returnnewTarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226if(entryEncoding!=ARJ){aughtExceptionHandler(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=this.entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding.encode(archiverName),file,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226finalTarArchiveInputStreamin=newTarArchiveInputStream(in,this.pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,in.encode(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226returnnewTarArchiveInputStream(in,entryEncoding,archiverName,input);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java226staticfinalTarArchiveInputStreamin=newTarArchiveInputStream(in,fileEncoding);
