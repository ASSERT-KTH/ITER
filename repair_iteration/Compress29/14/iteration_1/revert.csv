projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JSAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARCH.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RAJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStream.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=JAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.length()==0){
