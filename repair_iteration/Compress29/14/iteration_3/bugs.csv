bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(archiverName  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
2	[BUG]  [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
3	[BUG]  [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
4	[BUG]  [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  JAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
5	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  encoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  encoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
6	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  encoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  encoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
7	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  encoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  encoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
8	[BUG]  [BUGGY]  if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
9	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||!encoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||!encoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
10	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  encoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  encoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  &&  encoding.equals(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
11	[BUG]  [BUGGY]  if(archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  archiverName.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
12	[BUG]  [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
13	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  ERROR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  ERROR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equalsIgnoreCase(archiverName)||  ERROR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
14	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
15	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ERROR)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ERROR)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(ERROR)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
16	[BUG]  [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  entryEncoding.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  entryEncoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.encoding.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.encoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName).getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName).getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName).getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(JAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  encoding.getInputStream(JAR);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  EntryEncoding.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  EntryEncoding.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  ARJ);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
22	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  JAR);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
23	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  entryEncoding);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
24	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  CPIO);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
25	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  DUMP);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  DUMP);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  DUMP);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
26	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  ARJ);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
27	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  JAR);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
28	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName,  JAR);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName,  entryEncoding);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName,  ARJ);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(JAR);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(JAR);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName.getBytes());  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName.getBytes());  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName.getBytes());	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
34	[BUG]  [BUGGY]  if(encoding  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
35	[BUG]  [BUGGY]  if(encoding  ==  null  ||!encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||!encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||!encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
36	[BUG]  [BUGGY]  if(encoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
37	[BUG]  [BUGGY]  if(encoding  ==  null  ||  cpio.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  cpio.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  cpio.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
38	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  JSAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  JSAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)||  JSAR.equalsIgnoreCase(archiverName))  {	  if(JSAR.equalsIgnoreCase(archiverName)||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JSAR.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName))  {	  if(JSAR.equalsIgnoreCase(archiverName)||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
40	[BUG]  [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JSAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JSAR.equalsIgnoreCase(archiverName)||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
41	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
42	[BUG]  [BUGGY]  if(JS.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JS.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JS.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAAR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
44	[BUG]  [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
45	[BUG]  [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JSAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JSAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "Archive.zip "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "Archive.zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( "Archive.zip "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
48	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "jar "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "jar "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( "jar "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
49	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "/.zip "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "/.zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( "/.zip "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
50	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream();  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream();	  InputStream    in    =    new    Zip();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
51	[BUG]  [BUGGY]  InputStream  in  =  new  Zip().encode(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip().encode(archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip().encode(archiverName);	  InputStream    in    =    new    Zip();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  InputStream  in  =  new  JAR();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  JAR();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  JAR();	  InputStream    in    =    new    Zip();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
53	[BUG]  [BUGGY]  InputStream  in  =  new  Zip().getInputStream();  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip().getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip().getInputStream();	  InputStream    in    =    new    Zip();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
54	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
55	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
56	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
57	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
58	[BUG]  [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null)  {  if(JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
59	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
60	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
61	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(JAR))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(JAR))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(JAR))  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ARJ))  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(JAR))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(JAR))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(JAR))  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ARJ))  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  if  (DUMP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (DUMP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (DUMP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if    (JAR.equalsIgnoreCase(archiverName)||    DUMP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
66	[BUG]  [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(!JAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {	  if    (JAR.equalsIgnoreCase(archiverName)||    DUMP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
67	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {	  if    (JAR.equalsIgnoreCase(archiverName)||    DUMP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
68	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  PRINT.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  PRINT.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  PRINT.equalsIgnoreCase(archiverName))  {	  if(PRINT.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
69	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  R.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  R.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  R.equalsIgnoreCase(archiverName))  {	  if(PRINT.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
70	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARCH.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARCH.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARCH.equalsIgnoreCase(archiverName))  {	  if(ARCH.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
71	[BUG]  [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARCH.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(ARCH.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
72	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ARCH)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ARCH)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(ARCH)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ARCH.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
73	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.endsWith( ".zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.endsWith( ".zip "))  {	  if(archiverName!=    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
74	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "Archive.zip "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "Archive.zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.endsWith( "Archive.zip "))  {	  if(archiverName!=    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
75	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "jar "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "jar "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.endsWith( "jar "))  {	  if(archiverName!=    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
76	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
77	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
78	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
79	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
80	[BUG]  [BUGGY]  if(CAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
81	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase( "Archive "))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase( "Archive "))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase( "Archive "))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
82	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAVA_ARJ))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAVA_ARJ))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAVA_ARJ))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
83	[BUG]  [BUGGY]  if(archiverName!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
84	[BUG]  [BUGGY]  if(archiverName!=  null  &&  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  RAN.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
85	[BUG]  [BUGGY]  if(RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RAN.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
86	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
87	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(JAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(JAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
88	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  JAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
89	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(entryEncoding);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
90	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  ARJ);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
91	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  JAR_Z);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
92	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)&&    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  if(archiverName!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
94	[BUG]  [BUGGY]  if(JAVA!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
95	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  if(archiverName  ==  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
97	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
98	[BUG]  [BUGGY]  if(archiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
99	[BUG]  [BUGGY]  if(archiverName  ==  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
100	[BUG]  [BUGGY]  if(ARJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
101	[BUG]  [BUGGY]  if(ArchiveInputStream.DEFAULT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveInputStream.DEFAULT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveInputStream.DEFAULT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
102	[BUG]  [BUGGY]  if(ArchiverName!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiverName!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiverName!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
103	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".jar "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".jar "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( ".jar "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
104	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".Archive "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( ".Archive "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( ".Archive "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
105	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "Archive   "))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( "Archive   "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.endsWith( "Archive   "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
106	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( ".jar "))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( ".jar "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.endsWith( ".jar "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
107	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
108	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)&&!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)&&!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(!JAR.equalsIgnoreCase(archiverName)&&!JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
110	[BUG]  [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
111	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
112	[BUG]  [BUGGY]  if(archiverName!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
113	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
114	[BUG]  [BUGGY]  if(archiverName  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
115	[BUG]  [BUGGY]  if(archiverName!=  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  CPIO.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
116	[BUG]  [BUGGY]  if(archiverName!=  null  ||  cpio.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  cpio.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  cpio.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
117	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
118	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  Archive.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  Archive.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  Archive.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
119	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(AR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
120	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(AR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
121	[BUG]  [BUGGY]  if(ARC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(AR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
122	[BUG]  [BUGGY]  if(archiverName!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
123	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
124	[BUG]  [BUGGY]  if(JAR!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
125	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
126	[BUG]  [BUGGY]  if(RCJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RCJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RCJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(RAJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
127	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
128	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ARJ)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ARJ)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(ARJ)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
129	[BUG]  [BUGGY]  if(RCIO.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RCIO.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RCIO.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
130	[BUG]  [BUGGY]  if(ArchiverName.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiverName.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiverName.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
131	[BUG]  [BUGGY]  if(ArchiveStreamFactory.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
132	[BUG]  [BUGGY]  if(RA.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RA.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RA.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
133	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
134	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
135	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
136	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
137	[BUG]  [BUGGY]  if  (JAR.equals(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (JAR.equals(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (JAR.equals(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if    (JAR.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
138	[BUG]  [BUGGY]  if  (AR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (AR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (AR.equalsIgnoreCase(archiverName))  {	  if    (JAR.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
139	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  JAR);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
140	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  entryEncoding);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
141	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  ARJ);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
142	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  CPIO);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
143	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  TAR);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  TAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  TAR);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
144	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  encoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  encoding);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
145	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(JAR,  archiverName);  [CE]  illegal  start  of  expression  [FE]                                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(JAR,  archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(JAR,  archiverName);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
146	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
147	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
148	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
149	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entry  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entry  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entry	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
150	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
151	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
152	[BUG]  [BUGGY]  if(archiverName!=  null  ||  archiverName.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  archiverName.length()  >  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  archiverName.length()  >  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
153	[BUG]  [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  archiverName.length()  ==  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
154	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  archiverName.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  archiverName.length()  >  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  archiverName.length()  >  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
155	[BUG]  [BUGGY]  if(archiverName  ==  null  &&  archiverName.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&  archiverName.length()  >  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&  archiverName.length()  >  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
156	[BUG]  [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  >=  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  archiverName.length()  >=  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
157	[BUG]  [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  >  0  ||  entryEncoding.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  >  0  ||  entryEncoding.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  archiverName.length()  >  0  ||  entryEncoding.equals(archiverName))  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
158	[BUG]  [BUGGY]  InputStream  in  =  JAR.getInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  JAR.getInputStream(archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  JAR.getInputStream(archiverName);	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
159	[BUG]  [BUGGY]  InputStream  in  =  this.jar.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.jar.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.jar.getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
160	[BUG]  [BUGGY]  InputStream  in  =  JAR.getInputStream(),  ARJ;  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  JAR.getInputStream(),  ARJ;  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  JAR.getInputStream(),  ARJ;	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
161	[BUG]  [BUGGY]  InputStream  in  =  this.jAR.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.jAR.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.jAR.getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
162	[BUG]  [BUGGY]  InputStream  in  =  this.getInputStream();  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
163	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
164	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
165	[BUG]  [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  ||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
166	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
167	[BUG]  [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	||  TAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
168	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
169	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
170	[BUG]  [BUGGY]  if(ERJAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERJAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERJAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
171	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
172	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
175	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
176	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  CPIO);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
177	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  entryEncoding);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
178	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  JAR);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
179	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  DUMP);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  DUMP);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  DUMP);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
180	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ_Z);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
181	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ  CPIO);  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ  CPIO);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
182	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  CPIO);	  InputStream    in    =    new    Zip(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
183	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  entryEncoding);	  InputStream    in    =    new    Zip(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
184	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  JAR_Z);	  InputStream    in    =    new    Zip(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
185	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
186	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
187	[BUG]  [BUGGY]  if(entryEncoding  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
188	[BUG]  [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
189	[BUG]  [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveEncoding.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
190	[BUG]  [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
191	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  ArchiveEncoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  ArchiveEncoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equalsIgnoreCase(archiverName)||  ArchiveEncoding.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
192	[BUG]  [BUGGY]  if(JS.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JS.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JS.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
193	[BUG]  [BUGGY]  if(JS.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JS.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JS.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
194	[BUG]  [BUGGY]  if(archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  &&!archiverName.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
195	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
196	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ARJ))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
197	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
198	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
199	[BUG]  [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(ArchiveInputStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
200	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveInputStream.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveInputStream.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveInputStream.equalsIgnoreCase(archiverName))  {	  if(ArchiveInputStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
201	[BUG]  [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveInputStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveInputStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ArchiveInputStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
202	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)  ==  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)  ==  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
203	[BUG]  [BUGGY]  if(JAR.createArchiveInputStream(in)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.createArchiveInputStream(in)  ==  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.createArchiveInputStream(in)  ==  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
204	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)!=  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding)!=  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
205	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  ARJ)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  ARJ)  ==  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in,  ARJ)  ==  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
206	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  JAR)  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  JAR)  ==  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in,  JAR)  ==  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
207	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
208	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!archiverName.endsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||!archiverName.endsWith( ".zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||!archiverName.endsWith( ".zip "))  {	  if(entryEncoding    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
209	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
210	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
211	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
212	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  CPIO);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  CPIO);	  InputStream    in    =    new    FileInputStream(ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
213	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(JAR,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(JAR,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(JAR,  ARJ);	  InputStream    in    =    new    FileInputStream(ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
214	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
215	[BUG]  [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStream.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(ArchiveStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
216	[BUG]  [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStream.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ArchiveStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
217	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveStream.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveStream.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ArchiveStream.equalsIgnoreCase(archiverName))  {	  if(ArchiveStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
218	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
219	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  JAR);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
220	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  entryEncoding);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
221	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  ARJ);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  ARJ);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  ARJ);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
222	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  CPIO);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  CPIO);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
223	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  JAR_Z);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
224	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName,  encoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName,  encoding);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
225	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
226	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
227	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
228	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
229	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
230	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
231	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName)]  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName)]  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)||  nisip.equalsIgnoreCase(archiverName)]  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
232	[BUG]  [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  TAR.equalsIgnoreCase(archiverName)&&  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  TAR.equalsIgnoreCase(archiverName)&&  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
233	[BUG]  [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
234	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
235	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)&&  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
236	[BUG]  [BUGGY]  if(CDK.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CDK.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CDK.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
237	[BUG]  [BUGGY]  if(ZAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ZAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
238	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)&&  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)&&  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)&&  RC.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
239	[BUG]  [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
240	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
241	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  RC.equals(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
242	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverType))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverType))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverType))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
243	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
244	[BUG]  [BUGGY]  if(CPIO.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CPIO.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CPIO.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
245	[BUG]  [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(!JAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
246	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
247	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  encoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  encoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
248	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
249	[BUG]  [BUGGY]  if(encoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
250	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  entryEncoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
251	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  entryEncoding.length()!=  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
252	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding!=  null  ||  encoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding!=  null  ||  encoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
253	[BUG]  [BUGGY]  if(ERROR.equals(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equals(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equals(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
254	[BUG]  [BUGGY]  if(!ERROR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!ERROR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(!ERROR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
255	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
256	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
257	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)&&  Zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
258	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverType))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverType))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverType))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
259	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(ARJ))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(ARJ))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(ARJ))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
260	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
261	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
262	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
263	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(ARJ)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(ARJ)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(ARJ)||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
264	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
265	[BUG]  [BUGGY]  if(ArchiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiverName.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
266	[BUG]  [BUGGY]  if(ARJ  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
267	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
268	[BUG]  [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
269	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
270	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
271	[BUG]  [BUGGY]  if(ArchiveStreamFactory.isArchiveInputStream(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.isArchiveInputStream(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.isArchiveInputStream(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
272	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
273	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
274	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
275	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
276	[BUG]  [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARCH.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ARCH.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
277	[BUG]  [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARCH.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARCH.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ARCH.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
278	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  JAR_Z);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
279	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  null);  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  null);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  null);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
280	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverEncoding))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverEncoding))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
281	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_ENCODING))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_ENCODING))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_ENCODING))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
282	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
283	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
284	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
285	[BUG]  [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
286	[BUG]  [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
287	[BUG]  [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
288	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)&&    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
289	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName.getInputStream());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(archiverName.getInputStream());  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(archiverName.getInputStream());	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
290	[BUG]  [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.archiverName.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.archiverName.getInputStream();	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
291	[BUG]  [BUGGY]  if(JAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
292	[BUG]  [BUGGY]  if(jAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(jAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(jAR!=  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
293	[BUG]  [BUGGY]  if(JAR  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR  ==  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
294	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName.getBytes());  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName.getBytes());  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName.getBytes());	  InputStream    in    =    new    Zip(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
295	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding  ==  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
296	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
297	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
298	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding  >=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding  >=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding  >=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
299	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
300	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null  ||  entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
301	[BUG]  [BUGGY]  if(JAR!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
302	[BUG]  [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStream.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStream.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ArchiveStream.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
303	[BUG]  [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveEncoding.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ArchiveEncoding.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
304	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
305	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
306	[BUG]  [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
307	[BUG]  [BUGGY]  if(PRINT.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
308	[BUG]  [BUGGY]  if(RC.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equals(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
309	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
310	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
311	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.DEFAULT_VERSION))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.DEFAULT_VERSION))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.DEFAULT_VERSION))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
312	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!ArchiveStream.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!ArchiveStream.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!ArchiveStream.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
313	[BUG]  [BUGGY]  if(archiverName!=  null  &&!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!ArchiveStreamFactory.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
314	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(JAR))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(JAR))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(JAR))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
315	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
316	[BUG]  [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  archiverName.length()  <  =  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  archiverName.length()  <  =  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
317	[BUG]  [BUGGY]  if  (JAR.equalsIgnoreCase(archiverName)&&  DUMP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (JAR.equalsIgnoreCase(archiverName)&&  DUMP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (JAR.equalsIgnoreCase(archiverName)&&  DUMP.equalsIgnoreCase(archiverName))  {	  if    (JAR.equalsIgnoreCase(archiverName)||    DUMP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
318	[BUG]  [BUGGY]  if  (JAAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (JAAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (JAAR.equalsIgnoreCase(archiverName)||  DUMP.equalsIgnoreCase(archiverName))  {	  if    (JAR.equalsIgnoreCase(archiverName)||    DUMP.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
319	[BUG]  [BUGGY]  if(ERROR.equals(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equals(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equals(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
320	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
321	[BUG]  [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
322	[BUG]  [BUGGY]  if(CPIO.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CPIO.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CPIO.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
323	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
324	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(ArchiveInputStream.class))  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
325	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)!=  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in)!=  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
326	[BUG]  [BUGGY]  InputStream  in  =  getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
327	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
328	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "Archive_ "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "Archive_ "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( "Archive_ "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
329	[BUG]  [BUGGY]  if(ARJ!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ!=  null  ||  JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
330	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(PRINT.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
331	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.startsWith( ".zip "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.startsWith( ".zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.startsWith( ".zip "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
332	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  encoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  encoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  encoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
333	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  encoding.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  encoding.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  encoding.length()  ==  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
334	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  JAR);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ,  JAR);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
335	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ  -  1);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ  -  1);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ  -  1);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
336	[BUG]  [BUGGY]  InputStream  in  =  new  ZIPInputStream(archiverName,  JAR);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIPInputStream(archiverName,  JAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIPInputStream(archiverName,  JAR);	  InputStream    in    =    new    ZipInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
337	[BUG]  [BUGGY]  if  (JAAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if  (JAAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if  (JAAR.equalsIgnoreCase(archiverName))  {	  if    (JAR.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
338	[BUG]  [BUGGY]  InputStream  in  =  new  ZIPInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIPInputStream(archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIPInputStream(archiverName);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
339	[BUG]  [BUGGY]  InputStream  in  =  new  JARInputStream(archiverName);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  JARInputStream(archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  JARInputStream(archiverName);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
340	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName,  JAR_Z);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
341	[BUG]  [BUGGY]  if(ARJ  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
342	[BUG]  [BUGGY]  if(ARJ!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ!=  null  ||  RAN.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
343	[BUG]  [BUGGY]  if(RA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RA.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
344	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  JAR_Z);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  JAR_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  JAR_Z);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
345	[BUG]  [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZIP(archiverName,  encoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZIP(archiverName,  encoding);	  InputStream    in    =    new    ZIP(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
346	[BUG]  [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ZIP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ZIP.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
347	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
348	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ_Z);  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ_Z);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ_Z);	  InputStream    in    =    new    FileInputStream(ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
349	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(zip);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(zip);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(zip);	  InputStream    in    =    new    FileInputStream(ARJ);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
350	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(AR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
351	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsJAR(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsJAR(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  RC.equalsJAR(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
352	[BUG]  [BUGGY]  if(RC.equalsJAR(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsJAR(archiverName)||  RC.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsJAR(archiverName)||  RC.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
353	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverJAR))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverJAR))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverJAR))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
354	[BUG]  [BUGGY]  if(RAJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RAJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RAJ.equalsIgnoreCase(archiverName)&&  ARJ.equalsIgnoreCase(archiverName))  {	  if(RAJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
355	[BUG]  [BUGGY]  if(RB.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RB.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RB.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(RAJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
356	[BUG]  [BUGGY]  if(archiverName  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||  CPIO.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
357	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  archiverName);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
358	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(jAR);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(jAR);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(jAR);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
359	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
360	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
361	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
362	[BUG]  [BUGGY]  if(ARC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARC.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
363	[BUG]  [BUGGY]  if(JAR  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
364	[BUG]  [BUGGY]  if(ARJ!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ!=  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
365	[BUG]  [BUGGY]  if(JAR!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR!=  null  ||  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
366	[BUG]  [BUGGY]  if(JAVA  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
367	[BUG]  [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
368	[BUG]  [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
369	[BUG]  [BUGGY]  if(RAJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RAJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RAJ!=  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
370	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
371	[BUG]  [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
372	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
373	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArch	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
374	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
375	[BUG]  [BUGGY]  nisip  =  JAR.parse(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  JAR.parse(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  JAR.parse(archiverName)&&  TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
376	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
377	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  Jar  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  Jar  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  Jar	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
378	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchive	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
379	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName,  encoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName,  encoding);	  InputStream    in    =    new    Zip(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
380	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  encoding);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(archiverName,  encoding);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(archiverName,  encoding);	  InputStream    in    =    new    FileInputStream(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
381	[BUG]  [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  encoding.getInputStream(PRINT_ENCODING);	  InputStream    in    =    encoding.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
382	[BUG]  [BUGGY]  if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  ||  TAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
383	[BUG]  [BUGGY]  if(entryEncoding  >=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  >=  null  &&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  >=  null  &&  JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
384	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
385	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverEncoding))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName)||  RC.equalsIgnoreCase(archiverEncoding))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
386	[BUG]  [BUGGY]  if(CR.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CR.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CR.equalsIgnoreCase(archiverName)||  CR.equalsIgnoreCase(archiverName))  {	  if(RC.equalsIgnoreCase(archiverName)||    RC.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
387	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
388	[BUG]  [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAAR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAAR.equalsIgnoreCase(archiverName)||  JAAR.equalsIgnoreCase(archiverName))  {	  if(JAAR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
389	[BUG]  [BUGGY]  if(archiverName.equalsIgnoreCase(JAR)&&  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName.equalsIgnoreCase(JAR)&&  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName.equalsIgnoreCase(JAR)&&  TAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
390	[BUG]  [BUGGY]  if(archiverName!=  null  &&  in.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  in.length()  >  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  in.length()  >  0)  {	  if(archiverName!=    null    &&    archiverName.length()    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
391	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
392	[BUG]  [BUGGY]  InputStream  in  =  this.arJAR.getInputStream();  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.arJAR.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.arJAR.getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
393	[BUG]  [BUGGY]  InputStream  in  =  this.in.getInputStream();  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  this.in.getInputStream();  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  this.in.getInputStream();	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
394	[BUG]  [BUGGY]  InputStream  in  =  JAR.parse(archiverName);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  JAR.parse(archiverName);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  JAR.parse(archiverName);	  InputStream    in    =    JAR.getInputStream();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
395	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    TAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
396	[BUG]  [BUGGY]  if(Archiver.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Archiver.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Archiver.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
397	[BUG]  [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase( "Archive "))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&!archiverName.equalsIgnoreCase( "Archive "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&!archiverName.equalsIgnoreCase( "Archive "))  {	  if(archiverName!=    null    &&!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
398	[BUG]  [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ERROR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ERROR.equalsIgnoreCase(archiverName)||  TAR.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
399	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName))  {	  if(ERROR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
400	[BUG]  [BUGGY]  if(JAVA!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA!=  null  &&  JAVA.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
401	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in,  entryEncoding))  {	  if(archiverName!=    null    ||    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
402	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
403	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEn    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
404	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "zip "))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.endsWith( "zip "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.endsWith( "zip "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   ".zip   "))    {    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
405	[BUG]  [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverEncoding))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAVA.equalsIgnoreCase(archiverName)&&  JAVA.equalsIgnoreCase(archiverEncoding))  {	  if(JAVA.equalsIgnoreCase(archiverName)&&    JAVA.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
406	[BUG]  [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  this.zip);  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  FileInputStream.create(archiverName,  this.zip);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  FileInputStream.create(archiverName,  this.zip);	  InputStream    in    =    FileInputStream.create(archiverName);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
407	[BUG]  [BUGGY]  if(PAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
408	[BUG]  [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(!TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(!TAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(JAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
409	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName)&&  in!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName)&&  in!=  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(archiverName)&&  in!=  null)  {	  if(archiverName    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
410	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  ARJA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)||  ARJA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)||  ARJA.equalsIgnoreCase(archiverName))  {	  if(AR.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
411	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  encoding.length()!=  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  encoding.length()!=  0)  {	  if(entryEncoding    ==    null    ||    encoding.length()    ==    0)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
412	[BUG]  [BUGGY]  if(Archip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Archip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Archip.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
413	[BUG]  [BUGGY]  if(jAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(jAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(jAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName.equalsIgnoreCase(JAR)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
414	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( ".Archive "))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.endsWith( ".Archive "))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.endsWith( ".Archive "))  {	  if(archiverName    ==    null    ||!archiverName.endsWith(   "Archive   "))    {    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
415	[BUG]  [BUGGY]  if(CCAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CCAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CCAR.equalsIgnoreCase(archiverName)||  CPIO.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    CPIO.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
416	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  archiverName.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  archiverName.length()  ==  0)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  null  ||  archiverName.length()  ==  0)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
417	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding!=  null)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in),  entryEncoding!=  null)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
418	[BUG]  [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  JAR)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  JAR)  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiveStreamFactory.createArchiveInputStream(in)  ==  JAR)  {	  if(ArchiveStreamFactory.createArchiveInputStream(in)    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
419	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
420	[BUG]  [BUGGY]  if(entryEncoding!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding!=  null  &&!archiverName.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
421	[BUG]  [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||!archiverName.equalsIgnoreCase(entryEncoding))  {	  if(entryEncoding    ==    null    ||!archiverName.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
422	[BUG]  [BUGGY]  if(ECAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ECAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ECAR.equalsIgnoreCase(archiverName)||  JAR.equalsIgnoreCase(archiverName))  {	  if(CAR.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
423	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
424	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
425	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
426	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
427	[BUG]  [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(RC.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
428	[BUG]  [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(CAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
429	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
430	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
431	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                            AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
432	[BUG]  [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(AR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(AR.equalsIgnoreCase(archiverName)&&  JAR.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)&&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
433	[BUG]  [BUGGY]  if(JAR!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(JAR!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(JAR!=  null  &&!JAR.equalsIgnoreCase(archiverName))  {	  if(entryEncoding!=    null    ||!JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
434	[BUG]  [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
435	[BUG]  [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
436	[BUG]  [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisip  =  JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName))  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEn	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
437	[BUG]  [BUGGY]  if(encoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding!=  null  &&  encoding.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
438	[BUG]  [BUGGY]  if(archiverName!=  null  ||  encoding.equalsJAR(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  ||  encoding.equalsJAR(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  ||  encoding.equalsJAR(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
439	[BUG]  [BUGGY]  if(encoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
440	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equalsJAR(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equalsJAR(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  encoding.equalsJAR(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
441	[BUG]  [BUGGY]  if(encoding  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  JAVA.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
442	[BUG]  [BUGGY]  if(encoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding!=  null  ||  encoding.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    encoding.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
443	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverEncoding))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverEncoding))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
444	[BUG]  [BUGGY]  if(zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
445	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsJAR(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsJAR(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsJAR(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
446	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  ZIP.equalsIgnoreCase(archiverName))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
447	[BUG]  [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName,  ARJ))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName,  ARJ))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(Zip.equalsIgnoreCase(archiverName)||  Zip.equalsIgnoreCase(archiverName,  ARJ))  {	  if(Zip.equalsIgnoreCase(archiverName)||    Zip.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
448	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveStreamFactory.createArchiveInputStream(in)))  {  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveStreamFactory.createArchiveInputStream(in)))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  encoding.equals(ArchiveStreamFactory.createArchiveInputStream(in)))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
449	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_VERSION))  {  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_VERSION))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  encoding.equals(ArchiveInputStream.DEFAULT_VERSION))  {	  if(entryEncoding    ==    null    ||    encoding.equals(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
450	[BUG]  [BUGGY]  if(archiverName  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName  ==  null  ||!JAR.equalsIgnoreCase(archiverName))  {	  if(archiverName    ==    null    ||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
451	[BUG]  [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ_CPIO);  [CE]  illegal  start  of  expression  [FE]                              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  FileInputStream(ARJ,  ARJ_CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  FileInputStream(ARJ,  ARJ_CPIO);	  InputStream    in    =    new    FileInputStream(ARJ,    ARJ);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
452	[BUG]  [BUGGY]  InputStream  in  =  new  Zip(archiverName.length());  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  Zip(archiverName.length());  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  Zip(archiverName.length());	  InputStream    in    =    new    Zip();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
453	[BUG]  [BUGGY]  if(archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(archiverName!=  null  &&  archiverName.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    &&    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
454	[BUG]  [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  CPIO);  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  InputStream  in  =  new  ZipInputStream(in,  CPIO);  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	InputStream  in  =  new  ZipInputStream(in,  CPIO);	  InputStream    in    =    new    ZipInputStream(in);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
455	[BUG]  [BUGGY]  if(entryEncoding  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(entryEncoding  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(entryEncoding  ==  null  ||  ARJ.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
456	[BUG]  [BUGGY]  if(encoding  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(encoding  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(encoding  ==  null  ||  RAN.equalsIgnoreCase(archiverName))  {	  if(entryEncoding    ==    null    ||    RAN.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
457	[BUG]  [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(PRINT.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(PRINT.equalsIgnoreCase(archiverName)||  JAVA.equalsIgnoreCase(archiverName))  {	  if(JAVA.equalsIgnoreCase(archiverName)||    JAR.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
458	[BUG]  [BUGGY]  if(ArchiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ArchiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ArchiverName!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
459	[BUG]  [BUGGY]  if(ARJ!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [CE]  illegal  start  of  expression  [FE]                    AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ!=  null  &&  ARJ.equalsIgnoreCase(archiverName))  {	  if(archiverName!=    null    ||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
460	[BUG]  [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName,  entryEncoding))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName,  entryEncoding))  {  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	if(ARJ.equalsIgnoreCase(archiverName)||  ARJ.equalsIgnoreCase(archiverName,  entryEncoding))  {	  if(ARJ.equalsIgnoreCase(archiverName)||    ARJ.equalsIgnoreCase(archiverName))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
461	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(  [CE]  illegal  start  of  expression  [FE]                      AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
462	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
463	[BUG]  [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [CE]  illegal  start  of  expression  [FE]                          AssertionError      [CONTEXT]      }  }  if  (TAR.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  TarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  TarArchiveInputStream(in);  }  }  if  (JAR.equalsIgnoreCase(archiverName))  {      [BUGGY]  nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in  [BUGGY]      return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in);  }  }  if  (CPIO.equalsIgnoreCase(archiverName))  {  if  (entryEncoding  !=  null)  {  return  new  CpioArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  CpioArchiveInputStream(in);  [CLASS]  ArchiveStreamFactory  [METHOD]  createArchiveInputStream  [RETURN_TYPE]  ArchiveInputStream  String  archiverName  InputStream  in  [VARIABLES]  InputStream  in  String  AR  ARJ  CPIO  DUMP  JAR  SEVEN_Z  TAR  ZIP  archiverName  encoding  entryEncoding  boolean  	projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java	0.5773502691896258	230	230	3	replace	nisipIgnoreCase(archiverName)  {  if  (entryEncoding!=  null)  {  return  new  JarArchiveInputStream(in,  entryEncoding);  }  else  {  return  new  JarArchiveInputStream(in	  if(JAR.equalsIgnoreCase(archiverName))    {    if    (entryEncoding!=    null)    {    return    new    JarArchiveInputStream(in,    entryEncoding);    }    else    {    return    new    JarArchiveInputStream(in);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
