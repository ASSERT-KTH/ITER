projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JSAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARCH.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RAJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStream.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=JAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||!encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null&&encoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ERROR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(ERROR)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName).getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=encoding.getInputStream(JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=EntryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||!encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||cpio.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JSAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JSAR.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JSAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JS.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JSAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("jar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("/.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip().encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newJAR();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip().getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null){if(JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(JAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(JAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(DUMP.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(!JAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||PRINT.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||R.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARCH.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARCH.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(ARCH)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith("Archive.zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith("jar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230||JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase("Archive")){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAVA_ARJ)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA!=null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.DEFAULT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiverName!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith(".jar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith(".Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith(".jar")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(!JAR.equalsIgnoreCase(archiverName)&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||cpio.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||Archive.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARC.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RCJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(ARJ)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RCIO.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiverName.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RA.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,TAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(JAR,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entry
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&archiverName.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()>=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()>0||entryEncoding.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=JAR.getInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.jar.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=JAR.getInputStream(),ARJ;
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.jAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERJAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchive
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ,DUMP);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJCPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||ArchiveEncoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JS.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JS.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ArchiveInputStream.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveInputStream.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in,entryEncoding)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.createArchiveInputStream(in)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in,entryEncoding)!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in,ARJ)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in,JAR)==null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in),entryEncoding){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||!archiverName.endsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(JAR,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStream.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStream.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ArchiveStream.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=TAR.equalsIgnoreCase(archiverName)||nisip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=TAR.equalsIgnoreCase(archiverName)||nisip.equalsIgnoreCase(archiverName)]{if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=TAR.equalsIgnoreCase(archiverName)&&if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip.equalsIgnoreCase(archiverName)){if(entryEncoding==null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)&&CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CDK.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ZAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)&&RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverType)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||CR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CPIO.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(!JAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||entryEncoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||entryEncoding.length()!=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding!=null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equals(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(!ERROR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)&&Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverType)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ZIP.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(ArchiveInputStream.class)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(ARJ)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiverName.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.isArchiveInputStream(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARCH.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARCH.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,null);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equals(ArchiveInputStream.DEFAULT_ENCODING)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(archiverName.getInputStream());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.archiverName.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR!=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(jAR!=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR==null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName.getBytes());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding==null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding>=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null||entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null||entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStream.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveEncoding.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equals(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!ArchiveStreamFactory.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||!ArchiveStreamFactory.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(ArchiveInputStream.DEFAULT_VERSION)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!ArchiveStream.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!ArchiveStreamFactory.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(JAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase(ArchiveInputStream.class)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.length()<=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR.equalsIgnoreCase(archiverName)&&DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||DUMP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equals(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CPIO.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(ArchiveInputStream.class)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||JAAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("Archive_")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ!=null||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.startsWith(".zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||encoding.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ-1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIPInputStream(archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIPInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newJARInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ!=null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZIP(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ZIP.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsJAR(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsJAR(archiverName)||RC.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverJAR)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RAJ.equalsIgnoreCase(archiverName)&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RB.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(jAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARC.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR==null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ!=null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR!=null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA==null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RAJ!=null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{return
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArch
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=JAR.parse(archiverName)&&TAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJar
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchive
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=encoding.getInputStream(PRINT_ENCODING);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding>=null&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)||RC.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CR.equalsIgnoreCase(archiverName)||CR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||JAAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAAR.equalsIgnoreCase(archiverName)||JAAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName.equalsIgnoreCase(JAR)&&TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&in.length()>0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.arJAR.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=this.in.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=JAR.parse(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Archiver.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&!archiverName.equalsIgnoreCase("Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ERROR.equalsIgnoreCase(archiverName)||TAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA!=null&&JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in,entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.endsWith("zip")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAVA.equalsIgnoreCase(archiverName)&&JAVA.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=FileInputStream.create(archiverName,this.zip);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(!TAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(archiverName)&&in!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)||ARJA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.length()!=0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Archip.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(jAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.endsWith(".Archive")){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CCAR.equalsIgnoreCase(archiverName)||CPIO.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)==null||archiverName.length()==0){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in),entryEncoding!=null){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiveStreamFactory.createArchiveInputStream(in)==JAR){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!archiverName.equalsIgnoreCase(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding!=null&&!archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||!archiverName.equalsIgnoreCase(entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ECAR.equalsIgnoreCase(archiverName)||JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(RC.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(CAR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(AR.equalsIgnoreCase(archiverName)&&JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(JAR!=null&&!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisip=JAR.parse(archiverName)&&!zip.equalsIgnoreCase(archiverName)){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding!=null&&encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null||encoding.equalsJAR(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equalsJAR(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding!=null||encoding.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsJAR(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||ZIP.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(Zip.equalsIgnoreCase(archiverName)||Zip.equalsIgnoreCase(archiverName,ARJ)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equals(ArchiveStreamFactory.createArchiveInputStream(in))){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||encoding.equals(ArchiveInputStream.DEFAULT_VERSION)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName==null||!JAR.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newFileInputStream(ARJ,ARJ_CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZip(archiverName.length());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(archiverName!=null&&archiverName.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230InputStreamin=newZipInputStream(in,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(entryEncoding==null||ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(encoding==null||RAN.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(PRINT.equalsIgnoreCase(archiverName)||JAVA.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ArchiverName!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ!=null&&ARJ.equalsIgnoreCase(archiverName)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230if(ARJ.equalsIgnoreCase(archiverName)||ARJ.equalsIgnoreCase(archiverName,entryEncoding)){
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java230nisipIgnoreCase(archiverName){if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in
