projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in);}else{entryEncoding=InputStream.toString(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in);}else{entryEncoding=JAR.encode(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName.getBytes("UTF-8"));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}else{returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encodeAsString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchive(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding,archiverName,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewJARArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJARArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ,archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(PROPERTY));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ERROR_NAME));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,encoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().setContextClassLoader(getClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().setContextClassLoader(getResourceClass().getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().setContextClassLoader(JAR.class.getClassLoader());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().getContextClassLoader();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().getContextClassLoader().reset();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().getContextClassLoader().addValue(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Thread.currentThread().setContextClassLoader(getClass().getResourceName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){newJarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){newJarArchiveInputStream(in,encoding);}else{returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){newJarArchiveInputStream(in,encoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(arJ,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(argument,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(en,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.archiverName!=null){returnnewJarArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,JAR_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(in,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,JAR_Z,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,JAR_Z,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,JAR_Z,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}if(entryEncoding==null){returnnewArchiveInputStream(in,entryEn
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryArchiveInputStream(in,entryEncoding),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=entryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=this.encoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=EntryEncoding.getInputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=entryEncoding.getOutputStream();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=encoding.getInputStream("UTF-8");
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding==null){returnnewArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewArchiveInputStream(in,encoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryInputStreamin=newJarFactoryInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryInputStreamin=newJarFactoryInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarFactoryInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARInputStream(in,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding.getRawClass()!=null){returnnewJarInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(out,entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(out,entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamout=newJarInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(out,entryEncoding);}else{in.defaultWriteRaw();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,JAR_Z,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,JAR_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,JAR_Z+entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,JAR_Z,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJarInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJarArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJarArchiveInputStream(in,this.entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJarArchiveInputStream(in,this.entryEncoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalZipArchiveInputStreamin=newZipArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewZipArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newZipArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewZipArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewZipArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewZipArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJARArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(en,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233EntryEncodingentryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJARInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(archiverName),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(PRINT_ENCODING));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.encode(archiverName,ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,encoding),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP)+1,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,"UTF-8"),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,"UTF-8"));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass(),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass(),entryEncoding.getVersion());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass(),entryEncoding.getModule());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getRawClass(),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJARArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJARArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJARArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalentryEncoding!=null){returnnewJARArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding.getRawClass()!=ARJ){returnnewJARArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding.getRawClass(),ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJARArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(fileEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(fileEncoding,fileName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(fileEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJCPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(ARJ,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJ_CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,ARJ_Z);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encodeAsString(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=entryEncoding.encodeAsString();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryArchiveInputStream(out,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamout=newJarFactoryArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamout=newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamout=newJarFactoryArchiveInputStream(entryEncoding,out);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamout=newJarFactoryArchiveInputStream(out,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(fileEncoding!=null){returnnewJarFactoryArchiveInputStream(in,fileEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(fileEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(in,fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(fileEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchive(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchive(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeRaw(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchive(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchive(archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding==null){returnnewJarArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarArchiveInputStream(in,encoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,entryEncoding.getRawValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getValue()+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.toString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,encoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,archiverName,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,entryEncoding));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(ARJ_ENCODING_PROP,archiverName)+1);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJarArchiveInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233ArchiveInputStreamin=newArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){in=newArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(in,in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamentryEncoding=newJarFactoryArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryArchiveInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamentryEncoding=newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewArchiveInputStream(in,archiverName);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJarFactoryArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJarFactoryArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding.encode(archiverName),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=entryEncoding.encode(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding==null){returnnewJarInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarInputStream(in,encoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarInputStream(in,encoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(en,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding==null){returnnewJarInputStream(in,encoding);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJarInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(this.archiverName,in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding!=null){returnnewJarFactoryArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(encoding==null){returnnewJarFactoryArchiveInputStream(in,encoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(encoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233staticfinalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(file,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in.defaultReader().writeArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(entryEncoding,in.encode(archiverName));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.encode(archiverName),0);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarFactoryArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJarArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,this.archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.archiverName!=null){returnnewJARArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJARArchiveInputStream(in,this.archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(this.archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(encoding,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,pathEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(en,pathEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=newArchiveInputStream(in,entryEncoding.encodeAsString());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,JAR_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,ARJ));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,archiverName),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,JAR));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(System.getProperty(archiverName,ARJ_CPIO));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in,entryEncoding);}else{returnnewArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewJarInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJarInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){in=newJarInputStream(in,entryEncoding);}else{returnarchiverName;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJARArchiveInputStream(in,this.entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(this.entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(this.entryEncoding!=null){returnnewJARArchiveInputStream(in,this.entryEncoding);}else{thrownewIllegalArgumentException("");}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding!=null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewArchiveInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233||entryEncoding==null){returnnewArchiveInputStream(in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(in,entryEncoding,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName.getBytes(PRINT_NAME));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(entryEncoding.getBytes("UTF-8"));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName.getBytes("UTF-8"),entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding.getBytes("UTF-8"));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName.getBytes(File.separatorChar));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName.getBytes(ARJ_Z));
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(in!=null){returnnewJarInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(in==null){returnnewJarInputStream(entryEncoding,in);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamin=newJarInputStream(entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(in!=null){returnnewJarInputStream(in,entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newJARArchiveInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalEntry<K,V>entryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(in,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,JAR);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,cfg);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding,archiverName,this);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding==null){returnnewJarInputStream(entryEncoding);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarInputStreamentryEncoding=newJarInputStream(in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarInputStream(entryEncoding);}else{in.close();}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewJarArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarArchiveInputStream(in,archiverName);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewJarArchiveInputStream(in,archiverName);}else{entryEncoding=JAR_Z;}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(encoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(archiverName,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(entryEncoding.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233InputStreamin=newFileInputStream(ERROR_NAME);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(in,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding!=null){returnnewJarFactoryArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(archiverName!=null){returnnewJarFactoryArchiveInputStream(in,archiverName);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarFactoryArchiveInputStreamin=newJarFactoryArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233in=newJarFactoryArchiveInputStream(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getName(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(entryEncoding,in.getName());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=entryEncoding.getName();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJarArchiveInputStream(in,entryEncoding.getURL());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233Entry<K,V>entryEncoding=entryEncoding.getValue();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233entryEncoding=InputStream.toString(archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(entryEncoding.getRawClass()!=ARJ){returnnewArchiveInputStream(in,entryEncoding.getRawClass());}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewArchiveInputStream(entryEncoding,in.getRawClass());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newArchiveInputStream(in,entryEncoding.getRawClass(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalArchiveInputStreamin=entryEncoding.getRawClass();
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,this.entryEncoding,archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(this.entryEncoding,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,this.entryEncoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,this.archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(in,this.encoding,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233newJarArchiveInputStream(this.in,in);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,ARJ,entryEncoding);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,ARJCPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233if(ARJ!=null){returnnewJARArchiveInputStream(in,ARJ);}
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewJARArchiveInputStream(in,ARJ,CPIO);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233returnnewARJArchiveInputStream(in,ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJARArchiveInputStreamin=newJARArchiveInputStream(ARJ);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding.getValue(),archiverName);
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(entryEncoding,in.getValue());
projects/Compress29/src/main/java/org/apache/commons/compress/archivers/ArchiveStreamFactory.java233finalJarArchiveInputStreamin=newJarArchiveInputStream(in,entryEncoding.getRawClass());
