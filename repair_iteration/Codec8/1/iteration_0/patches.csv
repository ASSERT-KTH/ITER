bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	add	    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);		compilable	  [FE]  NullPointerException  	2	1	add
2	[BUG]  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [FE]  NullPointerException  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);		compilable	  [FE]  NullPointerException  	2	1	add
3	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
4	[BUG]  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
5	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
6	[BUG]  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
7	[BUG]  [BUGGY]    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
8	[BUG]  [BUGGY]    System.arraycopy(0,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(0,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(0,  0,  this.lineSeparator,  0,  lineLength);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
9	[BUG]  [BUGGY]    this.urlSafe  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    this.urlSafe  =  urlSafe;  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    this.urlSafe  =  urlSafe;		non-compiled	[CE]  illegal  start  of  expression	2	None	add
10	[BUG]  [BUGGY]    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
11	[BUG]  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  expression	2	None	add
12	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  this.lineLength  =  0;  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  this.lineLength  =  0;  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  ';'  expected	1	None	replace
15	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
16	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
17	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
18	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
19	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  type	1	None	replace
20	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
21	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
22	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]    System.arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
24	[BUG]  [BUGGY]    System.arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
25	[BUG]  [BUGGY]    System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
26	[BUG]  [BUGGY]    System.arraycopy(this.separator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.separator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.separator,  0,  lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
27	[BUG]  [BUGGY]    System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength);		non-compiled	[CE]  illegal  start  of  type	2	None	add
28	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored  }  	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]    System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]    ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
31	[BUG]  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]      ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);		non-compiled	[CE]  illegal  start  of  type	2	None	add
32	[BUG]  [BUGGY]    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe);		non-compiled	[CE]  illegal  start  of  type	2	None	add
33	[BUG]  [BUGGY]    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException  [CONTEXT]  public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {  [BUGGY]    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]  lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);		non-compiled	[CE]  illegal  start  of  type	2	None	add
