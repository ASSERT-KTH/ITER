bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  not  a  statement	21	None	replace
2	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  not  a  statement	21	None	replace
3	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  not  a  statement	21	None	replace
4	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineSeparator.length);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
18	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
20	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
22	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
23	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
24	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
25	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
26	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	22	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	30	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	30	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sep,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	7	None	replace
38	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
39	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
40	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
41	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	17	None	replace
42	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	23	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  urlSafe);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ';'  expected	23	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.lineSeparator.length);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
49	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
50	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
51	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
52	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
53	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	20	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(0,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(0,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(0,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(0,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(4,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(4,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(4,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(0,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(1,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(1,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(1,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(0,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	8	None	replace
59	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
60	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
61	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
62	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
63	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
64	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	14	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator.length);	      System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
70	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
71	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
72	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	26	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator.length);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
77	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
78	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
79	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
80	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
81	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
82	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]              NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
83	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
84	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                  NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
85	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4)*  4  :  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4)*  4  :  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
86	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
87	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	28	None	replace
88	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSafe;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  urlSafe;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
89	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  new  byte[lineLength];  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
90	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator;  [CE]  class  or  interface  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  lineSeparator;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
91	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  urlSafe  +  lineSeparator.length;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  lineSeparator.length;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
92	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe;  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  |=  urlSafe;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
93	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  UUID_SEPARATOR;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
94	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Length];  [CE]  class  or  interface  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  new  byte[Length];  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Length];	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
95	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[0];  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  new  byte[0];  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[0];	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
96	[BUG]  [BUGGY]  this.lineLength  =  lineLength;  [CE]  class  or  interface  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;	  this.lineLength    =    0;    	non-compiled	[CE]  class  or  interface  expected	13	None	replace
97	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;  [CE]  class  or  interface  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;	  this.lineLength    =    0;    	non-compiled	[CE]  class  or  interface  expected	13	None	replace
98	[BUG]  [BUGGY]  this.lineLength  -=  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  -=  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;	  this.lineLength    =    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
99	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	11	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  class  or  interface  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	11	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	11	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  class  or  interface  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	11	None	replace
103	[BUG]  [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	16	None	replace
104	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	16	None	replace
105	[BUG]  [BUGGY]  short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	16	None	replace
106	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	16	None	replace
107	[BUG]  [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	16	None	replace
108	[BUG]  [BUGGY]  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	16	None	replace
109	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  class  or  interface  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	16	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  class  or  interface  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	4	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
114	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	3	None	replace
115	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
116	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	29	None	replace
117	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
118	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
119	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	29	None	replace
120	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	29	None	replace
121	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
122	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
123	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
124	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	12	None	replace
125	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
126	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
127	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
128	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
129	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
130	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
131	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
132	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
133	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2);  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
137	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
138	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	18	None	replace
139	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ';'  expected	21	None	replace
140	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
141	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ';'  expected	21	None	replace
142	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ';'  expected	21	None	replace
143	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ';'  expected	21	None	replace
144	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
145	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe.length);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
147	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	12	None	replace
148	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
149	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
150	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
151	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
152	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlLength);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
153	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  6)*  4  :  0;  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  6)*  4  :  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  6)*  4  :  0;	  this.lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
154	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  4  :  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  4  :  0;	  this.lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
155	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4)*  4  :  0);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4)*  4  :  0);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4)*  4  :  0);	  this.lineLength    =    0;    	non-compiled	[CE]  ';'  expected	13	None	replace
156	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
157	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
158	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
159	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
160	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
161	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length];	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
162	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSeparator;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  urlSafe  ||  urlSeparator;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  urlSeparator;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
163	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  1;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  urlSafe  +  1;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  1;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
164	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  System.currentTimeMillis();  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
165	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
166	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  illegal  start  of  type  [FE]      NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
167	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]        NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
168	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  [CE]  illegal  start  of  type  [FE]          NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
169	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  illegal  start  of  type  [FE]            NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
170	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator);  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(lineSeparator,  0,  this.buffer,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.buffer,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
173	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
174	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  1);	      System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
176	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
177	[BUG]  [BUGGY]  int  lineLength  =  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
178	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
179	[BUG]  [BUGGY]  long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
180	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
181	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
182	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
183	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
184	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
185	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
186	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
187	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
188	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	29	None	replace
189	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
191	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
192	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
193	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separator);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
194	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
195	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
196	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
197	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
198	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
199	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineSeparator);	      System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
200	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength);	      System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
201	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	17	None	replace
202	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
203	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
204	[BUG]  [BUGGY]  this.lineSeparator  =  0;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineSeparator  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  0;	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
205	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  1;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  1;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
206	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
207	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
208	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
209	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
210	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
211	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.line,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
213	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
214	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
215	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
216	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
217	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  1);	      System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
218	[BUG]  [BUGGY]  if(urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
219	[BUG]  [BUGGY]  urlSafe  =  0;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  urlSafe  =  0;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  0;	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
220	[BUG]  [BUGGY]  0)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  0)  {  lineLength  =  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	0)  {  lineLength  =  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
221	[BUG]  [BUGGY]  urlSafe  =  eof  urlSafe;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  urlSafe  =  eof  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  urlSafe;	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	19	None	replace
222	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  >  0;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  >  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	19	None	replace
223	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
224	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.lineSeparator  =  urlSafe;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
225	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
226	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]    NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
227	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]      NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
228	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]        NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
229	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  ';'  expected  [FE]          NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	  	non-compiled	[CE]  ';'  expected	1	None	add
230	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]            NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
231	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [CE]  ';'  expected  [FE]              NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
232	[BUG]  [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                NullPointerException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]      System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	        System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  	non-compiled	[CE]  ';'  expected	1	None	add
233	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
234	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
235	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	22	None	replace
236	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	18	None	replace
237	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
238	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
239	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.sep);  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.sep);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.sep);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
240	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  urlSafe);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	23	None	replace
241	[BUG]  [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe);	      System.arraycopy(this.sep,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	23	None	replace
242	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe);	      System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
243	[BUG]  [BUGGY]  System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	      System.arraycopy(0,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	8	None	replace
244	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ");  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ");  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ");	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
245	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toByteArray();  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toByteArray();  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toByteArray();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
246	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator);	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
247	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toString();  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toString();  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toString();	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
248	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "  urlSafe;  [CE]  unclosed  string  literal  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "  urlSafe;  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url ")+ "  urlSafe;	      this.urlSafe    =    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	9	None	replace
249	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.lineLength);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
251	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
252	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
253	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
254	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	20	None	replace
255	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
256	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	33	None	replace
257	[BUG]  [BUGGY]  System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  urlSafe.length);	      System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	33	None	replace
258	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ')'  expected	21	None	replace
259	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ')'  expected	21	None	replace
260	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ')'  expected	21	None	replace
261	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    //    this    just    gets    ignored    }    	non-compiled	[CE]  ')'  expected	21	None	replace
262	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [BUGGY]    lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  ')'  expected	28	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe);	      System.arraycopy(this.separator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	26	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  urlSafe);	      System.arraycopy(this.buffer,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  fileLength);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  fileLength);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  fileLength);	      System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	5	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	      System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	10	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {    [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  urlSafe);  [BUGGY]    lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  urlSafe);	      System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
