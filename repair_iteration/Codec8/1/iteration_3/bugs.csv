bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ')'  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.line  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.line  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.line	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	227	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
5	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
7	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
9	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
10	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
11	[BUG]  [BUGGY]  ((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	236	None	replace
12	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
13	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	151	None	replace
14	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  class  or  interface  expected	151	None	replace
15	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	151	None	replace
16	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  }  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  ')'  expected	151	None	replace
17	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  'else'  without  'if'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	151	None	replace
18	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  class  or  interface  expected	151	None	replace
19	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	151	None	replace
20	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
21	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
22	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
23	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  lineLength;  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  lineLength;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  lineLength;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator.length);	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  'else'  without  'if'	203	None	replace
25	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
26	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
27	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	203	None	replace
28	[BUG]  [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  class  or  interface  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  class  or  interface  expected	167	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	167	None	replace
30	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	167	None	replace
31	[BUG]  [BUGGY]  Arrays.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Arrays.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Arrays.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	167	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	167	None	replace
33	[BUG]  [BUGGY]  Arrays.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Arrays.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Arrays.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	167	None	replace
34	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
35	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
36	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
37	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
38	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
39	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	223	None	replace
40	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;  [CE]  class  or  interface  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	213	None	replace
41	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	213	None	replace
42	[BUG]  [BUGGY]  this.lineLength  =  urlSafe  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	213	None	replace
43	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >=  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >=  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >=  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	213	None	replace
44	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	213	None	replace
45	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	213	None	replace
46	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	211	None	replace
47	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  'else'  without  'if'	211	None	replace
48	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  'else'  without  'if'	211	None	replace
49	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	211	None	replace
50	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	79	None	replace
51	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  class  or  interface  expected	79	None	replace
52	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  class  or  interface  expected	79	None	replace
53	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [CE]  class  or  interface  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  class  or  interface  expected	79	None	replace
54	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	79	None	replace
55	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	228	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineS  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	228	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(this.encodeTable,  0,  this.lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeTable,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeTable,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	228	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	228	None	replace
59	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
60	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
61	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
64	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
65	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
66	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
67	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
68	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
69	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  urlSafe;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
70	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
71	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
72	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
73	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
74	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
75	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  urlSafe);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
76	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(this.lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(this.lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(this.lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
77	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator  +  File.separatorCharToString(urlSafe);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  lineSeparator  +  File.separatorCharToString(urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator  +  File.separatorCharToString(urlSafe);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
78	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  0);  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  0);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  0);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
79	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  |  File.separatorCharToString(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  |  File.separatorCharToString(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  |  File.separatorCharToString(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
80	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
81	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  1;  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  1;	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
82	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineLength);  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator)+  File.separatorCharToString(lineLength);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
83	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  1];  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  +  1];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
84	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  4];  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  4];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  +  4];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
85	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  3];  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  3];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  +  3];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
86	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  2];  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  +  2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  +  2];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
87	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  *  4];  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  *  4];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  *  4];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
88	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  -  1];  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  -  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  -  1];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
89	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  *  2];  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length  *  2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length  *  2];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
90	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
91	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
92	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	182	None	replace
93	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
94	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	182	None	replace
95	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  2)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  2)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  2)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
96	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0);	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  ')'  expected	85	None	replace
97	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  1)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  1)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  1)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
98	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0;  [CE]  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  /  4  *  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  	85	None	replace
99	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  *  4  :  0);  [CE]  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  *  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  *  4  :  0);	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  	85	None	replace
100	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  1;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  1;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
101	[BUG]  [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  eof  urlSafe)  {  lineLength  =  0;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
102	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineLength);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
103	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.floor(lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.floor(lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)Math.floor(lineSeparator.length);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
104	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint(lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint(lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)Math.rint(lineSeparator.length);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
105	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)(lineSeparator.length  -  1);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)(lineSeparator.length  -  1);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)(lineSeparator.length  -  1);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
106	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)Math.rint((  int)lineSeparator);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
107	[BUG]  [BUGGY]  safe)  {  lineLength  =  1;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
108	[BUG]  [BUGGY]  this.lineLength  =  1;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  1;	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
109	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    fileLength);    	non-compiled	[CE]  illegal  start  of  expression	265	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  fileLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  fileLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  fileLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    fileLength);    	non-compiled	[CE]  illegal  start  of  expression	265	None	replace
113	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
114	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
115	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
116	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
117	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.sep,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(this.sep,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.sep,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
121	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
122	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
123	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  lineSeparator.length);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  urlSafe);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  lineLength);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.lineLength);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.sep.length);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
130	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.sep,  0,  this.urlSafe);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineLength,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
133	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  +  1);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
135	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  >  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
136	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  0  :  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  0  :  0;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
137	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
138	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  1?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  1?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  1?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
139	[BUG]  [BUGGY]  urlSafe  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  urlSafe;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
140	[BUG]  [BUGGY]  this.urlSafe  =  0;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  0;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
141	[BUG]  [BUGGY]  urlSafe  =  false;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  false;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  false;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
142	[BUG]  [BUGGY]  urlSafe  =  null;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  null;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
143	[BUG]  [BUGGY]  urlSafe  =  true;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  true;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  true;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
144	[BUG]  [BUGGY]  urlSafe  =  System.getProperty( "line.separator ");  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.getProperty( "line.separator ");  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.getProperty( "line.separator ");	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
145	[BUG]  [BUGGY]  urlSafe  =  System.identityHashCode(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.identityHashCode(lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.identityHashCode(lineSeparator);	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
146	[BUG]  [BUGGY]  urlSafe  =!urlSafe;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!urlSafe;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
147	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  lineSeparator;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
148	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
149	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  &&  urlSafe;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  &&  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  &&  urlSafe;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
150	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator  ||  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  lineSeparator  ||  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator  ||  urlSafe;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
151	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  CHUNK_SEPARATOR;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  CHUNK_SEPARATOR;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
152	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||!urlSafe;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||!urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||!urlSafe;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
153	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	195	None	replace
154	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(5,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(5,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(5,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(1,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  4);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  4);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
158	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  3);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  3);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
159	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  *  CHUNK_SIZE);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  *  CHUNK_SIZE);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  *  CHUNK_SIZE);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  2);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  2);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
161	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  1);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
162	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	237	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  4);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  4);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
164	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  3);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  3);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
165	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
166	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
167	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
168	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	139	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.bufferLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.bufferLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.bufferLength);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
173	[BUG]  [BUGGY]  short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	short  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  short    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
174	[BUG]  [BUGGY]  int  lineLength  =  0;//  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  short    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
175	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
176	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    System.arra    	non-compiled	[CE]  'else'  without  'if'	150	None	replace
177	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    System.arra    	non-compiled	[CE]  'else'  without  'if'	150	None	replace
178	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    System.arra    	non-compiled	[CE]  'else'  without  'if'	150	None	replace
179	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  'else'  without  'if'  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(this.lineSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	212	None	replace
180	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	39	None	replace
181	[BUG]  [BUGGY]  safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	39	None	replace
182	[BUG]  [BUGGY]  this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	39	None	replace
183	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	39	None	replace
184	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineSeparator.length);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
185	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSafe);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
186	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  urlSafe);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
187	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineSeparator.length);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
188	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineLength);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.lineLength);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
190	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.separator,  0,  lineSeparator.length);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
191	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
192	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
193	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
194	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
195	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
196	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
197	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
198	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
199	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
200	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
201	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.line  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.line  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.line	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	84	None	replace
202	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineS  [CE]  ')'  expected  [FE]                          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	84	None	replace
203	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(  [CE]  illegal  start  of  expression  [FE]                            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  }  else  {  System.arraycopy(	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
204	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  <identifier>  expected  [FE]                              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
205	[BUG]  [BUGGY]  safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
206	[BUG]  [BUGGY]  safe(this.urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe(this.urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe(this.urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
207	[BUG]  [BUGGY]  safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
208	[BUG]  [BUGGY]  safeArray())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeArray())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeArray())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
209	[BUG]  [BUGGY]  safeLog())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeLog())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeLog())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
210	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
211	[BUG]  [BUGGY]  safeAccess())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeAccess())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeAccess())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
212	[BUG]  [BUGGY]  safeToInt())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeToInt())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeToInt())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
214	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
215	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }  [CE]  'else'  without  'if'  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	226	None	replace
216	[BUG]  [BUGGY]  this.lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  CHUNK_SEPARATOR;	  this.lineSeparator    =    0;    	non-compiled	[CE]  <identifier>  expected	204	None	replace
217	[BUG]  [BUGGY]  this.lineSeparator  =  -1;  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  -1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  -1;	  this.lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	204	None	replace
218	[BUG]  [BUGGY]  this.lineSeparator  =  System.currentTimeMillis();  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  System.currentTimeMillis();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  System.currentTimeMillis();	  this.lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	204	None	replace
219	[BUG]  [BUGGY]  this.lineSeparator  =  null;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  null;	  this.lineSeparator    =    0;    	non-compiled	[CE]  <identifier>  expected	204	None	replace
220	[BUG]  [BUGGY]  this.lineSeparator  =  lineSeparator;  [CE]  'else'  without  'if'  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  lineSeparator;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  lineSeparator;	  this.lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	204	None	replace
221	[BUG]  [BUGGY]  this.lineSeparator  =  new  byte[0];  [CE]  'else'  without  'if'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  new  byte[0];  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  new  byte[0];	  this.lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	204	None	replace
222	[BUG]  [BUGGY]  this.lineSeparator  =  1;  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  1;	  this.lineSeparator    =    0;    	non-compiled	[CE]  'else'  without  'if'	204	None	replace
223	[BUG]  [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
224	[BUG]  [BUGGY]  this.lineLength  -=  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
225	[BUG]  [BUGGY]  this.lineLength  -=  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
226	[BUG]  [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
227	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	214	None	replace
228	[BUG]  [BUGGY]  this.lineLength  -=  6;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  6;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  6;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
229	[BUG]  [BUGGY]  this.lineLength  -=  10;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  10;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  10;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
230	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	214	None	replace
231	[BUG]  [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  4;  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  4;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  'else'  without  'if'	214	None	replace
232	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
233	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
234	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	100	None	replace
235	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
236	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
237	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  <identifier>  expected	123	None	replace
238	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
239	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  1;  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  1):  1;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
240	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineLength  -  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
241	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2):  0;  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
242	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?(lineSeparator.length  -  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  'else'  without  'if'	97	None	replace
243	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  2):  0;  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  2):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  -  2):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
244	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.labelSafe);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.labelSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.labelSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
245	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
246	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
247	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  'else'  without  'if'	16	None	replace
248	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineSeparator.length);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
249	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
250	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
251	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [CE]  'else'  without  'if'  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
252	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineLength);  [CE]  <identifier>  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
253	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSeparator,  0,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
254	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	99	None	replace
255	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	180	None	replace
256	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  'else'  without  'if'	180	None	replace
257	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	180	None	replace
258	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
259	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  'else'  without  'if'	119	None	replace
260	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
261	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
262	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	119	None	replace
263	[BUG]  [BUGGY]  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	230	None	replace
264	[BUG]  [BUGGY]  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	230	None	replace
265	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	230	None	replace
266	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSize,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	230	None	replace
267	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
268	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [CE]  'else'  without  'if'  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
269	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
270	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	111	None	replace
271	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineLength  -  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
272	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length  -  this.urlSafe);  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length  -  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	111	None	replace
273	[BUG]  [BUGGY]  if(urlSafe  &&  urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  &&  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  &&  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
274	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
275	[BUG]  [BUGGY]  if(urlSafe  ||  urlSafe)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  urlSafe)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  urlSafe)  {  this.lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
276	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  urlSafe)  {  lineLength  =  0;	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
277	[BUG]  [BUGGY]  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
278	[BUG]  [BUGGY]  if(urlSafe  ||!urlSafe)  {  lineLength  =  0;  }  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||!urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||!urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  'else'  without  'if'	218	None	replace
279	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
280	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator);    	non-compiled	[CE]  'else'  without  'if'	199	None	replace
281	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [CE]  'else'  without  'if'  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator);    	non-compiled	[CE]  'else'  without  'if'	199	None	replace
282	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator);    	non-compiled	[CE]  'else'  without  'if'	199	None	replace
283	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
284	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	144	None	replace
285	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  'else'  without  'if'  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	144	None	replace
286	[BUG]  [BUGGY]  System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	144	None	replace
287	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  not  a  statement	117	None	replace
288	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  ')'  expected	117	None	replace
289	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	40	None	replace
290	[BUG]  [BUGGY]  safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	40	None	replace
291	[BUG]  [BUGGY]  this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	40	None	replace
292	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  2);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  2);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
293	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
294	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  3);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  3);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
295	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  4);  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  +  4);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  'else'  without  'if'	175	None	replace
296	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
297	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  illegal  start  of  expression	186	None	replace
298	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  byte[lineLength];  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  byte[lineLength];  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  byte[lineLength];  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	186	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
301	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  'else'  without  'if'  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	165	None	replace
302	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
303	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
304	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	165	None	replace
305	[BUG]  [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  eof  urlSafe)  {  lineLength  =  0;  }	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
306	[BUG]  [BUGGY]  ||!urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||!urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||!urlSafe)  {  lineLength  =  0;  }	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
307	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  1;  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  1;  }	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
308	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  not  a  statement	52	None	replace
309	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
310	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  not  a  statement	52	None	replace
311	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  'else'  without  'if'  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  'else'  without  'if'	52	None	replace
312	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  orphaned  case	10	None	replace
313	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [CE]  orphaned  case  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  orphaned  case	10	None	replace
314	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.bufferLength);  [CE]  'else'  without  'if'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.bufferLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.bufferLength);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
315	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer.length);  [CE]  orphaned  case  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer.length);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  orphaned  case	10	None	replace
316	[BUG]  [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  'else'  without  'if'	81	None	replace
317	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  orphaned  case	81	None	replace
318	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
319	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
320	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
321	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
322	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
323	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
324	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  orphaned  case  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  orphaned  case	127	None	replace
325	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ").toString();  [CE]  orphaned  case  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ").toString();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.urlSafe ").toString();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  orphaned  case	247	None	replace
326	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ").toString();  [CE]  orphaned  case  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ").toString();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "file.separator ").toString();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  orphaned  case	247	None	replace
327	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toString();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toString();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toString();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
328	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toPath();  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toPath();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toPath();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
329	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toString());  [CE]  orphaned  case  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toString());  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ".toString());	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  orphaned  case	247	None	replace
330	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ").toString();  [CE]  orphaned  case  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ").toString();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "os.urlSafe ").toString();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  orphaned  case	247	None	replace
331	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlsafe ").toString();  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlsafe ").toString();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.urlsafe ").toString();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
332	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';');  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
333	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS!=  ';');  [CE]  orphaned  case  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS!=  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS!=  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  orphaned  case	181	None	replace
334	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  +  ';');  [CE]  orphaned  case  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  +  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  +  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  orphaned  case	181	None	replace
335	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';'  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';'  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSported  }  ';'	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
336	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';');  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
337	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  ==  ';');  [CE]  orphaned  case  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  ==  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  ==  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  orphaned  case	181	None	replace
338	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';'  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';'  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSEOF  }  ';'	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
339	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
340	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator!=  ';');  [CE]  orphaned  case  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator!=  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator!=  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  orphaned  case	181	None	replace
341	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator  +  urlSafe.length;  [CE]  orphaned  case  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  lineSeparator  +  urlSafe.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator  +  urlSafe.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
342	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  fileSeparator.length;  [CE]  orphaned  case  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  fileSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  fileSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
343	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  [CE]  orphaned  case  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
344	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  |  lineSeparator.length;  [CE]  orphaned  case  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  |  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  |  lineSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
345	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  this.lineSeparator.length;  [CE]  orphaned  case  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  this.lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  this.lineSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
346	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  &  lineSeparator.length;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  &  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  &  lineSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
347	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator.length  +  urlSafe.length;  [CE]  illegal  start  of  type  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  lineSeparator.length  +  urlSafe.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator.length  +  urlSafe.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
348	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  lineLength;  [CE]  orphaned  case  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  lineLength;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  lineLength;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  orphaned  case	91	None	replace
349	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
350	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
351	[BUG]  [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
352	[BUG]  [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
353	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
354	[BUG]  [BUGGY]  ||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
355	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
356	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ')'  expected	50	None	replace
357	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  not  a  statement	50	None	replace
358	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ')'  expected	50	None	replace
359	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(SCRIPT_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
360	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(SCRIPT_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	192	None	replace
361	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
362	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
363	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
364	[BUG]  [BUGGY]  ((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  type	261	None	replace
365	[BUG]  [BUGGY]  0)  {  this.lineLength  =  0;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  0)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	0)  {  this.lineLength  =  0;  }	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
366	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
367	[BUG]  [BUGGY]  0,  lineLength)  {  this.lineSeparator  =  0;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  0,  lineLength)  {  this.lineSeparator  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	0,  lineLength)  {  this.lineSeparator  =  0;  }	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
368	[BUG]  [BUGGY]  ((  CHUNK_SEPARATOR)lineSeparator).setLength(0);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  CHUNK_SEPARATOR)lineSeparator).setLength(0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  CHUNK_SEPARATOR)lineSeparator).setLength(0);	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
369	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength);	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
370	[BUG]  [BUGGY]  ((  CHUNK_SEPARATOR)lineSeparator).setEncoding(urlSafe);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  CHUNK_SEPARATOR)lineSeparator).setEncoding(urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  CHUNK_SEPARATOR)lineSeparator).setEncoding(urlSafe);	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	220	None	replace
371	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator.length  -  4)*  4  :  0;	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  type	209	None	replace
372	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
373	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.sep,  0,  this.urlSafe);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
374	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sepSafe);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sepSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sepSafe);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
375	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
376	[BUG]  [BUGGY]  this.lineSeparator  =  boolean_ENCODE_TABLE;  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  boolean_ENCODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  boolean_ENCODE_TABLE;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  orphaned  case	224	None	replace
377	[BUG]  [BUGGY]  this.lineSeparator  =!urlSafe;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =!urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =!urlSafe;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
378	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  urlSafe;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
379	[BUG]  [BUGGY]  this.lineSeparator  =  boolean_URLSafe;  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  boolean_URLSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  boolean_URLSafe;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  orphaned  case	224	None	replace
380	[BUG]  [BUGGY]  this.lineSeparator  =  boolean_urlSafe;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  boolean_urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  boolean_urlSafe;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	224	None	replace
381	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  orphaned  case  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  orphaned  case	242	None	replace
382	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  orphaned  case	242	None	replace
383	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
384	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
385	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	242	None	replace
386	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  orphaned  case  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  orphaned  case	242	None	replace
387	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);  [CE]  orphaned  case  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSize);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  orphaned  case	242	None	replace
388	[BUG]  [BUGGY]  Integer  lineLength  =  0;  [CE]  orphaned  case  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  orphaned  case	109	None	replace
389	[BUG]  [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
390	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  orphaned  case  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  orphaned  case	109	None	replace
391	[BUG]  [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
392	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
393	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  urlSafe;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
394	[BUG]  [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
395	[BUG]  [BUGGY]  byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	253	None	replace
396	[BUG]  [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
397	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
398	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
399	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ");  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ");  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.urlSafe ");	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
400	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ");  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ");  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "file.separator ");	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
401	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ");  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ");  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "os.urlSafe ");	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
402	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe);	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
403	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toLowerCase();	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
404	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").booleanValue();  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").booleanValue();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").booleanValue();	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
405	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toLowerCase());  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toLowerCase());  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ".toLowerCase());	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
406	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  illegal  start  of  type	120	None	replace
407	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	120	None	replace
408	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	120	None	replace
409	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
410	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineLength);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
411	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.lineSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
412	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	170	None	replace
413	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
414	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
415	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  urlSafe-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
416	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
417	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineSeparator.length);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
418	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.separator.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.separator.length);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
419	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
420	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  lineLength);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
421	[BUG]  [BUGGY]  System.arraycopy(Chunk_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Chunk_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Chunk_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
422	[BUG]  [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
423	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  lineLength);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
424	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.buffer,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.buffer,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
425	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
426	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
427	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.fileSeparator,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
428	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  lineLength);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
429	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.fileSeparator,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
430	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.fileSeparator,  0,  lineLength);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
431	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  this.lineSeparator,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	264	None	replace
432	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
433	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  *  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  *  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineLength  *  4)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
434	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  (lineLength  /  4)*  4  :  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  (lineLength  /  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  (lineLength  /  4)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
435	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0);	  this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    	non-compiled	[CE]  ')'  expected	86	None	replace
436	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
437	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
438	[BUG]  [BUGGY]  int  lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  lineSeparator;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
439	[BUG]  [BUGGY]  byte  lineLength  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  urlSafe;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	108	None	replace
440	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
441	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
442	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }  [CE]  ';'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
443	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	108	None	replace
444	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(chunkSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(chunkSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(chunkSeparator,  0,  lineSeparator,  0,  lineLength);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
445	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
446	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
447	[BUG]  [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
448	[BUG]  [BUGGY]  Integer  lineLength  =  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
449	[BUG]  [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
450	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
451	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
452	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  4  :  0);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
453	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1)*  4  :  0);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  1)*  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
454	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
455	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  /  4)*  4  :  0);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?(lineSeparator.length  /  4)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?(lineSeparator.length  /  4)*  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
456	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
457	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
458	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (line  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
459	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
460	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
461	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ')'  expected	159	None	replace
462	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
463	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
464	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
465	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator.length);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
466	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
467	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  lineSeparator.length);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  type	159	None	replace
468	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
469	[BUG]  [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
470	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
471	[BUG]  [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  not  a  statement	178	None	replace
472	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  disable  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
473	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator,  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator,  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  chunk-separating  lineSeparator,  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
474	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	252	None	replace
475	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineLength);  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineLength);	  System.arraycopy(this.lineSeparator,    0,    this.buffer,    0,    lineLength);    	non-compiled	[CE]  class  or  interface  expected	9	None	replace
476	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineLength);	  System.arraycopy(this.lineSeparator,    0,    this.buffer,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
477	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.sepLength);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.sepLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.sepLength);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
478	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineLength);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
479	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  lineLength);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
480	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
481	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineLength);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
482	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
483	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
484	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
485	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
486	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  lineSeparator);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  lineSeparator);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
487	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
488	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator);  [CE]  class  or  interface  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	140	None	replace
489	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
490	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	140	None	replace
491	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
492	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  ')'  expected	154	None	replace
493	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0;  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4  *  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  ')'  expected	154	None	replace
494	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  2)*  4  :  0;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  2)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  2)*  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  type	154	None	replace
495	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  3  :  0;  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  3  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  3  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  class  or  interface  expected	154	None	replace
496	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  2  :  0;  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  2  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  4)*  2  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  class  or  interface  expected	154	None	replace
497	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	83	None	replace
498	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	83	None	replace
499	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	83	None	replace
500	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	2	None	replace
501	[BUG]  [BUGGY]  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	80	None	replace
502	[BUG]  [BUGGY]  System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
503	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  lineSeparator.length);  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	80	None	replace
504	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator.length);  }  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	80	None	replace
505	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
506	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  }	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
507	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  2;  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  2;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  2;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  ')'  expected	163	None	replace
508	[BUG]  [BUGGY]  this.urlSafe  =  lineSeparator  +  1;  [CE]  ')'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  lineSeparator  +  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  lineSeparator  +  1;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  ')'  expected	163	None	replace
509	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  4;  [CE]  ')'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  4;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  4;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  ')'  expected	163	None	replace
510	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  3;  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  3;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  3;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  <identifier>  expected	163	None	replace
511	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  1L;  [CE]  ')'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  1L;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  1L;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  ')'  expected	163	None	replace
512	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
513	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
514	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
515	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
516	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
517	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	260	None	replace
518	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  ')'  expected	137	None	replace
519	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  not  a  statement	137	None	replace
520	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineS  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  not  a  statement	137	None	replace
521	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sep);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sep);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.sep);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  ')'  expected	239	None	replace
522	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  ')'  expected	239	None	replace
523	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.sep);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.sep);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.sep);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  ')'  expected	239	None	replace
524	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.sep);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.sep);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.sep);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  <identifier>  expected	239	None	replace
525	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.urlSafe,  0,  this.sep);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.urlSafe,  0,  this.sep);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.urlSafe,  0,  this.sep);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  ')'  expected	239	None	replace
526	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ ",  urlSafe;  [CE]  unclosed  string  literal  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ ",  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url ")+ ",  urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
527	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ ".urlSafe;  [CE]  unclosed  string  literal  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ ".urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url ")+ ".urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
528	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "  urlsafe;  [CE]  unclosed  string  literal  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "  urlsafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url ")+ "  urlsafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
529	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.home ")+ "  urlSafe;  [CE]  unclosed  string  literal  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.home ")+ "  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.home ")+ "  urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
530	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "file.url ")+ "  urlSafe;  [CE]  unclosed  string  literal  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "file.url ")+ "  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "file.url ")+ "  urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
531	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineLength  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ')'  expected	118	None	replace
532	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	156	None	replace
533	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	156	None	replace
534	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	156	None	replace
535	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	156	None	replace
536	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	156	None	replace
537	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator);    	non-compiled	[CE]  ')'  expected	193	None	replace
538	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator);    	non-compiled	[CE]  ')'  expected	193	None	replace
539	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineS;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
540	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSelector!=  ';');  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSelector!=  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSelector!=  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
541	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSEOF  }  ';');  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSEOF  }  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSEOF  }  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
542	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSported  +  ';');  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSported  +  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSported  +  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
543	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe  }  ';');  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe  }  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe  }  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
544	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSported  }  ';');  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSported  }  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSported  }  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
545	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineS);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  <identifier>  expected	196	None	replace
546	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator!=  ';');  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator!=  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator!=  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
547	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSelected);  [CE]  class  or  interface  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSelected);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSelected);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  class  or  interface  expected	196	None	replace
548	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[1];  [CE]  class  or  interface  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[1];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  class  or  interface  expected	95	None	replace
549	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[4];  [CE]  ')'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[4];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[4];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  ')'  expected	95	None	replace
550	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[2];  [CE]  ')'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[2];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  ')'  expected	95	None	replace
551	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[3];  [CE]  class  or  interface  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[3];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[3];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  class  or  interface  expected	95	None	replace
552	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[5];  [CE]  class  or  interface  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[5];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[5];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  class  or  interface  expected	95	None	replace
553	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	255	None	replace
554	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	255	None	replace
555	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe.length);  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	255	None	replace
556	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	255	None	replace
557	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  class  or  interface  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	255	None	replace
558	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  1);  [CE]  class  or  interface  expected  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	206	None	replace
559	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  2);  [CE]  class  or  interface  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  2);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	206	None	replace
560	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  3);  [CE]  class  or  interface  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  3);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	206	None	replace
561	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  4);  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  4);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	206	None	replace
562	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  class  or  interface  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  1);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	166	None	replace
563	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);  }  [CE]  class  or  interface  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	166	None	replace
564	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	166	None	replace
565	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  [CE]  class  or  interface  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	166	None	replace
566	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  1);  }  [CE]  class  or  interface  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  class  or  interface  expected	166	None	replace
567	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
568	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
569	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
570	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	234	None	replace
571	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  not  a  statement	234	None	replace
572	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  class  or  interface  expected	234	None	replace
573	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	93	None	replace
574	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  URL_SAFE_ENCODE_TABLE;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  URL_SAFE_ENCODE_TABLE;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
575	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
576	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
577	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	93	None	replace
578	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  |  urlSafe;  [CE]  illegal  start  of  type  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  |  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR  |  urlSafe;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
579	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Math.max(lineLength,  lineSeparator.length)];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	93	None	replace
580	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  urlSafe;  [CE]  illegal  start  of  type  [FE]                                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  UUID_SEPARATOR  :  urlSafe;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
581	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  System.arraycopy(CHUNK_  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  System.arraycopy(CHUNK_	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_    	non-compiled	[CE]  not  a  statement	51	None	replace
582	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
583	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
584	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
585	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
586	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[this.urlSafe.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
587	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
588	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
589	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength];  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  class  or  interface  expected	90	None	replace
590	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ").toByteArray();  [CE]  class  or  interface  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "file.separator ").toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "file.separator ").toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
591	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ").toByteArray();  [CE]  class  or  interface  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlSafe ").toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.urlSafe ").toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
592	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ").toByteArray();  [CE]  class  or  interface  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "os.urlSafe ").toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "os.urlSafe ").toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
593	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toByteArray());  [CE]  class  or  interface  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toByteArray());  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ".toByteArray());	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
594	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")+  lineSeparator.toByteArray();  [CE]  class  or  interface  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")+  lineSeparator.toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")+  lineSeparator.toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
595	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlsafe ").toByteArray();  [CE]  ')'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.urlsafe ").toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.urlsafe ").toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  ')'  expected	245	None	replace
596	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toBytes();  [CE]  class  or  interface  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toBytes();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toBytes();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  class  or  interface  expected	245	None	replace
597	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toByteArray();  [CE]  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ".toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ".toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  	245	None	replace
598	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	68	None	replace
599	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	68	None	replace
600	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	68	None	replace
601	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSeparator,  0,  urlSafe);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	68	None	replace
602	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	68	None	replace
603	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  2);  [CE]  class  or  interface  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  2);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	169	None	replace
604	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  class  or  interface  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  +  1);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	169	None	replace
605	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);  }  [CE]  class  or  interface  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	169	None	replace
606	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [CE]  class  or  interface  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	169	None	replace
607	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	169	None	replace
608	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
609	[BUG]  [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  CHUNK_SEPARATOR;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
610	[BUG]  [BUGGY]  urlSafe  =  eof  URL_SAFE_ENCODE_TABLE;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  URL_SAFE_ENCODE_TABLE;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
611	[BUG]  [BUGGY]  this.urlSafe  =  eof  urlSafe;  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  eof  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  eof  urlSafe;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  	221	None	replace
612	[BUG]  [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR  |  eof  urlSafe;  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR  |  eof  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  CHUNK_SEPARATOR  |  eof  urlSafe;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  	221	None	replace
613	[BUG]  [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR  +  lineSeparator.length;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR  +  lineSeparator.length;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  CHUNK_SEPARATOR  +  lineSeparator.length;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
614	[BUG]  [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR.toByteArray();  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  CHUNK_SEPARATOR.toByteArray();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  CHUNK_SEPARATOR.toByteArray();	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
615	[BUG]  [BUGGY]  urlSafe  =  eof  HIDE_ENCODE_TABLE;  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  HIDE_ENCODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  HIDE_ENCODE_TABLE;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
616	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineSeparator.length);  [CE]  class  or  interface  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  class  or  interface  expected	102	None	replace
617	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  urlSafe);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.separator,  0,  urlSafe);	  System.arraycopy(this.urlSafe,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	263	None	replace
618	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe.length);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	263	None	replace
619	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
620	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [CE]  class  or  interface  expected  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.urlSafe);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  class  or  interface  expected	134	None	replace
621	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [CE]  class  or  interface  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  class  or  interface  expected	134	None	replace
622	[BUG]  [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.urlSafe);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  ')'  expected	134	None	replace
623	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.urlSafe);  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.urlSafe);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  class  or  interface  expected	134	None	replace
624	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);  [CE]  class  or  interface  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.encodeSize);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  class  or  interface  expected	134	None	replace
625	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;  }	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	202	None	replace
626	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;  }	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	202	None	replace
627	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe.length);	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ')'  expected	202	None	replace
628	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(0,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
629	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
630	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	225	None	replace
631	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	225	None	replace
632	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	225	None	replace
633	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	225	None	replace
634	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	225	None	replace
635	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	225	None	replace
636	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
637	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe));  [CE]  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe));  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe));	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  	128	None	replace
638	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
639	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
640	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2  +  1;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2  +  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2  +  1;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
641	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  3;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
642	[BUG]  [BUGGY]  this.lineLength  =  lineLength  *  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  *  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  *  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
643	[BUG]  [BUGGY]  this.lineLength  -=  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineLength  /  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
644	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  4;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  4;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
645	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2  +  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
646	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2  *  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2  *  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2  *  4;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	126	None	replace
647	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.separator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
648	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  +  1;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  +  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  +  1;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
649	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  1;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  -  1;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
650	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  +  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  +  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  +  lineSeparator.length;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
651	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  1000;  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  1000;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  /  1000;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
652	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  2;  [CE]  class  or  interface  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  2;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  /  2;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  class  or  interface  expected	164	None	replace
653	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator.length;  [CE]  class  or  interface  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator.length;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  class  or  interface  expected	164	None	replace
654	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  10000;  [CE]  ')'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  /  10000;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  /  10000;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  ')'  expected	164	None	replace
655	[BUG]  [BUGGY]  byte  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	238	None	replace
656	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	238	None	replace
657	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	238	None	replace
658	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	238	None	replace
659	[BUG]  [BUGGY]  short  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  short  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	short  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	238	None	replace
660	[BUG]  [BUGGY]  int  lineLength  =  1;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  1;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  1;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	238	None	replace
661	[BUG]  [BUGGY]  int  lineLength  =  urlSafe;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	238	None	replace
662	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
663	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
664	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
665	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
666	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
667	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
668	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
669	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
670	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
671	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  4  +  1)*  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    6)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
672	[BUG]  [BUGGY]  safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
673	[BUG]  [BUGGY]  safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
674	[BUG]  [BUGGY]  safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
675	[BUG]  [BUGGY]  safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
676	[BUG]  [BUGGY]  safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
677	[BUG]  [BUGGY]  safeInput())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeInput())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeInput())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  	201	None	replace
678	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
679	[BUG]  [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
680	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
681	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	185	None	replace
682	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
683	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
684	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
685	[BUG]  [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(sep,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
686	[BUG]  [BUGGY]  System.arraycopy(text,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(text,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(text,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(sep,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
687	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  lineSeparator.length);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
688	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  lineLength);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
689	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
690	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  this.lineLength);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
691	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.separator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  this.separator.length);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
692	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.separator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.separator,  0,  this.urlSafe);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
693	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
694	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
695	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
696	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
697	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
698	[BUG]  [BUGGY]  System.arraycopy(this.url,  0,  this.urlSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.url,  0,  this.urlSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.url,  0,  this.urlSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
699	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
700	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  +  1);  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineSeparator.length  +  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
701	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
702	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
703	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
704	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
705	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
706	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.line,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
707	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
708	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
709	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineLength,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineLength,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineLength,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
710	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineBuffer,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineBuffer,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineBuffer,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
711	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
712	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  2);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  2);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
713	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  +  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
714	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
715	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  &&  urlSeparator;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  &&  urlSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  &&  urlSeparator;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
716	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSeparator  :  null;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSeparator  :  null;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?(byte[])urlSeparator  :  null;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
717	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?  Boolean.TRUE  :  Boolean.FALSE;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?  Boolean.TRUE  :  Boolean.FALSE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||(urlSafe  instanceof  byte[])?  Boolean.TRUE  :  Boolean.FALSE;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
718	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
719	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  this.urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
720	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
721	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
722	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
723	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
724	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
725	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
726	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
727	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
728	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineLength);  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineLength);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
729	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineSeparator,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
730	[BUG]  [BUGGY]  ((  byte[])this.buffer).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [CE]  ')'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.buffer).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.buffer).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  ')'  expected	143	None	replace
731	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
732	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength  -  1);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  lineLength  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  ')'  expected	174	None	replace
733	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  2);  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  -  2);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  ')'  expected	174	None	replace
734	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
735	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  +  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	7	None	replace
736	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	249	None	replace
737	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	249	None	replace
738	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  not  a  statement	249	None	replace
739	[BUG]  [BUGGY]  ((  CHUNK_SEPARATOR)eof).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  CHUNK_SEPARATOR)eof).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  CHUNK_SEPARATOR)eof).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  ')'  expected	249	None	replace
740	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  0,  this.lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
741	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.line,  0,  this.lineLength);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.line,  0,  this.lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.line,  0,  this.lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ')'  expected	157	None	replace
742	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength  +  lineSeparator.length);  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength  +  lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength  +  lineSeparator.length);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ')'  expected	157	None	replace
743	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  this.lineLength);  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  this.lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  this.lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ')'  expected	157	None	replace
744	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ')'  expected	157	None	replace
745	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
746	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.line);  [CE]  ')'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.line);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.line);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ')'  expected	157	None	replace
747	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
748	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  not  a  statement	23	None	replace
749	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  not  a  statement	23	None	replace
750	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	259	None	replace
751	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	259	None	replace
752	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	259	None	replace
753	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	259	None	replace
754	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  not  a  statement	259	None	replace
755	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
756	[BUG]  [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
757	[BUG]  [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
758	[BUG]  [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
759	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
760	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
761	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
762	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
763	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  not  a  statement  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
764	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
765	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  not  a  statement  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
766	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  lineSeparator.length;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  lineSeparator.length;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ')'  expected	160	None	replace
767	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  |  urlSafe;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  |  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE  |  urlSafe;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ')'  expected	160	None	replace
768	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  urlSafe;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE  +  urlSafe;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
769	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE];  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE];	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  type	160	None	replace
770	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  &&  urlSafe;  [CE]  ')'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  &&  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE  &&  urlSafe;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ')'  expected	160	None	replace
771	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE,  urlSafe;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE,  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE,  urlSafe;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ';'  expected	160	None	replace
772	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  URL_SAFE_ENCODE_TABLE;  [CE]  ')'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  URL_SAFE_ENCODE_TABLE;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ')'  expected	160	None	replace
773	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineSeparator.length);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
774	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	14	None	replace
775	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.lineLength);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  this.lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	14	None	replace
776	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  urlSafe.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
777	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
778	[BUG]  [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
779	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	215	None	replace
780	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
781	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
782	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  loop-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
783	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	215	None	replace
784	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	258	None	replace
785	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	258	None	replace
786	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	258	None	replace
787	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	258	None	replace
788	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineSeparator.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
789	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
790	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
791	[BUG]  [BUGGY]  System.arraycopy(STANDARD_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(STANDARD_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(STANDARD_ENCODE_TABLE,  0,  this.buffer,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
792	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
793	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
794	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
795	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
796	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  ')'  expected	130	None	replace
797	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
798	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
799	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  lineSeparator);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  this.lineSeparator,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	130	None	replace
800	[BUG]  [BUGGY]  System.arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	48	None	replace
801	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.sep,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
802	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lines,  0,  lineLength);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lines,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lines,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	48	None	replace
803	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	173	None	replace
804	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  ')'  expected	173	None	replace
805	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.bufferLength);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.bufferLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.bufferLength);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  ')'  expected	173	None	replace
806	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.buffer.length);  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.buffer.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.buffer.length);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  ')'  expected	173	None	replace
807	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	1	None	replace
808	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
809	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
810	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	232	None	replace
811	[BUG]  [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
812	[BUG]  [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
813	[BUG]  [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
814	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  -  1)?  0  :  0;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  -  1)?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  -  1)?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
815	[BUG]  [BUGGY]  int  lineLength  =  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  urlSafe);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
816	[BUG]  [BUGGY]  int  lineLength  =  this.urlSafe;  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  this.urlSafe;	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
817	[BUG]  [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator);  [CE]  ')'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.identityHashCode(lineSeparator);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
818	[BUG]  [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator,  0,  lineSeparator.length);  [CE]  ')'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.identityHashCode(lineSeparator,  0,  lineSeparator.length);	  int    lineLength    =    0;    	non-compiled	[CE]  ')'  expected	177	None	replace
819	[BUG]  [BUGGY]  System.arraycopy(URLSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URLSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URLSafe,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	257	None	replace
820	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	257	None	replace
821	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  2);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  2);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	113	None	replace
822	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  3);  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  3);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	113	None	replace
823	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  4);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  4);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	113	None	replace
824	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  6);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  6);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  6);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	113	None	replace
825	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  lineSeparator.length);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	110	None	replace
826	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  ')'  expected	110	None	replace
827	[BUG]  [BUGGY]  System.arraycopy(LineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(LineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(LineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(sourceSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	35	None	replace
828	[BUG]  [BUGGY]  this.lineSeparator  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  long    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	179	None	replace
829	[BUG]  [BUGGY]  long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	long  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  long    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	179	None	replace
830	[BUG]  [BUGGY]  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	82	None	replace
831	[BUG]  [BUGGY]  System.arraycopy(this.LINESEparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINESEparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINESEparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	82	None	replace
832	[BUG]  [BUGGY]  System.arraycopy(this.LineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LineSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	82	None	replace
833	[BUG]  [BUGGY]  System.arraycopy(this.LINES,  0,  this.lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINES,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINES,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	82	None	replace
834	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
835	[BUG]  [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
836	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  not  a  statement	142	None	replace
837	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
838	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
839	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  1;  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  1;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
840	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
841	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  1;  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  1;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
842	[BUG]  [BUGGY]  this.lineLength  =  lineLength  -  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  -  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  -  2;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
843	[BUG]  [BUGGY]  this.lineLength  -=  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
844	[BUG]  [BUGGY]  this.lineLength  =  lineLength  *  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  *  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  *  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ')'  expected	124	None	replace
845	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	190	None	replace
846	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  this.urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	190	None	replace
847	[BUG]  [BUGGY]  ||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  fileLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
848	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
849	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
850	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  else  {  System.arraycopy(this.line	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	77	None	replace
851	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  safe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
852	[BUG]  [BUGGY]  this.lineLength  -=  4;  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  4;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
853	[BUG]  [BUGGY]  this.lineLength  -=  1;  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  1;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
854	[BUG]  [BUGGY]  this.lineLength  -=  2;  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  2;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  2;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
855	[BUG]  [BUGGY]  this.lineLength  -=  3;  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  3;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  3;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
856	[BUG]  [BUGGY]  this.lineLength  -=  5;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  5;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  5;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
857	[BUG]  [BUGGY]  this.lineLength  -=  6;  [CE]  ')'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  6;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  6;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
858	[BUG]  [BUGGY]  this.lineLength  -=  8;  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  8;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  8;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
859	[BUG]  [BUGGY]  this.lineLength  -=  10;  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  10;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  10;	  this.lineLength    -=    0;    	non-compiled	[CE]  ')'  expected	98	None	replace
860	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
861	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
862	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
863	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.lineSeparator.length);  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
864	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.line  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.line  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.line	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
865	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineS  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
866	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  ')'  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
867	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  ')'  expected  [FE]                          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
868	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator  [CE]  ')'  expected  [FE]                            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
869	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  lineLength);  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineseparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	267	None	replace
870	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineseparator,  0,  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineseparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	267	None	replace
871	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator  /  2)*  4  :  0;  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator  /  2)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator  /  2)*  4  :  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    2)*    4    :    0;    }    	non-compiled	[CE]  ')'  expected	262	None	replace
872	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator  /  4)*  4  :  0;  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineSeparator  /  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineSeparator  /  4)*  4  :  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    2)*    4    :    0;    }    	non-compiled	[CE]  ')'  expected	262	None	replace
873	[BUG]  [BUGGY]  safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
874	[BUG]  [BUGGY]  safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe(urlSafe))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
875	[BUG]  [BUGGY]  safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
876	[BUG]  [BUGGY]  safe())  {  lineLength  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe())  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe())  {  lineLength  =  0;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
877	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
878	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
879	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
880	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
881	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  ')'  expected	104	None	replace
882	[BUG]  [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  not  a  statement	104	None	replace
883	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	104	None	replace
884	[BUG]  [BUGGY]  int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  class  or  interface  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  class  or  interface  expected	104	None	replace
885	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length  +  1);  [CE]  ')'  expected  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length  +  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	216	None	replace
886	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  class  or  interface  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  class  or  interface  expected	216	None	replace
887	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSize.length);  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSize.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSize.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	216	None	replace
888	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  this.lineSeparator.length);  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  class  or  interface  expected	216	None	replace
889	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  3);  [CE]  class  or  interface  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  3);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	135	None	replace
890	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  4);  [CE]  class  or  interface  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  4);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	135	None	replace
891	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  6);  [CE]  class  or  interface  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  6);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  6);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  class  or  interface  expected	135	None	replace
892	[BUG]  [BUGGY]  byte  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	176	None	replace
893	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  0  :  0;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	176	None	replace
894	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  class  or  interface  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	176	None	replace
895	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  0  :  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
896	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  case,  default,  or  '}'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  case,  default,  or  '}'  expected	176	None	replace
897	[BUG]  [BUGGY]  Integer  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  case,  default,  or  '}'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  case,  default,  or  '}'  expected	176	None	replace
898	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  [CE]  case,  default,  or  '}'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  case,  default,  or  '}'  expected	176	None	replace
899	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  1];  [CE]  case,  default,  or  '}'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  1];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  case,  default,  or  '}'  expected	89	None	replace
900	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  *  4];  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  *  4];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  *  4];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  ')'  expected	89	None	replace
901	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  4];  [CE]  ')'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  4];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  4];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  ')'  expected	89	None	replace
902	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  3];  [CE]  case,  default,  or  '}'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  3];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  3];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  case,  default,  or  '}'  expected	89	None	replace
903	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  2];  [CE]  ')'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  2];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  ')'  expected	89	None	replace
904	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  *  2];  [CE]  ')'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  *  2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  *  2];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  ')'  expected	89	None	replace
905	[BUG]  [BUGGY]  System.arraycopy(this.url_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.url_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.url_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	233	None	replace
906	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	233	None	replace
907	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	158	None	replace
908	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  ')'  expected	231	None	replace
909	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  [CE]  ')'  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  ')'  expected	231	None	replace
910	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  ')'  expected	231	None	replace
911	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  1,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  1,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  1,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  class  or  interface  expected	231	None	replace
912	[BUG]  [BUGGY]  if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	189	None	replace
913	[BUG]  [BUGGY]  if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  case,  default,  or  '}'  expected	189	None	replace
914	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  case,  default,  or  '}'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	75	None	replace
915	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  case,  default,  or  '}'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	75	None	replace
916	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.separator.length);  [CE]  case,  default,  or  '}'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	75	None	replace
917	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator.length);  [CE]  case,  default,  or  '}'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	75	None	replace
918	[BUG]  [BUGGY]  if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
919	[BUG]  [BUGGY]  if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
920	[BUG]  [BUGGY]  if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
921	[BUG]  [BUGGY]  if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  if(!eof  urlSafe)  {  lineLength  =  0;  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
922	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }  [CE]  case,  default,  or  '}'  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  case,  default,  or  '}'  expected	168	None	replace
923	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }  [CE]  case,  default,  or  '}'  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  case,  default,  or  '}'  expected	168	None	replace
924	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  lineLength);  }  [CE]  case,  default,  or  '}'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  case,  default,  or  '}'  expected	168	None	replace
925	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	18	None	replace
926	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);  [CE]  case,  default,  or  '}'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	18	None	replace
927	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  case,  default,  or  '}'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	18	None	replace
928	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  1;  [CE]  case,  default,  or  '}'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  1;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  case,  default,  or  '}'  expected	96	None	replace
929	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length;  [CE]  case,  default,  or  '}'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  case,  default,  or  '}'  expected	96	None	replace
930	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  4;  [CE]  orphaned  case  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  4;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  orphaned  case	96	None	replace
931	[BUG]  [BUGGY]  this.lineLength  =  lineLength  +  2;  [CE]  case,  default,  or  '}'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  +  2;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  +  2;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  case,  default,  or  '}'  expected	96	None	replace
932	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_LENGTH];  [CE]  case,  default,  or  '}'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_LENGTH];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_LENGTH];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  case,  default,  or  '}'  expected	94	None	replace
933	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LineLength];  [CE]  case,  default,  or  '}'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LineLength];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LineLength];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  case,  default,  or  '}'  expected	94	None	replace
934	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[Length  +  1];  [CE]  orphaned  case  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[Length  +  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[Length  +  1];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  orphaned  case	94	None	replace
935	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR];  [CE]  case,  default,  or  '}'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_SEPARATOR];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  case,  default,  or  '}'  expected	94	None	replace
936	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LineSeparator.length];  [CE]  case,  default,  or  '}'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LineSeparator.length];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LineSeparator.length];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  case,  default,  or  '}'  expected	94	None	replace
937	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  case,  default,  or  '}'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	33	None	replace
938	[BUG]  [BUGGY]  this.urlSafe  |=  lineSeparator;  [CE]  case,  default,  or  '}'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  lineSeparator;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	replace
939	[BUG]  [BUGGY]  this.urlSafe  &=  urlSafe;  [CE]  case,  default,  or  '}'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  &=  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  &=  urlSafe;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	replace
940	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe  +  1;  [CE]  orphaned  case  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe  +  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe  +  1;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  orphaned  case	92	None	replace
941	[BUG]  [BUGGY]  this.urlSafe  |=  urlSeparator;  [CE]  case,  default,  or  '}'  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSeparator;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	replace
942	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe.toByteArray();  [CE]  case,  default,  or  '}'  expected  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe.toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe.toByteArray();	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  case,  default,  or  '}'  expected	92	None	replace
943	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe,  eof  urlSafe;  [CE]  ';'  expected  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe,  eof  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe,  eof  urlSafe;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  ';'  expected	92	None	replace
944	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe,  eof;  [CE]  ';'  expected  [FE]                                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe,  eof;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe,  eof;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  ';'  expected	92	None	replace
945	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe,  lineSeparator;  [CE]  ';'  expected  [FE]                                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe,  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe,  lineSeparator;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  ';'  expected	92	None	replace
946	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	49	None	replace
947	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
948	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
949	[BUG]  [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
950	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
951	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
952	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
953	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.lineLength);  [CE]  case,  default,  or  '}'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  this.lineLength);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  case,  default,  or  '}'  expected	8	None	replace
954	[BUG]  [BUGGY]  safe)  {  lineLength  >  0;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  not  a  statement	222	None	replace
955	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  >  0;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  not  a  statement	222	None	replace
956	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  >  0;  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
957	[BUG]  [BUGGY]  (lineLength  >  0)||  urlSafe)  {  lineLength  >  0;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  (lineLength  >  0)||  urlSafe)  {  lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	(lineLength  >  0)||  urlSafe)  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  not  a  statement	222	None	replace
958	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);  [CE]  case,  default,  or  '}'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  case,  default,  or  '}'  expected	20	None	replace
959	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);  [CE]  orphaned  case  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length  +  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  orphaned  case	20	None	replace
960	[BUG]  [BUGGY]  System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  orphaned  case  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(ChUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  orphaned  case	20	None	replace
961	[BUG]  [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  orphaned  case  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  orphaned  case	20	None	replace
962	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);  [CE]  orphaned  case  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  +  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  orphaned  case	136	None	replace
963	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  4);  [CE]  orphaned  case  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  4);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  4);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  orphaned  case	136	None	replace
964	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  3);  [CE]  orphaned  case  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  3);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  3);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  orphaned  case	136	None	replace
965	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);  [CE]  orphaned  case  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  orphaned  case	136	None	replace
966	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this    	non-compiled	[CE]  not  a  statement	25	None	replace
967	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
968	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
969	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPA  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPA  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPA	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
970	[BUG]  [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  CHUNK_SEPARATOR)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
971	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  orphaned  case  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  orphaned  case	200	None	replace
972	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [CE]  orphaned  case  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  orphaned  case	8	None	replace
973	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  class  or  interface  expected	207	None	replace
974	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  not  a  statement	120	None	replace
975	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  class  or  interface  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	213	None	replace
976	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  null;  [CE]  class  or  interface  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  null;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	213	None	replace
977	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  class  or  interface  expected	49	None	replace
978	[BUG]  [BUGGY]  byte  lineLength  =  0;  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;	  byte    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	103	None	replace
979	[BUG]  [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.currentTimeMillis();  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.currentTimeMillis();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.currentTimeMillis();	  byte    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	103	None	replace
980	[BUG]  [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	195	None	replace
981	[BUG]  [BUGGY]  if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  class  or  interface  expected	195	None	replace
982	[BUG]  [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	195	None	replace
983	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  %  4)*  4  :  0;  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  %  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  %  4)*  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    %    4)*    4    :    0;    	non-compiled	[CE]  class  or  interface  expected	154	None	replace
984	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  lineLength);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.buffer,  0,  lineLength);	  System.arraycopy(lineSeparator,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	172	None	replace
985	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0;//  disable  block-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  int    lineLength    =    0;//    disable    block-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	238	None	replace
986	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineSeparator);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	233	None	replace
987	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
988	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	233	None	replace
989	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	1	None	replace
990	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	1	None	replace
991	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  class  or  interface  expected	1	None	replace
992	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	208	None	replace
993	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
994	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  not  a  statement	115	None	replace
995	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	115	None	replace
996	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlLength);  [CE]  invalid  method  declaration;  return  type  required  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlLength);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	171	None	replace
997	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSeparator.length);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSeparator,  0,  this.urlSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  class  or  interface  expected	171	None	replace
998	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
999	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  1);  [CE]  invalid  method  declaration;  return  type  required  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	206	None	replace
1000	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
1001	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINELength];  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINELength];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINELength];	  this.urlSafe    =    new    byte[Length];    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
1002	[BUG]  [BUGGY]  ((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  >  0;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  not  a  statement	222	None	replace
1003	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);  [CE]  invalid  method  declaration;  return  type  required  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.sep,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	222	None	replace
1004	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  0;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1005	[BUG]  [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  1;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  1;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1006	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1007	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	42	None	replace
1008	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  2);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  *  2);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1009	[BUG]  [BUGGY]  int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
1010	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	119	None	replace
1011	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	119	None	replace
1012	[BUG]  [BUGGY]  ((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.urlSafe).arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1013	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	259	None	replace
1014	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1015	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  urlSafe;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  urlSafe;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  urlSafe;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1016	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_ENCODE_TABLE;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_ENCODE_TABLE;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_ENCODE_TABLE;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1017	[BUG]  [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(urlSafe);	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
1018	[BUG]  [BUGGY]  urlSafe  =!(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!(urlSafe  instanceof  byte[])?(byte[])urlSafe  :  null;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
1019	[BUG]  [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.isEmpty();  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.isEmpty();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!URL_SAFE_ENCODE_TABLE.isEmpty();	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
1020	[BUG]  [BUGGY]  urlSafe  =  eof  CHUNK_ENCODE_TABLE;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  CHUNK_ENCODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  CHUNK_ENCODE_TABLE;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
1021	[BUG]  [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!URL_SAFE_ENCODE_TABLE.equals(this.urlSafe);	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
1022	[BUG]  [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.contains(urlSafe);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =!URL_SAFE_ENCODE_TABLE.contains(urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =!URL_SAFE_ENCODE_TABLE.contains(urlSafe);	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	221	None	replace
1023	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1024	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  ';'  expected	249	None	replace
1025	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  type	249	None	replace
1026	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
1027	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	118	None	replace
1028	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1029	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  else  {  System.arra  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  else  {  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  else  {  System.arra	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1030	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1031	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_    	non-compiled	[CE]  not  a  statement	51	None	replace
1032	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  fileLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  fileLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  fileLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    fileLength);    	non-compiled	[CE]  illegal  start  of  expression	265	None	replace
1033	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.bufferLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.bufferLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.bufferLength);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1034	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  lineSeparator);	  System.arraycopy(this.buffer,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
1035	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.sep,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.sep,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.sep,  0,  urlSafe);	  System.arraycopy(this.sep,    0,    this.sep,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
1036	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1037	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1038	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  URL_SAFE_ENCODE_TABLE);	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  ';'  expected	160	None	replace
1039	[BUG]  [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =(urlSafe  ||  urlSafe)?  URL_SAFE_ENCODE_TABLE  :  DEFAULT_BUFFER_RESIZE_FACTOR;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1040	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arra  [CE]  not  a  statement  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arra  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arra	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  not  a  statement	79	None	replace
1041	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1042	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  CHUNK_SEPARATOR,  0,  lineLength);  }  [CE]  <identifier>  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  CHUNK_SEPARATOR,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(CHUNK_SEPARATOR,  0,  CHUNK_SEPARATOR,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1043	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  urlSafe-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  urlSafe-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  urlSafe-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1044	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1045	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1046	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1047	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[this.urlSafe.length];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[this.urlSafe.length];	  this.urlSafe    =    new    byte[lineSeparator.length];    	non-compiled	[CE]  illegal  start  of  expression	161	None	replace
1048	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1049	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1050	[BUG]  [BUGGY]  safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeArray())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1051	[BUG]  [BUGGY]  safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1052	[BUG]  [BUGGY]  safeInternal())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeInternal())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeInternal())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1053	[BUG]  [BUGGY]  safeInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1054	[BUG]  [BUGGY]  safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1055	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	2	None	replace
1056	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1057	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1058	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
1059	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1060	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength  -  this.urlSafe);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineLength  -  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  <identifier>  expected	111	None	replace
1061	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlLength);  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSeparator,  0,  this.urlLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1062	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1063	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [CE]  <identifier>  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  <identifier>  expected	228	None	replace
1064	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [CE]  ')'  expected  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	228	None	replace
1065	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1066	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1067	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  CHUNK_SEPARATOR);  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  CHUNK_SEPARATOR);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  CHUNK_SEPARATOR);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1068	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.chUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.chUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.chUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1069	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlEncoding);  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlEncoding);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlEncoding);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1070	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';');  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1071	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
1072	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  illegal  start  of  expression	181	None	replace
1073	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSelected);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSelected);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSelected);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1074	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';'  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';'  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  +  ';'	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	181	None	replace
1075	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1076	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  fileSeparator;  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  fileSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  fileSeparator;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1077	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  this.urlSeparator;  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  this.urlSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  this.urlSeparator;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1078	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  &&  urlSeparator);  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||(urlSafe  &&  urlSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||(urlSafe  &&  urlSeparator);	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1079	[BUG]  [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").booleanValue();  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").booleanValue();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.getProperty( "line.separator ").booleanValue();	  urlSafe    =    0;    	non-compiled	[CE]  <identifier>  expected	219	None	replace
1080	[BUG]  [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").toByteArray();  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").toByteArray();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.getProperty( "line.separator ").toByteArray();	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1081	[BUG]  [BUGGY]  urlSafe  =  this.urlSafe;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  this.urlSafe;	  urlSafe    =    0;    	non-compiled	[CE]  <identifier>  expected	219	None	replace
1082	[BUG]  [BUGGY]  urlSafe  =  System.getProperty( "line.separator ", " ")!=  null;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.getProperty( "line.separator ", " ")!=  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.getProperty( "line.separator ", " ")!=  null;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1083	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1084	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1085	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  this.lineSeparator.length);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	216	None	replace
1086	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1087	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength  +  1);	  System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
1088	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
1089	[BUG]  [BUGGY]  eof  URLSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  URLSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  URLSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
1090	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
1091	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
1092	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  System.identityHashCode(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  System.identityHashCode(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  System.identityHashCode(lineSeparator);	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1093	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?  (lineSeparator.length  /  4)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?  (lineSeparator.length  /  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?  (lineSeparator.length  /  4)*  4  :  0;	  this.lineLength    =    lineLength    >    0?    (lineSeparator.length    /    4)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
1094	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  this.lineLength,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1095	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlEncoding);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlEncoding);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlEncoding);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1096	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlLength);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1097	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlSafe);    }    	non-compiled	[CE]  ')'  expected	237	None	replace
1098	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  lineSeparator,  0,  this.urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	237	None	replace
1099	[BUG]  [BUGGY]  this.lineLength  =  lineLength;//  disable  url-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength;//  disable  url-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength;//  disable  url-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1100	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineSeparator;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1101	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")!toByteArray();  [CE]  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")!toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")!toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  	245	None	replace
1102	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toByteArray();  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toByteArray();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ",  urlSafe).toByteArray();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1103	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSeparator,  0,  this.urlSafe);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
1104	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this    	non-compiled	[CE]  not  a  statement	25	None	replace
1105	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1106	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1107	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1108	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.currentTimeMillis();  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.currentTimeMillis();  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.currentTimeMillis();  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1109	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  JSON_SEPARATOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  JSON_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  JSON_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1110	[BUG]  [BUGGY]  this.lineSeparator  =  System.identityHashCode(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  System.identityHashCode(lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  System.identityHashCode(lineSeparator);	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1111	[BUG]  [BUGGY]  this.lineSeparator  =  System.identityHashCode(this.lineSeparator);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  System.identityHashCode(this.lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  System.identityHashCode(this.lineSeparator);	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  type	204	None	replace
1112	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  ')'  expected	198	None	replace
1113	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1114	[BUG]  [BUGGY]  this.lineLength  =  urlSafe?  0  :  lineLength  /  2;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe?  0  :  lineLength  /  2;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe?  0  :  lineLength  /  2;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1115	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2  *  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2  *  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2  *  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1116	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  3;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  3;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  3;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1117	[BUG]  [BUGGY]  this.lineLength  =  lineLength  /  2  +  4;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  /  2  +  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  /  2  +  4;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1118	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  4)*  4  :  0);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  4)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  4)*  4  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
1119	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  not  a  statement	24	None	replace
1120	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
1121	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  not  a  statement	24	None	replace
1122	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  type	205	None	replace
1123	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  1;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  ';'  expected	205	None	replace
1124	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  lineLength  =  0;	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1125	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	203	None	replace
1126	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  this.lineLength);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  this.lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  this.lineLength);	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  class  or  interface  expected	203	None	replace
1127	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  <  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	127	None	replace
1128	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1129	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1130	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF8();  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF8();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toUTF8();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  type	247	None	replace
1131	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toURI();  [CE]  class  or  interface  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toURI();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toURI();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  class  or  interface  expected	247	None	replace
1132	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF8);  [CE]  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF8);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toUTF8);	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  	247	None	replace
1133	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();  [CE]  <identifier>  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toUpperCase();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  <identifier>  expected	247	None	replace
1134	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF-8;  [CE]  class  or  interface  expected  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toUTF-8;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toUTF-8;	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  class  or  interface  expected	247	None	replace
1135	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator);  [CE]  class  or  interface  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  lineSeparator);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator);    	non-compiled	[CE]  class  or  interface  expected	193	None	replace
1136	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator);  [CE]  class  or  interface  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator);    	non-compiled	[CE]  class  or  interface  expected	193	None	replace
1137	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  -  1):  0;  [CE]  class  or  interface  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  -  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  -  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  class  or  interface  expected	97	None	replace
1138	[BUG]  [BUGGY]  this.lineLength  =  lineLength  ==  0?(lineSeparator.length  -  1):  0;  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  ==  0?(lineSeparator.length  -  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  ==  0?(lineSeparator.length  -  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1139	[BUG]  [BUGGY]  ((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  class  or  interface  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])urlSafe).arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  class  or  interface  expected	260	None	replace
1140	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  <identifier>  expected	260	None	replace
1141	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1142	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1143	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1144	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  lineSeparator,  0,  lineLength);  [CE]  class  or  interface  expected  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  class  or  interface  expected	232	None	replace
1145	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  class  or  interface  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  class  or  interface  expected	232	None	replace
1146	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  [CE]  <identifier>  expected  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  <identifier>  expected	232	None	replace
1147	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	232	None	replace
1148	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  <identifier>  expected	149	None	replace
1149	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
1150	[BUG]  [BUGGY]  System.arraycopy(this.url,  0,  lineSeparator,  0,  this.urlLength);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.url,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.url,  0,  lineSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1151	[BUG]  [BUGGY]  System.arraycopy(this.url,  0,  this.lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.url,  0,  this.lineSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.url,  0,  this.lineSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1152	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.lineSeparator,  0,  this.urlLength);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.lineSeparator,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  this.lineSeparator,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1153	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  this.urlLength);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.urlLength);    	non-compiled	[CE]  illegal  start  of  expression	152	None	replace
1154	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  [CE]  '.class'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  '.class'  expected	159	None	replace
1155	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator,  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	159	None	replace
1156	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
1157	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
1158	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineS  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
1159	[BUG]  [BUGGY]  this.lineSeparator  =  DECODE_TABLE;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  DECODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  DECODE_TABLE;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	224	None	replace
1160	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  +  1;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  +  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  +  1;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  <identifier>  expected	224	None	replace
1161	[BUG]  [BUGGY]  this.lineSeparator  =  SHORT_ENCODE_TABLE;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  SHORT_ENCODE_TABLE;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  SHORT_ENCODE_TABLE;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	224	None	replace
1162	[BUG]  [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1163	[BUG]  [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1164	[BUG]  [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	253	None	replace
1165	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
1166	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1167	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLeng  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLeng  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  this.lineLeng	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  not  a  statement	261	None	replace
1168	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1169	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	234	None	replace
1170	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
1171	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  ';'  expected	142	None	replace
1172	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  <identifier>  expected	142	None	replace
1173	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1174	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	138	None	replace
1175	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  +  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
1176	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	196	None	replace
1177	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	196	None	replace
1178	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineS;  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ')'  expected	196	None	replace
1179	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	196	None	replace
1180	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  -  1];  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  -  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  -  1];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1181	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1182	[BUG]  [BUGGY]  safety)  {  lineLength  =  0;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safety)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safety)  {  lineLength  =  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
1183	[BUG]  [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1184	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.urlSeparator.length);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
1185	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  &  File.separatorCharToString(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  &  File.separatorCharToString(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  &  File.separatorCharToString(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
1186	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe?  File.separatorCharToString(lineSeparator):  File.separatorCharToString(lineSeparator);  [CE]  <identifier>  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe?  File.separatorCharToString(lineSeparator):  File.separatorCharToString(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe?  File.separatorCharToString(lineSeparator):  File.separatorCharToString(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  <identifier>  expected	246	None	replace
1187	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  false);  [CE]  <identifier>  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  false);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToString(lineSeparator,  false);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  <identifier>  expected	246	None	replace
1188	[BUG]  [BUGGY]  System.arraycopy(this.fileSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.fileSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.fileSeparator,  0,  lineSeparator,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.fileSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	264	None	replace
1189	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1190	[BUG]  [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineL  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineL  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineL	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1191	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [CE]  <identifier>  expected  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe  -  1);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
1192	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSeparator);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  urlSeparator);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  <identifier>  expected	242	None	replace
1193	[BUG]  [BUGGY]  System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(urlSafe,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(this.lineSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1194	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  -  lineSeparator;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1195	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	225	None	replace
1196	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	225	None	replace
1197	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	225	None	replace
1198	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  System.arraycopy(this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	229	None	replace
1199	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	229	None	replace
1200	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1201	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1202	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineSeparator);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1203	[BUG]  [BUGGY]  int  lineLength  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1204	[BUG]  [BUGGY]  int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe.length;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1205	[BUG]  [BUGGY]  byte  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1206	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1207	[BUG]  [BUGGY]  int  lineLength  =  this.urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  this.urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  this.urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1208	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  int    lineLength    =    urlSafe;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
1209	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  this.separator.length);	  System.arraycopy(this.sep,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	240	None	replace
1210	[BUG]  [BUGGY]  if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
1211	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1212	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1213	[BUG]  [BUGGY]  if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
1214	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
1215	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  url	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
1216	[BUG]  [BUGGY]  safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1217	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1218	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1219	[BUG]  [BUGGY]  safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1220	[BUG]  [BUGGY]  this.lineLength  -=  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineSeparator.length;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineSeparator.length;	  this.lineLength    -=    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1221	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator.length;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1222	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR  +  urlSafe;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1223	[BUG]  [BUGGY]  this.urlSafe  =  urlsafe;  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlsafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlsafe;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1224	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR  +  lineSeparator;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1225	[BUG]  [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  &&  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  UUID_SEPARATOR  &&  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  UUID_SEPARATOR  &&  urlSafe;	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1226	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	266	None	replace
1227	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;  }	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1228	[BUG]  [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  this.urlSafe)  {  lineLength  =  0;  }	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1229	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  System.currentTimeMillis();  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  System.currentTimeMillis();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  System.currentTimeMillis();	  ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	132	None	replace
1230	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    System.arra    	non-compiled	[CE]  illegal  start  of  expression	150	None	replace
1231	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineseSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineseSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineseSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1232	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
1233	[BUG]  [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.sep,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1234	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1235	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.lineSeparator);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.lineSeparator);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1236	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  this.lineLength,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1237	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1238	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlEncoding);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlEncoding);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.lineSeparator,  0,  lineSeparator,  this.urlEncoding);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1239	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  1,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  1,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  1,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	231	None	replace
1240	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	231	None	replace
1241	[BUG]  [BUGGY]  this.lineLength  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1242	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength  +  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
1243	[BUG]  [BUGGY]  eof  URLSafe)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  URLSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  URLSafe)  {  lineLength  =  0;  }	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	202	None	replace
1244	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  0;	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	202	None	replace
1245	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
1246	[BUG]  [BUGGY]  this.lineLength  -=  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1247	[BUG]  [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1248	[BUG]  [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  3;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  3;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  2;//  disable  chunk-separating  lineSeparator  =  3;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	214	None	replace
1249	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	180	None	replace
1250	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.buffer);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1251	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1252	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineLength  -  this.lineSeparator);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1253	[BUG]  [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	182	None	replace
1254	[BUG]  [BUGGY]  if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1255	[BUG]  [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	182	None	replace
1256	[BUG]  [BUGGY]  this.lineLength  =  urlSafe  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1257	[BUG]  [BUGGY]  this.lineLength  =  urlSafe?  0  :  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe?  0  :  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe?  0  :  lineLength  -  1;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1258	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[6];  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[6];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[6];	  this.urlSafe    =    new    byte[0];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
1259	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  1);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
1260	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
1261	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1262	[BUG]  [BUGGY]  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1263	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator,  0,  lineLength);  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1264	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  illegal  start  of  expression	137	None	replace
1265	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  ';');  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  ';');  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  ';');	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1266	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	158	None	replace
1267	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1268	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
1269	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
1270	[BUG]  [BUGGY]  System.arraycopy(this.LINESeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINESeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINESeparator,  0,  lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1271	[BUG]  [BUGGY]  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINESeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1272	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineL  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineL  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  this.lineLength  =  lineLength  >  0?  (lineL	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
1273	[BUG]  [BUGGY]  Null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
1274	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
1275	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  not  a  statement  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
1276	[BUG]  [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Arrays.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	167	None	replace
1277	[BUG]  [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Arrays.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Arrays.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Arrays.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	167	None	replace
1278	[BUG]  [BUGGY]  safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeAccess())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1279	[BUG]  [BUGGY]  safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeToInt())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1280	[BUG]  [BUGGY]  safeMultiply(lineSeparator))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeMultiply(lineSeparator))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeMultiply(lineSeparator))  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1281	[BUG]  [BUGGY]  safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeMultilineChunks())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1282	[BUG]  [BUGGY]  byte[]  lineSeparator,  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  lineSeparator,  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  lineSeparator,  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  <identifier>  expected	254	None	replace
1283	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	254	None	replace
1284	[BUG]  [BUGGY]  byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;  [CE]  ')'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS;	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	254	None	replace
1285	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1286	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe?  true  :  urlSafe  +  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe?  true  :  urlSafe  +  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe?  true  :  urlSafe  +  lineSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1287	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  +  lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
1288	[BUG]  [BUGGY]  this.lineLength  =  0,  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0,  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0,  lineSeparator.length;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  ';'  expected	151	None	replace
1289	[BUG]  [BUGGY]  this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  type	151	None	replace
1290	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1291	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.line,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.line,  0,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.line,  0,  this.urlSafe);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
1292	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1293	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1294	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1295	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  this.line);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  lineSeparator,  this.line);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  lineSeparator,  this.line);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  illegal  start  of  expression	157	None	replace
1296	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1297	[BUG]  [BUGGY]  this.lineLength  =  urlSafe?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe?(lineSeparator.length  -  1):  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
1298	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1299	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1300	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1301	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1302	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1303	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineSeparator.length];  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1304	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[LINE_SEPARATOR.length];  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  type	90	None	replace
1305	[BUG]  [BUGGY]  int  lineLength  =  this.urlSafe?  0  :  0;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  this.urlSafe?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  this.urlSafe?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1306	[BUG]  [BUGGY]  int  lineLength  =  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.currentTimeMillis();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.currentTimeMillis();	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1307	[BUG]  [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  System.identityHashCode(lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  System.identityHashCode(lineSeparator,  0,  urlSafe);	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1308	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  <  2)?  0  :  0;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  <  2)?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  <  2)?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1309	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  <  1)?  0  :  0;  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  <  1)?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  <  1)?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1310	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  >  0)?  0  :  0;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  >  0)?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  >  0)?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  type	177	None	replace
1311	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  *  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  *  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  lineLength  *  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  type	175	None	replace
1312	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	101	None	replace
1313	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	38	None	replace
1314	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1315	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.info,  lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1316	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	140	None	replace
1317	[BUG]  [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  &&  urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	&&  urlSafe)  {  lineLength  =  0;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1318	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  byte[])lineSeparator);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =(int)Math.rint((  byte[])lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =(int)Math.rint((  byte[])lineSeparator);	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1319	[BUG]  [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lines,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(0,    0,    this.lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
1320	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
1321	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	64	None	replace
1322	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineseparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineseparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineseparator,  0,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineseparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	267	None	replace
1323	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1324	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  null;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  ';'  expected	186	None	replace
1325	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  null;  System.arraycopy(lineSeparator,  0,  lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    null;    }    	non-compiled	[CE]  not  a  statement	186	None	replace
1326	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
1327	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;  }  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;  }	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	41	None	replace
1328	[BUG]  [BUGGY]  if(urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	218	None	replace
1329	[BUG]  [BUGGY]  eof  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe  ||  urlSafe)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
1330	[BUG]  [BUGGY]  ((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  urlSafe  &&  urlSafe)!=  0))  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1331	[BUG]  [BUGGY]  urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1332	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  urlSeparator)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	218	None	replace
1333	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	148	None	replace
1334	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1335	[BUG]  [BUGGY]  this.lineLength  =  urlSafe;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1336	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  System.arra	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1337	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1338	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.buffer,  0,  lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1339	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  lineSeparator,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	255	None	replace
1340	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	255	None	replace
1341	[BUG]  [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(SCRIPT_SEPARATOR,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	255	None	replace
1342	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1343	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1344	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  type	258	None	replace
1345	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.sep);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.sep);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  this.sep);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.sep);    	non-compiled	[CE]  illegal  start  of  type	239	None	replace
1346	[BUG]  [BUGGY]  this.lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	121	None	replace
1347	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1348	[BUG]  [BUGGY]  System.arraycopy(URL_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
1349	[BUG]  [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sep,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	257	None	replace
1350	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  6)*  4  :  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  6)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  >  0?(lineSeparator.length  /  6)*  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    6)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  type	153	None	replace
1351	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.lineSeparator);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1352	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  lineSeparator);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	199	None	replace
1353	[BUG]  [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
1354	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "/urlSafe;  [CE]  unclosed  string  literal  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.url ")+ "/urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url ")+ "/urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
1355	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  lineLength);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1356	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength  -  this.urlSafe);  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.lineLength  -  this.urlSafe);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	134	None	replace
1357	[BUG]  [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
1358	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	62	None	replace
1359	[BUG]  [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  safe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
1360	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator.length);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	227	None	replace
1361	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineL  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineL  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineL	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	227	None	replace
1362	[BUG]  [BUGGY]  safeMultiply(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeMultiply(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeMultiply(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1363	[BUG]  [BUGGY]  safeIndex())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeIndex())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeIndex())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1364	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  sepLength);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  sepLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  sepLength);	  System.arraycopy(sep,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
1365	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1366	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.separator.length);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1367	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.separator.length);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1368	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.separator.length);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
1369	[BUG]  [BUGGY]  System.arraycopy(this.lineSafe,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSafe,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSafe,  0,  lineSeparator,  0,  urlSafe);	  System.arraycopy(this.lineSafe,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	212	None	replace
1370	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);  if(urlSafe)  {  System.arraycopy(this.encodeSize,  0,  this.encodeSize);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	226	None	replace
1371	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineL	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	156	None	replace
1372	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	156	None	replace
1373	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLeng	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	156	None	replace
1374	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  null;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1375	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0,  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1376	[BUG]  [BUGGY]  this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1377	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    2)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	262	None	replace
1378	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    2)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  type	262	None	replace
1379	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  this.lineLength  =  lineLength  >  0?  (lineLength  /  2)*  4  :  0;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineLength    =    lineLength    >    0?    (lineLength    /    2)*    4    :    0;    }    	non-compiled	[CE]  illegal  start  of  type	262	None	replace
1380	[BUG]  [BUGGY]  this.urlSafe  |=  HORIZONTAL_URL_SAFE_ENCODE_TABLE;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  HORIZONTAL_URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  HORIZONTAL_URL_SAFE_ENCODE_TABLE;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1381	[BUG]  [BUGGY]  this.urlSafe  |=  URL_SAFE_ENCODE_TABLE;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  URL_SAFE_ENCODE_TABLE;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  URL_SAFE_ENCODE_TABLE;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1382	[BUG]  [BUGGY]  this.urlSafe  |=  HORIZONTAL_URL_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  HORIZONTAL_URL_SEPARATOR;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  HORIZONTAL_URL_SEPARATOR;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1383	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  &  1;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  &  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  &  1;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
1384	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  6;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  6;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  6;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
1385	[BUG]  [BUGGY]  if(eof  urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	189	None	replace
1386	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	189	None	replace
1387	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	189	None	replace
1388	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "URL_SAFE_ENCODE_TABLE.url ");  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "URL_SAFE_ENCODE_TABLE.url ");  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "URL_SAFE_ENCODE_TABLE.url ");	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  type	244	None	replace
1389	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe):  0;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe):  0;	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
1390	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe):  0;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe):  0;	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
1391	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));  this.lineLength  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));  this.lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe));  this.lineLength  =  0;	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	128	None	replace
1392	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  0;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1393	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  this.chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1394	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  URI_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  URI_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  URI_SEPARATOR;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1395	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[urlSafe.length];  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[urlSafe.length];  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[urlSafe.length];	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
1396	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  /  2  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  type	114	None	replace
1397	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1398	[BUG]  [BUGGY]  System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(lineSeparator,  0,  this.urlSafe,  0,  lineSeparator.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
1399	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  lineSeparator.length  -  1);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
1400	[BUG]  [BUGGY]  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1401	[BUG]  [BUGGY]  int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  1;//  disable  chunk-separating  lineSeparator  =  this.urlSafe;	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  type	178	None	replace
1402	[BUG]  [BUGGY]  this.lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1403	[BUG]  [BUGGY]  this.lineLength  =  lineSeparator.length  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineSeparator.length  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineSeparator.length  <  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1404	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >=  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >=  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >=  0?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	133	None	replace
1405	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  lineSeparator,  0,  this.lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  type	250	None	replace
1406	[BUG]  [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	187	None	replace
1407	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  allow  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	187	None	replace
1408	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.lineSeparator,  0,  this.urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
1409	[BUG]  [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(Standard_ENCODE_TABLE,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
1410	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1411	[BUG]  [BUGGY]  System.arraycopy(this.lineEnd,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineEnd,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineEnd,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1412	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.separator,  0,  this.urlSafe);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
1413	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separatorLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separatorLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  lineSeparator,  0,  this.separatorLength);	  System.arraycopy(this.separator,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
1414	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
1415	[BUG]  [BUGGY]  safe)  {  this.lineSeparator  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineSeparator  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineSeparator  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
1416	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_    	non-compiled	[CE]  not  a  statement	51	None	replace
1417	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_    	non-compiled	[CE]  not  a  statement	51	None	replace
1418	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineLength);  }	  if(urlSafe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	185	None	replace
1419	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	180	None	replace
1420	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	180	None	replace
1421	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	180	None	replace
1422	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSeparator);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
1423	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
1424	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
1425	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSafe,  0,  this.urlLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	233	None	replace
1426	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
1427	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ')'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ')'  expected	258	None	replace
1428	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  this.lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  this.lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    this.lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	258	None	replace
1429	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  this.lineLength  =  lineLength;  }	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
1430	[BUG]  [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  null  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator	  null    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	107	None	replace
1431	[BUG]  [BUGGY]  if(urlSafe)  {  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  safe  ||  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe    ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	39	None	replace
1432	[BUG]  [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.sep,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	43	None	replace
1433	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  -=  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  -=  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  -=  0;  }	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	202	None	replace
1434	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  /=  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  /=  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  /=  0;  }	  eof    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	202	None	replace
1435	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineseparator,  0,  urlSafe);  [CE]  ')'  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineseparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineseparator,  0,  urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineseparator,    0,    urlSafe);    	non-compiled	[CE]  ')'  expected	267	None	replace
1436	[BUG]  [BUGGY]  safeTree())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeTree())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeTree())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	2	None	replace
1437	[BUG]  [BUGGY]  safely())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safely())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safely())  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	2	None	replace
1438	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineSeparator	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  ';'  expected	159	None	replace
1439	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    	non-compiled	[CE]  not  a  statement	53	None	replace
1440	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  >  0)?  (lineLength  /  4)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  >  0)?  (lineLength  /  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  >  0)?  (lineLength  /  4)*  4  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1441	[BUG]  [BUGGY]  int  lineLength  =(lineSeparator.length  <  4)?  0  :  0;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =(lineSeparator.length  <  4)?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =(lineSeparator.length  <  4)?  0  :  0;	  int    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	177	None	replace
1442	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  +  1);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  +  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  ')'  expected	169	None	replace
1443	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  lineSeparator.length  :  0;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  lineSeparator.length  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  lineSeparator.length  :  0;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1444	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  lineSeparator.length;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  0  :  lineSeparator.length;	  this.lineLength    =    lineLength;    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
1445	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	235	None	replace
1446	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	235	None	replace
1447	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
1448	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineLength  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineLength	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineS    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1449	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  not  a  statement  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineS    	non-compiled	[CE]  not  a  statement	26	None	replace
1450	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  this.lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.lineS    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
1451	[BUG]  [BUGGY]  urlSafe  ||  this.lineSeparator)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  this.lineSeparator)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  this.lineSeparator)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1452	[BUG]  [BUGGY]  urlSafe  ||  lineSeparator)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  lineSeparator)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  lineSeparator)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1453	[BUG]  [BUGGY]  urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1454	[BUG]  [BUGGY]  urlSafe  ||  this.lineLength  <  0)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  ||  this.lineLength  <  0)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  ||  this.lineLength  <  0)  {  lineLength  =  0;  }	  if(urlSafe    ||    urlSafe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	218	None	replace
1455	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	118	None	replace
1456	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
1457	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
1458	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  line	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
1459	[BUG]  [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
1460	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
1461	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  not  a  statement	138	None	replace
1462	[BUG]  [BUGGY]  if(this.urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1463	[BUG]  [BUGGY]  if(this.urlSafe.length  >  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe.length  >  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe.length  >  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	210	None	replace
1464	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  lineLength  =  0;  }	  if(this.urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	210	None	replace
1465	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	252	None	replace
1466	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	252	None	replace
1467	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ';'  expected	252	None	replace
1468	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  /  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1469	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  type	174	None	replace
1470	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  lineLength  -  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1471	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	174	None	replace
1472	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSafe,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSafe,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSafe,  0,  lineLength);	  System.arraycopy(this.lineSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
1473	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  *  1;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  *  1;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  *  1;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1474	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorChar;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorChar;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
1475	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separator;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separator;	  this.urlSafe    =    urlSafe    +    1;    	non-compiled	[CE]  illegal  start  of  type	163	None	replace
1476	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
1477	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ')'  expected	183	None	replace
1478	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  ';'  expected	183	None	replace
1479	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlLength);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1480	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSeparator);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
1481	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
1482	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1483	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1484	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1485	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  Base64.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    Base64.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
1486	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.buffer,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
1487	[BUG]  [BUGGY]  System.arraycopy(textBuffer,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(textBuffer,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(textBuffer,  0,  this.lineSeparator,  0,  urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
1488	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineSeparator.length);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineSeparator.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
1489	[BUG]  [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.URLSafe,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(this.line,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
1490	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.separator,  0,  urlSafe);	  System.arraycopy(this.separator,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1491	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.separator.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    this.separator.length);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
1492	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1493	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
1494	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  type	259	None	replace
1495	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  1,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  1,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  1,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	259	None	replace
1496	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(this.buffer,    0,    this.urlSafe,    0,    lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
1497	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  not  a  statement	52	None	replace
1498	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  not  a  statement	52	None	replace
1499	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  0;	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	151	None	replace
1500	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  lineLength  /  2  :  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  lineLength  /  2  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  lineLength  /  2  :  0;	  this.lineLength    =    lineLength    /    2;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
1501	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.sepLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.sepLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.sepLength);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
1502	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  1;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1503	[BUG]  [BUGGY]  (lineLength  =  0)||  urlSafe)  {  lineLength  =  1;  }  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  (lineLength  =  0)||  urlSafe)  {  lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	(lineLength  =  0)||  urlSafe)  {  lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1504	[BUG]  [BUGGY]  if(urlSafe  ||  urlSafe)  {  lineLength  =  1;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  urlSafe)  {  lineLength  =  1;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  urlSafe)  {  lineLength  =  1;  }	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1505	[BUG]  [BUGGY]  lineLength  =  1;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  lineLength  =  1;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	lineLength  =  1;	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  illegal  start  of  expression	205	None	replace
1506	[BUG]  [BUGGY]  (lineLength  =  urlSafe)?  1  :  0;  [CE]  not  a  statement  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  (lineLength  =  urlSafe)?  1  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	(lineLength  =  urlSafe)?  1  :  0;	  if(urlSafe)    {    lineLength    =    1;    }    	non-compiled	[CE]  not  a  statement	205	None	replace
1507	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
1508	[BUG]  [BUGGY]  safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	201	None	replace
1509	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1510	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  >  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    <    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
1511	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	251	None	replace
1512	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	251	None	replace
1513	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  System.arra	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    System.arra    	non-compiled	[CE]  not  a  statement	150	None	replace
1514	[BUG]  [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	Integer  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;	  Integer    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	106	None	replace
1515	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineLength  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineLength  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineLength	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    line    	non-compiled	[CE]  ';'  expected	194	None	replace
1516	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  0);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  0);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe?  lineLength  -  1  :  0);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  type	206	None	replace
1517	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe?  lineLength  -  1  :  0);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	206	None	replace
1518	[BUG]  [BUGGY]  ((  byte[])sourceSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])sourceSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])sourceSeparator).arraycopy(this.lineSeparator,  0,  this.lineSeparator,  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.lineSeparator,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
1519	[BUG]  [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  1;//  disable  chunk-separating  lineSeparator  =  urlSafe;	  this.lineLength    -=    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	214	None	replace
1520	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  'else'  without  'if'  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  'else'  without  'if'	195	None	replace
1521	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	195	None	replace
1522	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	79	None	replace
1523	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  1,  lineLength);  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  1,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  1,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
1524	[BUG]  [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sep,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(sep,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
1525	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  type	149	None	replace
1526	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [CE]  'else'  without  'if'  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  'else'  without  'if'	149	None	replace
1527	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToLowerCase(lineSeparator);  [CE]  illegal  start  of  type  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToLowerCase(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToLowerCase(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  type	246	None	replace
1528	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToPos(lineSeparator);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  File.separatorCharToPos(lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  File.separatorCharToPos(lineSeparator);	  this.urlSafe    =    urlSafe    +    File.separatorCharToString(lineSeparator);    	non-compiled	[CE]  illegal  start  of  expression	246	None	replace
1529	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  this.urlSafe);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.buffer,  0,  this.urlSafe);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
1530	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	215	None	replace
1531	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  loop-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    loop-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	215	None	replace
1532	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  *  4  :  0);  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  (lineLength  *  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  (lineLength  *  4  :  0);	  this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    	non-compiled	[CE]  ')'  expected	86	None	replace
1533	[BUG]  [BUGGY]  safe,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe,  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	1	None	replace
1534	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  type	158	None	replace
1535	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
1536	[BUG]  [BUGGY]  int  lineLength  =  urlSafe.length?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  urlSafe.length?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  urlSafe.length?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1537	[BUG]  [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  int  lineLength  =  urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
1538	[BUG]  [BUGGY]  int  lineLength  =  this.urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  this.urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  this.urlSafe?  0  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  int    lineLength    =    urlSafe?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	176	None	replace
1539	[BUG]  [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  +  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.buffer,  0,  this.lineSeparator,  0,  this.lineLength  +  1);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    lineLength    +    1);    	non-compiled	[CE]  illegal  start  of  expression	175	None	replace
1540	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.urlSafe,  0,  this.urlSeparator);	  System.arraycopy(this.urlSafe,    0,    this.urlSafe,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	242	None	replace
1541	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	122	None	replace
1542	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
1543	[BUG]  [BUGGY]  this.lineLength  -=  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineLength;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
1544	[BUG]  [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSeparator,  0,  this.urlSafe,  0,  urlSafe);	  System.arraycopy(this.urlSafe,    0,    this.urlSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
1545	[BUG]  [BUGGY]  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	byte[]  lineSeparator,  boolean  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineS	  boolean    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  <identifier>  expected	254	None	replace
1546	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	229	None	replace
1547	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [CE]  ')'  expected  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
1548	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineS  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineS  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator.length);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineS	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	229	None	replace
1549	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1550	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  ';'  expected	197	None	replace
1551	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  type	197	None	replace
1552	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	197	None	replace
1553	[BUG]  [BUGGY]  this.lineLength  /=  0;  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  /=  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  /=  0;	  this.lineLength    -=    0;    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
1554	[BUG]  [BUGGY]  this.lineLength  *=  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  *=  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  *=  0;	  this.lineLength    -=    0;    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
1555	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  type  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0;//  disable  urlSafe  -  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1556	[BUG]  [BUGGY]  this.lineLength  =  1;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  1;//  disable  urlSafe  -  lineSeparator  =  urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  1;//  disable  urlSafe  -  lineSeparator  =  urlSafe;	  this.lineLength    =    0;//    disable    urlSafe    -    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  type	148	None	replace
1557	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  lineSeparator);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  lineSeparator);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1558	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.urlSeparator);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.urlSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.urlSafe,  0,  lineSeparator,  this.urlSeparator);	  ((    byte[])lineSeparator).arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
1559	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  this.chunkSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  this.chunkSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  this.chunkSeparator  =  CHUNK_SEPARATOR;	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	139	None	replace
1560	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1561	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1562	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  >  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1563	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  <  =  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  <  =  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  <  =  0)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1564	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  ';'  expected	196	None	replace
1565	[BUG]  [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[this.urlSafe];  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[this.urlSafe];  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	int  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  new  byte[this.urlSafe];	  int    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    this.urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	178	None	replace
1566	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  this.urlSafe);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
1567	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[lineLength  /  2];  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[lineLength  /  2];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[lineLength  /  2];	  this.urlSafe    =    new    byte[lineLength];    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
1568	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  &&  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis()  &&  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis()  &&  urlSafe;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
1569	[BUG]  [BUGGY]  this.urlSafe  =  System.currentTimeMillis(),  urlSafe;  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.currentTimeMillis(),  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.currentTimeMillis(),  urlSafe;	  this.urlSafe    =    System.currentTimeMillis();    	non-compiled	[CE]  ';'  expected	164	None	replace
1570	[BUG]  [BUGGY]  System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1571	[BUG]  [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeSize,  0,  this.encodeSize,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1572	[BUG]  [BUGGY]  System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodeBase64,  0,  this.encodeBase64,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSize,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	230	None	replace
1573	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  new  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    new    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	225	None	replace
1574	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  safe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  not  a  statement	120	None	replace
1575	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0;  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  this.lineLength  =  lineLength  >  0?  (lineLength  /  4  *  4  :  0;  }	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    this.lineLength    =    lineLength    >    0?    (lineLength    /    4)*    4    :    0;    }    	non-compiled	[CE]  not  a  statement	87	None	replace
1576	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	227	None	replace
1577	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  >  0)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  >  0)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  >  0)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1578	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  <  =  0)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  <  =  0)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  <  =  0)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1579	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  ==  0)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  ==  0)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  ==  0)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1580	[BUG]  [BUGGY]  if(urlSafe  ||  this.lineLength  >=  0)  {  this.lineLength  =  0;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||  this.lineLength  >=  0)  {  this.lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||  this.lineLength  >=  0)  {  this.lineLength  =  0;  }	  if(urlSafe)    {    this.lineLength    =    0;    }    	non-compiled	[CE]  illegal  start  of  expression	203	None	replace
1581	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1582	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1583	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  disabled  chunk-separating  lineSeparator  =  System.arraycopy(this.line,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    disabled    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	223	None	replace
1584	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineseSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1585	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineseSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineseSeparator,    0,    this.lineseSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1586	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1587	[BUG]  [BUGGY]  if(this.lineLength  >  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.lineLength  >  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.lineLength  >  0)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1588	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1589	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1590	[BUG]  [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1591	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineLength  /  4)*  4  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineLength  /  4)*  4  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineLength  /  4)*  4  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	211	None	replace
1592	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	166	None	replace
1593	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1  [CE]  ';'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength  -  1	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  ';'  expected	166	None	replace
1594	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  not  a  statement	23	None	replace
1595	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  lineLength  -  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  lineLength  -  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  lineLength  -  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    -    1;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
1596	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.urlSafe,  0,  this.urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
1597	[BUG]  [BUGGY]  this.lineLength  >  0;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  >  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  >  0;	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  not  a  statement	222	None	replace
1598	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  +=  0;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  +=  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  +=  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  illegal  start  of  expression	222	None	replace
1599	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  >  0;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  >  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  >  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  ';'  expected	222	None	replace
1600	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  <  =  0;  }  [CE]  generics  are  not  supported  in  -source  1.4  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  <  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  <  =  0;  }	  if(urlSafe)    {    lineLength    >    0;    }    	non-compiled	[CE]  generics  are  not  supported  in  -source  1.4	222	None	replace
1601	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length];	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1602	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length  +  1];  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length  +  1];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length  +  1];	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1603	[BUG]  [BUGGY]  this.urlSafe  = "java.util.ByteArrayBuilder ";  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = "java.util.ByteArrayBuilder ";  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = "java.util.ByteArrayBuilder ";	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1604	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length()  ];  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length()  ];  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE.length()  ];	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1605	[BUG]  [BUGGY]  this.urlSafe  = "java.util.ByteArrayBuffer ";  [CE]  illegal  start  of  expression  [FE]                                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = "java.util.ByteArrayBuffer ";  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = "java.util.ByteArrayBuffer ";	  this.urlSafe    =    UUID_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
1606	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toURL();  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ").toURL();  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ").toURL();	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
1607	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")&&  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")&&  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")&&  urlSafe;	  this.urlSafe    =    System.getProperty(   "line.separator   ").toString();    	non-compiled	[CE]  illegal  start  of  expression	247	None	replace
1608	[BUG]  [BUGGY]  urlSafe  =  System.identityHashCode(URL_SAFE_ENCODE_TABLE);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.identityHashCode(URL_SAFE_ENCODE_TABLE);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.identityHashCode(URL_SAFE_ENCODE_TABLE);	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1609	[BUG]  [BUGGY]  urlSafe  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  CHUNK_SEPARATOR;	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1610	[BUG]  [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.getProperty( "line.separator ").toLowerCase();  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.getProperty( "line.separator ").toLowerCase();	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1611	[BUG]  [BUGGY]  urlSafe  =  System.identityHashCode(this);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  System.identityHashCode(this);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  System.identityHashCode(this);	  urlSafe    =    0;    	non-compiled	[CE]  illegal  start  of  expression	219	None	replace
1612	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  null;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  null;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  null;	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1613	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe)?  lineSeparator  :  urlSafe;	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1614	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe);  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe);	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1615	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  null  :  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  null  :  lineSeparator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe)?  null  :  lineSeparator;	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1616	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  null  :  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe)?  null  :  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe)?  null  :  urlSafe;	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1617	[BUG]  [BUGGY]  this.urlSafe  = " ";  [CE]  illegal  start  of  expression  [FE]                                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ";  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ";	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1618	[BUG]  [BUGGY]  this.urlSafe  = " ".equals(urlSafe)||  urlSafe;  [CE]  illegal  start  of  expression  [FE]                                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  = " ".equals(urlSafe)||  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  = " ".equals(urlSafe)||  urlSafe;	  this.urlSafe    =    lineSeparator;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
1619	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  0;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1620	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  null;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  CHUNK_SEPARATOR  :  null;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1621	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  this.lineSeparator.length  >  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  this.lineSeparator.length  >  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  this.lineSeparator.length  >  0;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1622	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  1  :  0;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  1  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  1  :  0;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1623	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe?  0  :  0;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe?  0  :  0;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1624	[BUG]  [BUGGY]  this.lineSeparator  =  URI_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  URI_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  URI_SEPARATOR;	  this.lineSeparator    =    0;    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
1625	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this.line	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1626	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1627	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  this	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    this.line    	non-compiled	[CE]  ';'  expected	157	None	replace
1628	[BUG]  [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  ||  urlSafe;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  URL_SAFE_ENCODE_TABLE  ||  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  URL_SAFE_ENCODE_TABLE  ||  urlSafe;	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1629	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  System.identityHashCode(urlSafe);  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  System.identityHashCode(urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  System.identityHashCode(urlSafe);	  this.urlSafe    =    urlSafe    ||    urlSeparator;    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
1630	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  urlSafe.length);	  System.arraycopy(urlSafe,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  expression	257	None	replace
1631	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  2);  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength  /  2);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	136	None	replace
1632	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.urlSafe,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.urlSafe,  0,  urlSafe);	  System.arraycopy(this.urlSafe,    0,    this.separator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	263	None	replace
1633	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.sep,  0,  lineLength);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1634	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1635	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_  [CE]  ')'  expected  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CHUNK_	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	81	None	replace
1636	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1637	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CH  [CE]  ')'  expected  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CH  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(CH	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	81	None	replace
1638	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.urlSafe,  0,	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
1639	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  [CE]  illegal  start  of  expression  [FE]                    NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1640	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  [CE]  illegal  start  of  expression  [FE]                      NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1641	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [CE]  illegal  start  of  expression  [FE]                        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.lineLength);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1642	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line,  0,  lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  not  a  statement	137	None	replace
1643	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.line    	non-compiled	[CE]  not  a  statement	137	None	replace
1644	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength  -  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  this.lineLength  -  1);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    this.lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  expression	217	None	replace
1645	[BUG]  [BUGGY]  System.arraycopy(this.LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.LINESeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1646	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
1647	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.line	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	234	None	replace
1648	[BUG]  [BUGGY]  this.lineLength  -=  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  -=  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  -=  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
1649	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  urlSafe);	  this.lineLength    =    lineLength    >    0?    1    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	213	None	replace
1650	[BUG]  [BUGGY]  System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  ')'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  ')'  expected	243	None	replace
1651	[BUG]  [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;  }  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(eof  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(eof  urlSafe)  {  lineLength  =  0;  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ')'  expected	188	None	replace
1652	[BUG]  [BUGGY]  if(lineLength  ==  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  ==  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  ==  0)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	188	None	replace
1653	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  line  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  line  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  line	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    line    	non-compiled	[CE]  not  a  statement	50	None	replace
1654	[BUG]  [BUGGY]  ||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1655	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  +=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  +=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  +=  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
1656	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  *  lineSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  *  lineSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  *  lineSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1657	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  this.stringSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  this.stringSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  this.stringSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1658	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  +  this.baseSeparator.length;  [CE]  illegal  start  of  expression  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  +  this.baseSeparator.length;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  +  this.baseSeparator.length;	  this.urlSafe    =    urlSafe    +    lineSeparator.length;    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
1659	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  0);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  0);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.buffer,  0,  0);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.buffer,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
1660	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  illegal  start  of  expression	198	None	replace
1661	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
1662	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlLength);    }    	non-compiled	[CE]  ';'  expected	198	None	replace
1663	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
1664	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  not  a  statement	62	None	replace
1665	[BUG]  [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  <  0?  0  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  <  0?  0  :  0;	  this.lineLength    =    lineLength    <    0?    0    :    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  illegal  start  of  expression	133	None	replace
1666	[BUG]  [BUGGY]  boolean  urlSafe  =!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe  =!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe  =!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  ';'  expected	189	None	replace
1667	[BUG]  [BUGGY]  if(this.urlSafe!=  null)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe!=  null)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe!=  null)  {  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  }	  if(!urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1668	[BUG]  [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1669	[BUG]  [BUGGY]  ||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  codeLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1670	[BUG]  [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.line,  0,  this.lineSeparator,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
1671	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineSeparator.length);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineSeparator.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.sep,  0,  this.lineSeparator.length);	  System.arraycopy(this.sep,    0,    lineSeparator,    0,    this.lineSeparator.length);    	non-compiled	[CE]  ')'  expected	47	None	replace
1672	[BUG]  [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])this.lineSeparator).arraycopy(this.buffer,  0,  lineSeparator,  this.urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1673	[BUG]  [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  new  byte[0],  urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ((  byte[])lineSeparator).arraycopy(this.buffer,  0,  new  byte[0],  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	((  byte[])lineSeparator).arraycopy(this.buffer,  0,  new  byte[0],  urlSafe);	  ((    byte[])lineSeparator).arraycopy(this.buffer,    0,    lineSeparator,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1674	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  2  :  0);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  2  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  /  2)*  2  :  0);	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    4)*    4    :    0);    	non-compiled	[CE]  ';'  expected	155	None	replace
1675	[BUG]  [BUGGY]  this.urlSafe  =  urlSafe  ||  super.urlSafe;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  urlSafe  ||  super.urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  urlSafe  ||  super.urlSafe;	  this.urlSafe    =    urlSafe    ||    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
1676	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  2);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  2);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  2);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    /    2);    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
1677	[BUG]  [BUGGY]  safe)  {  lineLength  -=  0;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  -=  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  -=  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
1678	[BUG]  [BUGGY]  safe)  {  lineLength  /=  0;  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  /=  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  /=  0;	  safe)    {    lineLength    =    0;    	non-compiled	[CE]  not  a  statement	3	None	replace
1679	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ')'  expected	49	None	replace
1680	[BUG]  [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS  [CE]  not  a  statement  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  not  a  statement	49	None	replace
1681	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.lineSeparator,  0,  lineLength  -  this.lineSeparator);	  System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength    -    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	134	None	replace
1682	[BUG]  [BUGGY]  System.arraycopy(LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(LINE_SEPARATOR,  0,  this.lineSeparator,  0,  lineLength);	  System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
1683	[BUG]  [BUGGY]  safeToInt(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeToInt(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeToInt(lineSeparator))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1684	[BUG]  [BUGGY]  safeStackTrace())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeStackTrace())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeStackTrace())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1685	[BUG]  [BUGGY]  safeTree())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeTree())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeTree())  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safely())    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	184	None	replace
1686	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  illegal  start  of  expression	261	None	replace
1687	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  this.lineLength  =  lineLength;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    this.lineLength    =    lineLength;    }    	non-compiled	[CE]  ';'  expected	261	None	replace
1688	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]              NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1689	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  urlSafe);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1690	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  this.urlSafe);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  this.urlSafe);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
1691	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  null;  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  null;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  null;	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1692	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  Collections.EMPTY_LIST;  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  Collections.EMPTY_LIST;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe).toByteArray()  :  Collections.EMPTY_LIST;	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  illegal  start  of  expression	245	None	replace
1693	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [CE]  :  expected  [FE]                                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe);	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  :  expected	245	None	replace
1694	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe):  System.getProperty( "line.separator ").toBy  [CE]  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe):  System.getProperty( "line.separator ").toBy  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "line.separator ")?  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  urlSafe):  System.getProperty( "line.separator ").toBy	  this.urlSafe    =    System.getProperty(   "line.separator   ").toByteArray();    	non-compiled	[CE]  	245	None	replace
1695	[BUG]  [BUGGY]  System.arraycopy(urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(urlSafe,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(this.urlSafe,    0,    lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	71	None	replace
1696	[BUG]  [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                  NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  lineLength);  }  else  {  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  1,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    1,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	231	None	replace
1697	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  6)*  4  :  0;  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  6)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  6)*  4  :  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    /    6)*    4    :    0;    	non-compiled	[CE]  illegal  start  of  expression	153	None	replace
1698	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "urlSafe ");  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "urlSafe ");  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "urlSafe ");	  this.urlSafe    =    System.getProperty(   "line.separator   ");    	non-compiled	[CE]  illegal  start  of  expression	244	None	replace
1699	[BUG]  [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.lineSeparator,  0,  this.urlSafe,  0,  this.urlSafe);	  System.arraycopy(this.urlSafe,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	207	None	replace
1700	[BUG]  [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  }  [CE]  ')'  expected  [FE]            NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  }  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  if(urlSafe)  {  System.arraycopy(this.separator,  0,  this.separator,  0,  lineLength);  }	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	228	None	replace
1701	[BUG]  [BUGGY]  urlSafe)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe)  {  lineLength  =  0;  }	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
1702	[BUG]  [BUGGY]  safe)  {  lineLength  -=  0;  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safe)  {  lineLength  -=  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safe)  {  lineLength  -=  0;  }	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
1703	[BUG]  [BUGGY]  safety)  {  lineLength  =  0;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safety)  {  lineLength  =  0;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safety)  {  lineLength  =  0;  }	  safe)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	128	None	replace
1704	[BUG]  [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	237	None	replace
1705	[BUG]  [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    this.urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	237	None	replace
1706	[BUG]  [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(this.urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1707	[BUG]  [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe);    }    	non-compiled	[CE]  illegal  start  of  expression	182	None	replace
1708	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe,  lineSeparator);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe,  lineSeparator);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe,  lineSeparator);	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  ';'  expected	224	None	replace
1709	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe,  lineSeparator;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe,  lineSeparator;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe,  lineSeparator;	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  ';'  expected	224	None	replace
1710	[BUG]  [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineSeparator  =  urlSafe  ||  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineSeparator  =  urlSafe  ||  urlSafe);	  this.lineSeparator    =    urlSafe;    	non-compiled	[CE]  ';'  expected	224	None	replace
1711	[BUG]  [BUGGY]  System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [CE]  ')'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_ENCODE_TABLE,  0,  this.urlSafe,  0,  urlSafe.length);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.urlSafe,    0,    urlSafe.length);    	non-compiled	[CE]  ')'  expected	255	None	replace
1712	[BUG]  [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE].urlSafe;  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE].urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  new  byte[URL_SAFE_ENCODE_TABLE].urlSafe;	  this.urlSafe    =    URL_SAFE_ENCODE_TABLE;    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
1713	[BUG]  [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.urlSafe,  0,  this.buffer,  0,  this.urlSafe);	  System.arraycopy(this.buffer,    0,    this.lineSeparator,    0,    this.urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	173	None	replace
1714	[BUG]  [BUGGY]  (lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0);  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  (lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	(lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0);	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
1715	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe));	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  ';'  expected	220	None	replace
1716	[BUG]  [BUGGY]  (lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0;  [CE]  not  a  statement  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  (lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	(lineLength  >  0)?(lineSeparator.length  /  4)*  4  :  0;	  0)    {    lineLength    =    0;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
1717	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(lineSeparator,  0,	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(lineSeparator,    0,    	non-compiled	[CE]  not  a  statement	24	None	replace
1718	[BUG]  [BUGGY]  System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  this.lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(sourceSeparator,  0,  this.lineSeparator,  0,  this.lineLength);	  System.arraycopy(sourceSeparator,    0,    this.lineSeparator,    0,    lineLength);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1719	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  1;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  1;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  1;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	187	None	replace
1720	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [CE]  ')'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ')'  expected	236	None	replace
1721	[BUG]  [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  lineLength);  }	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	236	None	replace
1722	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
1723	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  not  a  statement  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;  }  else  {  enable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safe)    {    lineLength    =    0;    }    else    {    enable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	63	None	replace
1724	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }  [CE]  ')'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  ')'  expected	249	None	replace
1725	[BUG]  [BUGGY]  boolean  urlSafe  =  urlSafe.equals( " "))  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe  =  urlSafe.equals( " "))  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe  =  urlSafe.equals( " "))  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  	249	None	replace
1726	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  expression	249	None	replace
1727	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  'else'  without  'if'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;    }    else    {    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  'else'  without  'if'	249	None	replace
1728	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_SIZE,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	181	None	replace
1729	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S,  0,  lineS  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(CHUNK_S,  0,  lineS	  eof    urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineS    	non-compiled	[CE]  ';'  expected	181	None	replace
1730	[BUG]  [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  lineLength);  [CE]  'else'  without  'if'  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(URL_SAFE_ENCODE_TABLE,  0,  this.urlSeparator,  0,  lineLength);	  System.arraycopy(URL_SAFE_ENCODE_TABLE,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  'else'  without  'if'	144	None	replace
1731	[BUG]  [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  this.urlSafe)  {  lineLength  =  0;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1732	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  +=  0;  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  +=  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  +=  0;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1733	[BUG]  [BUGGY]  ||  urlSafe)  {  lineLength  =  4;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe)  {  lineLength  =  4;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe)  {  lineLength  =  4;	  ||    urlSafe)    {    lineLength    =    0;    	non-compiled	[CE]  illegal  start  of  expression	131	None	replace
1734	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  ';'  expected	61	None	replace
1735	[BUG]  [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  this.urlSafe)  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1736	[BUG]  [BUGGY]  ||(urlSafe  &&  urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||(urlSafe  &&  urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||(urlSafe  &&  urlSafe))  {  lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  ||    urlSafe)    {    lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
1737	[BUG]  [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	boolean  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	156	None	replace
1738	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1739	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1740	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1741	[BUG]  [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	eof  urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineLength);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  ';'  expected	156	None	replace
1742	[BUG]  [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [CE]  illegal  start  of  expression  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineLength);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	156	None	replace
1743	[BUG]  [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  not  a  statement  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  this.lineLength  =  0;  }  else  {  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  safe)    {    this.lineLength    =    0;    }    else    {    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  not  a  statement	60	None	replace
1744	[BUG]  [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineS	  safe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineS    	non-compiled	[CE]  not  a  statement	115	None	replace
1745	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe  +  File.separator;  [CE]  illegal  start  of  expression  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe  +  File.separator;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe  +  File.separator;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
1746	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe  +  File.separatorChar;  [CE]  illegal  start  of  type  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe  +  File.separatorChar;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe  +  File.separatorChar;	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
1747	[BUG]  [BUGGY]  this.urlSafe  |=  urlSafe,  eof  urlSafe);  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  |=  urlSafe,  eof  urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  |=  urlSafe,  eof  urlSafe);	  this.urlSafe    |=    urlSafe;    	non-compiled	[CE]  ';'  expected	92	None	replace
1748	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.url " ")+ "  urlSafe;  [CE]  [FE]                                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.url " ")+ "  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.url " ")+ "  urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  	248	None	replace
1749	[BUG]  [BUGGY]  this.urlSafe  =  System.getProperty( "user.dir ")+ "  urlSafe;  [CE]  unclosed  string  literal  [FE]                                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.urlSafe  =  System.getProperty( "user.dir ")+ "  urlSafe;  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.urlSafe  =  System.getProperty( "user.dir ")+ "  urlSafe;	  this.urlSafe    =    System.getProperty(   "user.url   ")+   "    urlSafe;    	non-compiled	[CE]  unclosed  string  literal	248	None	replace
1750	[BUG]  [BUGGY]  if(lineLength  >  0)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(lineLength  >  0)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(lineLength  >  0)  {  this.lineLength  =  lineLength;//  disable  chunk-separating  lineSeparator  =  urlSafe;  }	  this.lineLength    =    lineLength;//    disable    chunk-separating    lineSeparator    =    urlSafe;    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
1751	[BUG]  [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(chunkSeparator,  0,  this.lineSeparator,  0,  this.urlSafe);	  System.arraycopy(chunkSeparator,    0,    this.lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
1752	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.urlSafe.length  -  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    urlSafe.length);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
1753	[BUG]  [BUGGY]  safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeTree())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1754	[BUG]  [BUGGY]  safeStackTrace())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  safeStackTrace())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	safeStackTrace())  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  safely())    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    	non-compiled	[CE]  ';'  expected	141	None	replace
1755	[BUG]  [BUGGY]  System.arraycopy(this.encodePath,  0,  this.encodePath,  0,  lineLength);  [CE]  illegal  start  of  expression  [FE]        NullPointerException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(this.encodePath,  0,  this.encodePath,  0,  lineLength);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(this.encodePath,  0,  this.encodePath,  0,  lineLength);	          System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    if(urlSafe)    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    else    {    System.arraycopy(this.lineSeparator,    0,    this.lineSeparator,    0,    lineLength);    }    	non-compiled	[CE]  illegal  start  of  expression	226	None	replace
1756	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?  1  :  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe);	  this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    System.arraycopy(this.lineSeparator,    0,    lineSeparator,    0,    urlSafe);    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1757	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    }    	non-compiled	[CE]  illegal  start  of  expression	142	None	replace
1758	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  1):  0;  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  *  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
1759	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  1):  0;  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >  0?(lineSeparator.length  %  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1760	[BUG]  [BUGGY]  this.lineLength  =  lineLength  >=  0?(lineSeparator.length  -  1):  0;  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  lineLength  >=  0?(lineSeparator.length  -  1):  0;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  lineLength  >=  0?(lineSeparator.length  -  1):  0;	  this.lineLength    =    lineLength    >    0?(lineSeparator.length    -    1):    0;    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
1761	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1762	[BUG]  [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe)  {  this.lineLength  =  0;  }  else  {  System.arraycopy(this.lineSeparator,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1763	[BUG]  [BUGGY]  This.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  This.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	This.lineLength  =  0;//  disable  chunk-separating  lineSeparator  =  CHUNK_SEPARATOR;	  if(urlSafe)    {    this.lineLength    =    0;//    disable    chunk-separating    lineSeparator    =    CHUNK_SEPARATOR;    }    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1764	[BUG]  [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  1);  [BUGGY]      lineLength  =  0;//  disable  chunk-separating    lineSeparator  =  CHUNK_SEPARATOR;  //  this  just  gets  ignored    }  lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	System.arraycopy(CHUNK_SEPARATOR,  0,  this.lineSeparator,  0,  this.lineLength  /  1);	  System.arraycopy(CHUNK_SEPARATOR,    0,    this.lineSeparator,    0,    lineLength    -    1);    	non-compiled	[CE]  illegal  start  of  type	112	None	replace
1765	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
1766	[BUG]  [BUGGY]  ||  urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  ||  urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	||  urlSafe  ==  null)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
1767	[BUG]  [BUGGY]  if(urlSafe  ||!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  if(urlSafe  ||!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	if(urlSafe  ||!urlSafe)  {  lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
1768	[BUG]  [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	this.lineLength  =  0;//  disable  chunk-separating  lineSeparator;  System.arraycopy(CHUNK_SEPARATOR,  0,  lineSeparator,  0,  urlSafe.length);  }	  if(urlSafe)    {    lineLength    =    0;//    disable    chunk-separating    lineSeparator;    System.arraycopy(CHUNK_SEPARATOR,    0,    lineSeparator,    0,    urlSafe.length);    }    	non-compiled	[CE]  illegal  start  of  expression	260	None	replace
1769	[BUG]  [BUGGY]  urlSafe  =  eof  urlSafe  ||!urlSafe;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  urlSafe  ||!urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  urlSafe  ||!urlSafe;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
1770	[BUG]  [BUGGY]  urlSafe  =  eof  urlSafe  ||  urlSafe!=  null;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  urlSafe  ||  urlSafe!=  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  urlSafe  ||  urlSafe!=  null;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
1771	[BUG]  [BUGGY]  urlSafe  =  eof  this.urlSafe;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  this.urlSafe;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  this.urlSafe;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
1772	[BUG]  [BUGGY]  urlSafe  =  eof  urlSafe  ||  urlSafe  ==  null;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      public  Base64(int  lineLength,  byte[]  lineSeparator,  boolean  urlSafe)  {  if  (lineSeparator  ==  null)  {      [BUGGY]  urlSafe  =  eof  urlSafe  ||  urlSafe  ==  null;  [BUGGY]      lineSeparator  =  CHUNK_SEPARATOR;//  this  just  gets  ignored  }  this.lineLength  =  lineLength  >  0  ?  (lineLength  /  4)  *  4  :  0;  this.lineSeparator  =  new  byte[lineSeparator.length];  System.arraycopy(lineSeparator,  0,  this.lineSeparator,  0,  lineSeparator.length);  if  (lineLength  >  0)  {  this.encodeSize  =  4  +  lineSeparator.length;  }  else  {  this.encodeSize  =  4;  }  [CLASS]  Base64  [METHOD]  <init>  [RETURN_TYPE]  Base64(int,byte[],boolean)  int  lineLength  byte[]  lineSeparator  boolean  urlSafe  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  String  sep  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	1.0	334	336	1	replace	urlSafe  =  eof  urlSafe  ||  urlSafe  ==  null;	  urlSafe    =    eof    urlSafe;    	non-compiled	[CE]  ';'  expected	221	None	replace
