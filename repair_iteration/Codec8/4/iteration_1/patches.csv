bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  pos  =  readPos  +  1;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  readPos  +  1;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  1;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
2	[BUG]  [BUGGY]  pos  =  0;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
3	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
4	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
5	[BUG]  [BUGGY]  pos  =  readPos  -  1;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  readPos  -  1;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  -  1;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
6	[BUG]  [BUGGY]  pos  =  0,  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  0,  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  0,  readPos  =  0;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
7	[BUG]  [BUGGY]  pos  =  buffer.length;  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  buffer.length;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  buffer.length;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
8	[BUG]  [BUGGY]  pos  =  readPos  +  2;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  readPos  +  2;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  readPos  +  2;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
9	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  1];	  byte[]    b    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	15	None	replace
10	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  -  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  -  1];	  byte[]    b    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	15	None	replace
11	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  1];	  byte[]    b    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	15	None	replace
12	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  6  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  6  +  1];	  byte[]    b    =    new    byte[buffer.length    *    6];    	non-compiled	[CE]  ';'  expected	17	None	replace
13	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  10];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  10];	  byte[]    b    =    new    byte[buffer.length    *    6];    	non-compiled	[CE]  ';'  expected	17	None	replace
14	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  5];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  5];	  byte[]    b    =    new    byte[buffer.length    *    6];    	non-compiled	[CE]  ';'  expected	17	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
16	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
17	[BUG]  [BUGGY]  readPos  =  readPos;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  readPos  =  readPos;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos;	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
18	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
19	[BUG]  [BUGGY]  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  0;	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
20	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
21	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
22	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
23	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  8  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  8  +  1];	  byte[]    b    =    new    byte[buffer.length    *    8];    	non-compiled	[CE]  ';'  expected	16	None	replace
24	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
25	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
26	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
27	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
28	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
29	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
30	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
32	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
33	[BUG]  [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
34	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
35	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
36	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arra	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
37	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
38	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  1];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
39	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  4];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  4];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
40	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
41	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  3];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  3];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  3];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
42	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  16];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  16];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  16];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
43	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  8];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  8];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  8];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
44	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  1];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  1];	  byte[]    b    =    new    byte[buffer.length    *    16];    	non-compiled	[CE]  ';'  expected	18	None	replace
45	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  32];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  32];	  byte[]    b    =    new    byte[buffer.length    *    16];    	non-compiled	[CE]  ';'  expected	18	None	replace
46	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  24];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  24];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  24];	  byte[]    b    =    new    byte[buffer.length    *    16];    	non-compiled	[CE]  ';'  expected	18	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  +  1);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
52	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos  -  1);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
53	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
54	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
55	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
56	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
57	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
58	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
59	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
61	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
62	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
63	[BUG]  [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	readPos  =  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_RESIZE_FACTOR);  readPos  =  0;	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos);  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  pos,  readPos,  readPos);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  readPos,  readPos);  readPos  =  0;	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
66	[BUG]  [BUGGY]  if(pos  <  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  <  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  <  readPos)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
67	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
68	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
69	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
70	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
71	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	28	None	replace
72	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	28	None	replace
73	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
74	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
75	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
76	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
77	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
78	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
79	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
80	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
81	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
82	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
83	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
84	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
85	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
86	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
87	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
88	[BUG]  [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[2  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
89	[BUG]  [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[3  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
90	[BUG]  [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[5  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
91	[BUG]  [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[6  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
92	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
93	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  2];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  2];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
94	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  4];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  4];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
95	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
96	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
97	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
98	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
99	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
100	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  1];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  1];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
101	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];  [CE]  ';'  expected  [FE]                                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  readPos];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
102	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  8];  [CE]  ';'  expected  [FE]                                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  8];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  8];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
103	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2);  [CE]  ';'  expected  [FE]                                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
104	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
105	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
106	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
107	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  1];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
108	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  2];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
109	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  1  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  1  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
110	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
111	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
112	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
113	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  readPos];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  *  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  readPos];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
114	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1L  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
115	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
116	[BUG]  [BUGGY]  byte[]  b  =  new  byte[128];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[128];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[128];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
117	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
118	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  2];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  2];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
119	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  4];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  4];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
120	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
121	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
122	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  3];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  3];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
123	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  1];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
124	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  1];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  1];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
125	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  8];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  8];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  8];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
126	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  10];  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  10];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  10];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
127	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	7	None	replace
128	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	7	None	replace
129	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
130	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
131	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
132	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
133	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
134	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
136	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
137	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
138	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  2];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  2];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
139	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  4];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  4];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
140	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  3];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  3];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  3];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
141	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  16];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  16];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  16];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
142	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  8];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  8];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  8];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
143	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  6];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  6];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  6];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
144	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  2];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  2];	  byte[]    b    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	12	None	replace
145	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  3];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  3];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  3];	  byte[]    b    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	12	None	replace
146	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  16];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  16];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  16];	  byte[]    b    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	12	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
148	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
149	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
150	[BUG]  [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
151	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
152	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);  pos  =  0;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  1;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  1;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos);  pos  =  1;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  0;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  pos  =  0;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
156	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  readPos);  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  0,  readPos);  pos  =  0;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
157	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
158	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
159	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
160	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
161	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
162	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
163	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
164	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	1	None	replace
165	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  6];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  6];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  6];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	1	None	replace
166	[BUG]  [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[pos  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	21	None	replace
167	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  6];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  6];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  6];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	21	None	replace
168	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
169	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
170	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
171	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
172	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  readPos,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  readPos,  0,  readPos);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
173	[BUG]  [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  ||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	||  readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
174	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
175	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  2];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
176	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
177	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
178	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
179	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
180	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
181	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
182	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  2];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  2];	  byte[]    b    =    new    byte[buffer.length    *    3];    	non-compiled	[CE]  ';'  expected	14	None	replace
183	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  3  +  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  3  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    3];    	non-compiled	[CE]  ';'  expected	14	None	replace
184	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  6];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  2  +  6];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  2  +  6];	  byte[]    b    =    new    byte[buffer.length    *    2];    	non-compiled	[CE]  ';'  expected	11	None	replace
185	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  7];  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  7];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  7];	  byte[]    b    =    new    byte[buffer.length    *    6];    	non-compiled	[CE]  ';'  expected	17	None	replace
186	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	37	None	replace
187	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	37	None	replace
188	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  p,  0,  readPos);  pos  =  0;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
189	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  0;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  c,  0,  readPos);  pos  =  0;	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    pos    =    0;    	non-compiled	[CE]  ';'  expected	23	None	replace
190	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  16  +  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  16  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    16];    	non-compiled	[CE]  ';'  expected	18	None	replace
191	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
192	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_SIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
193	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_SIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
194	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	10	None	replace
195	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	35	None	replace
196	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	35	None	replace
197	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
198	[BUG]  [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
199	[BUG]  [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  -1)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
200	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
201	[BUG]  [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
202	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
203	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
204	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
205	[BUG]  [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
206	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
207	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
208	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  readP	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
209	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
210	[BUG]  [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
211	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  DEFAULT_BUFFER_SIZE);  readPos  =  0;  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    readPos    =    0;    }    	non-compiled	[CE]  ';'  expected	26	None	replace
212	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  bytes,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  bytes,  0,  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
213	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  0,  readPos,  pos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
214	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
215	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
216	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
217	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
218	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
219	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
220	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
221	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
222	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
223	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
224	[BUG]  [BUGGY]  pos  =  1;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  1;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  1;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
225	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  DEFAULT_BUFFER_SIZE  +  readPos;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_SIZE  +  readPos;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
226	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  +  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  +  readPos];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
227	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE  +  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
228	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  +  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[buffer.length    +    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	13	None	replace
229	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  4];  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
230	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  3];  readPos  =  0;	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
231	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
232	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
233	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
234	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
235	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  readPos,  readPos  +  1);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
236	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  4  +  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  4  +  readPos];	  byte[]    b    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	12	None	replace
237	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  /  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  /  4];	  byte[]    b    =    new    byte[buffer.length    *    4];    	non-compiled	[CE]  ';'  expected	12	None	replace
238	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
239	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
240	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
241	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
242	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  1];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  readPos  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  readPos  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
243	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE  +  1];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
244	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
245	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
246	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
247	[BUG]  [BUGGY]  byte[]  b  =  new  byte[readPos  *  16];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[readPos  *  16];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[readPos  *  16];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	21	None	replace
248	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
249	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
250	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
251	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
252	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
253	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
254	[BUG]  [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[Buffer.length  *  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[Buffer.length  *  2];	  byte[]    b    =    new    byte[buffer.length    *    1];    	non-compiled	[CE]  ';'  expected	15	None	replace
255	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	28	None	replace
256	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	28	None	replace
257	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4  *  readPos];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4  *  readPos];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4  *  readPos];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
258	[BUG]  [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[16  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
259	[BUG]  [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[10  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
260	[BUG]  [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	7	None	replace
261	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arra	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	7	None	replace
262	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
263	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  2];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  2];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  2];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
264	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  1];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  1];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  1];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
265	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
266	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	1	None	replace
267	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[1  *  DEFAULT_BUFFER_RESIZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	1	None	replace
268	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_ReZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_ReZE_FACTOR];  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[readPos  *  DEFAULT_BUFFER_ReZE_FACTOR];	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	1	None	replace
269	[BUG]  [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
270	[BUG]  [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
271	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
272	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
273	[BUG]  [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	char[]  buffer  =  new  char[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
274	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
275	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arra	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
276	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
277	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
278	[BUG]  [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
279	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  readPos  +  1);  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
280	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
281	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
282	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	3	None	replace
283	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	2	None	replace
284	[BUG]  [BUGGY]  byte[]  b  =  new  byte[4];  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[4];	  byte[]    b    =    new    byte[4    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	22	None	replace
285	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
286	[BUG]  [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
287	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    bu    	non-compiled	[CE]  ';'  expected	34	None	replace
288	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer    	non-compiled	[CE]  ';'  expected	33	None	replace
289	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
290	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
291	[BUG]  [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }  [CE]  ';'  expected  [FE]                            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >=  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  }  else  {  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	9	None	replace
292	[BUG]  [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  <  =  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
293	[BUG]  [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
294	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [CE]  ';'  expected  [FE]                          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	8	None	replace
295	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
296	[BUG]  [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos!=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos!=  0)  {  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    buffer    =    	non-compiled	[CE]  ';'  expected	30	None	replace
297	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
298	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    b,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	31	None	replace
299	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos);  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  pos,  buffer,  0,  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
300	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos);  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  buffer,  1,  readPos);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  buffer,  1,  readPos);	      System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	4	None	replace
301	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
302	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  readPos,  0,  buffer.length);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    readPos,    0,    buffer.length);    	non-compiled	[CE]  ';'  expected	25	None	replace
303	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(bu	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
304	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.array	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
305	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
306	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
307	[BUG]  [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(pos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  else  {  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  System.arraycopy(buffer,	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    }    else    {    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    System.arraycopy(buffer,    0,    	non-compiled	[CE]  ';'  expected	29	None	replace
308	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_SIZE];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_SIZE];    	non-compiled	[CE]  ';'  expected	21	None	replace
309	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  3];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
310	[BUG]  [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  4];	  byte[]    b    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR    +    1];    	non-compiled	[CE]  ';'  expected	36	None	replace
311	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  DEFAULT_BUFFER_RESIZE_FACTOR,  readPos);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    readPos,    readPos);    }    	non-compiled	[CE]  ';'  expected	27	None	replace
312	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
313	[BUG]  [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer  ==  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
314	[BUG]  [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
315	[BUG]  [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [CE]  ';'  expected  [FE]                        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  <  2)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    buffer.length);    readPos    =    0;    	non-compiled	[CE]  ';'  expected	6	None	replace
316	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  DEFAULT_BUFFER_SIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
317	[BUG]  [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[1  <  <  decodeSize  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[1    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	20	None	replace
318	[BUG]  [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [CE]  ';'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];  [BUGGY]    System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	byte[]  b  =  new  byte[size  *  DEFAULT_BUFFER_RESIZE_FACTOR];	  byte[]    b    =    new    byte[readPos    *    DEFAULT_BUFFER_RESIZE_FACTOR];    	non-compiled	[CE]  ';'  expected	19	None	replace
319	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
320	[BUG]  [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  ==  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
321	[BUG]  [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer!=  null)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  readPos  =  0;  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR];    readPos    =    0;    	non-compiled	[CE]  ';'  expected	5	None	replace
322	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR  +  readPos;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
323	[BUG]  [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	pos  =  DEFAULT_BUFFER_RESIZE_FACTOR.length;	      pos    =    readPos;    	non-compiled	[CE]  ';'  expected	24	None	replace
324	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [CE]  ';'  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  buffer.length);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
325	[BUG]  [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [CE]  ';'  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(readPos  >  0)  {  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  System.arraycopy(buffer,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR  +  1);  }	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
326	[BUG]  [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	System.arraycopy(buffer,  0,  b,  0,  buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR);	      if(readPos    >    0)    {    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    System.arraycopy(buffer,    0,    buffer.length    *    DEFAULT_BUFFER_RESIZE_FACTOR);    }    	non-compiled	[CE]  ';'  expected	32	None	replace
327	[BUG]  [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [CE]  ';'  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    private  void  resizeBuffer()  {  if  (buffer  ==  null)  {  buffer  =  new  byte[DEFAULT_BUFFER_SIZE];  pos  =  0;  readPos  =  0;  }  else  {    [BUGGY]  if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }  [BUGGY]    byte[]  b  =  new  byte[buffer.length  *  DEFAULT_BUFFER_RESIZE_FACTOR];  System.arraycopy(buffer,  0,  b,  0,  buffer.length);  buffer  =  b;  }  }  [CLASS]  Base64  [METHOD]  resizeBuffer  [RETURN_TYPE]  void  [VARIABLES]  byte[]  CHUNK_SEPARATOR  DECODE_TABLE  STANDARD_ENCODE_TABLE  URL_SAFE_ENCODE_TABLE  b  buffer  encodeTable  lineSeparator  boolean  eof  urlSafe  byte  PAD  int  DEFAULT_BUFFER_RESIZE_FACTOR  DEFAULT_BUFFER_SIZE  MASK_6BITS  MASK_8BITS  MIME_CHUNK_SIZE  PEM_CHUNK_SIZE  currentLinePos  decodeSize  encodeSize  lineLength  modulus  pos  readPos  x  	projects/Codec8/src/java/org/apache/commons/codec/binary/Base64.java	0.5773502691896258	388	388	1	replace	if(buffer.length  >  0)  {  byte[]  buffer  =  new  byte[buffer.length  *  DEFAULT_BUFFER_SIZE_FACTOR];  System.arraycopy(buffer,  0,  buffer,  0,  readPos);  }	      byte[]    buffer    =    new    byte[buffer.length    *    DEFAULT_BUFFER_SIZE_FACTOR];    System.arraycopy(buffer,    0,    buffer,    0,    readPos);    	non-compiled	[CE]  ';'  expected	7	None	replace
